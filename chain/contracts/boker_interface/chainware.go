// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package boker_contract

import (
	"math/big"
	"strings"

	"github.com/Tinachain/Tina/chain/accounts/abi"
	"github.com/Tinachain/Tina/chain/accounts/abi/bind"
	"github.com/Tinachain/Tina/chain/common"
	"github.com/Tinachain/Tina/chain/core/types"
)

// ChainwareABI is the input ABI used to generate the binding from.
const ChainwareABI = "[{\"constant\":false,\"inputs\":[],\"name\":\"houseHoldAllTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint64\"},{\"name\":\"taskGas\",\"type\":\"uint256\"},{\"name\":\"codeHash\",\"type\":\"string\"},{\"name\":\"taskIp\",\"type\":\"string\"}],\"name\":\"taskOrderRequest\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"},{\"name\":\"orderId\",\"type\":\"bytes32\"},{\"name\":\"reason\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cName\",\"type\":\"string\"}],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"nodeSets\",\"outputs\":[{\"name\":\"nodeAddr\",\"type\":\"address\"},{\"name\":\"hashRate\",\"type\":\"uint256\"},{\"name\":\"lastHashRate\",\"type\":\"uint256\"},{\"name\":\"assignCnt\",\"type\":\"uint256\"},{\"name\":\"assignedClient\",\"type\":\"bytes32\"},{\"name\":\"enrollTime\",\"type\":\"uint256\"},{\"name\":\"enrolled\",\"type\":\"bool\"},{\"name\":\"nodeID\",\"type\":\"bytes32\"},{\"name\":\"nextNode\",\"type\":\"address\"},{\"name\":\"prevNode\",\"type\":\"address\"},{\"name\":\"nodeIp\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"address\"}],\"name\":\"computingNodeDisconnect\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CWARE_Token_Addr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"taskOrderList\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAllNodeSet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hashRate\",\"type\":\"uint64\"}],\"name\":\"computingNodeEnroll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bokerManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"name\":\"getTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint64\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"name\":\"isActiveOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAllTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"name\":\"taskOrderCancel\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"address\"},{\"name\":\"orderID\",\"type\":\"bytes32\"},{\"name\":\"realGas\",\"type\":\"uint256\"},{\"name\":\"resultHash\",\"type\":\"string\"}],\"name\":\"computingTaskComplete\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderBook\",\"outputs\":[{\"name\":\"client\",\"type\":\"address\"},{\"name\":\"computeNode\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"uint8\"},{\"name\":\"_state\",\"type\":\"uint32\"},{\"name\":\"index\",\"type\":\"uint64\"},{\"name\":\"createTime\",\"type\":\"uint256\"},{\"name\":\"assignTime\",\"type\":\"uint256\"},{\"name\":\"completeTime\",\"type\":\"uint256\"},{\"name\":\"listPtr\",\"type\":\"uint256\"},{\"name\":\"taskGas\",\"type\":\"uint256\"},{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"name\":\"getOneTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigInt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getOrderBookCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numComputeNode\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"},{\"name\":\"cware_token\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_client\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_indexID\",\"type\":\"uint64\"},{\"indexed\":true,\"name\":\"_computeNode\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_taskGas\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_createTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_state\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"ClientEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_node\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_hashRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_enrollTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"NodeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_client\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_index\",\"type\":\"uint64\"},{\"indexed\":true,\"name\":\"_computeNode\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_taskGas\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_assignTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_codeHash\",\"type\":\"string\"}],\"name\":\"AssignEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_client\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_index\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"_computeNode\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_completeTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_resultHash\",\"type\":\"string\"}],\"name\":\"CompleteEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_client\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_computeNode\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"LogEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// ChainwareBin is the compiled bytecode used for deploying new contracts.
const ChainwareBin = `60806040526040805190810160405280600581526020017f312e302e3100000000000000000000000000000000000000000000000000000081525060019080519060200190620000519291906200032b565b50426002553480156200006357600080fd5b5060405160408062005bc6833981018060405281019080805190602001909291908051906020019092919050505081336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000ec81620001ca640100000000026401000000009004565b506000600581905550600060068190555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620003da565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200023457600080fd5b505af115801562000249573d6000803e3d6000fd5b505050506040513d60208110156200026057600080fd5b81019080805190602001909291905050501515620002e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036e57805160ff19168380011785556200039f565b828001600101855582156200039f579182015b828111156200039e57825182559160200191906001019062000381565b5b509050620003ae9190620003b2565b5090565b620003d791905b80821115620003d3576000816000905550600101620003b9565b5090565b90565b6157dc80620003ea6000396000f30060806040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630414fc4a146101645780630a2d0cd6146101935780631eb726af146102f35780632324e6b01461039c57806323ac273f146103c75780632d5f6f6214610561578063378298bc146105bc5780634602a1271461069e578063480e46db146106f55780634e580dd01461073e57806354fd4d501461076d5780635b2be05d146107fd57806361dcd7ab1461087f57806366ebc1c6146108aa5780636f363fa9146109015780637e0c345814610a7e5780638da5cb5b14610ac757806396854ba414610b1e578063982a4afe14610b4d5780639eaabf7614610b96578063bd1bceca14610c4f578063cf7da04b14610d68578063d0ebdbe714610db1578063d43c802114610df4578063e35ab3e814610e71578063ef16b54c14610e9c578063f2fde38b14610ec7575b600080fd5b34801561017057600080fd5b50610179610f0a565b604051808215151515815260200191505060405180910390f35b34801561019f57600080fd5b5061025e600480360381019080803567ffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611222565b6040518084151515158152602001836000191660001916815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102b657808201518184015260208101905061029b565b50505050905090810190601f1680156102e35780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156102ff57600080fd5b5061035a600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611ce1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103a857600080fd5b506103b1611f8f565b6040518082815260200191505060405180910390f35b3480156103d357600080fd5b50610408600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f95565b604051808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018b81526020018a815260200189815260200188600019166000191681526020018781526020018615151515815260200185600019166000191681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561051c578082015181840152602081019050610501565b50505050905090810190601f1680156105495780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b34801561056d57600080fd5b506105a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120f4565b604051808215151515815260200191505060405180910390f35b3480156105c857600080fd5b50610623600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506124c6565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610663578082015181840152602081019050610648565b50505050905090810190601f1680156106905780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106aa57600080fd5b506106b3612656565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561070157600080fd5b506107206004803603810190808035906020019092919050505061267c565b60405180826000191660001916815260200191505060405180910390f35b34801561074a57600080fd5b5061075361269f565b604051808215151515815260200191505060405180910390f35b34801561077957600080fd5b5061078261282f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107c25780820151818401526020810190506107a7565b50505050905090810190601f1680156107ef5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561080957600080fd5b50610832600480360381019080803567ffffffffffffffff1690602001909291905050506128cd565b60405180831515151581526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b34801561088b57600080fd5b50610894612c6c565b6040518082815260200191505060405180910390f35b3480156108b657600080fd5b506108bf612c72565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561090d57600080fd5b506109306004803603810190808035600019169060200190929190505050612c98565b60405180881515151581526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018667ffffffffffffffff1667ffffffffffffffff1681526020018581526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156109d65780820151818401526020810190506109bb565b50505050905090810190601f168015610a035780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610a3c578082015181840152602081019050610a21565b50505050905090810190601f168015610a695780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b348015610a8a57600080fd5b50610aad6004803603810190808035600019169060200190929190505050612f2a565b604051808215151515815260200191505060405180910390f35b348015610ad357600080fd5b50610adc612fd1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b2a57600080fd5b50610b33612ff6565b604051808215151515815260200191505060405180910390f35b348015610b5957600080fd5b50610b7c60048036038101908080356000191690602001909291905050506131be565b604051808215151515815260200191505060405180910390f35b348015610ba257600080fd5b50610c35600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560001916906020019092919080359060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506137a9565b604051808215151515815260200191505060405180910390f35b348015610c5b57600080fd5b50610c7e6004803603810190808035600019169060200190929190505050614253565b604051808c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a6004811115610cf257fe5b60ff1681526020018963ffffffff1663ffffffff1681526020018867ffffffffffffffff1667ffffffffffffffff16815260200187815260200186815260200185815260200184815260200183815260200182600019166000191681526020019b50505050505050505050505060405180910390f35b348015610d7457600080fd5b50610d97600480360381019080803560001916906020019092919050505061431e565b604051808215151515815260200191505060405180910390f35b348015610dbd57600080fd5b50610df2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506144fd565b005b348015610e0057600080fd5b50610e5b600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050614564565b6040518082815260200191505060405180910390f35b348015610e7d57600080fd5b50610e8661469e565b6040518082815260200191505060405180910390f35b348015610ea857600080fd5b50610eb16146ab565b6040518082815260200191505060405180910390f35b348015610ed357600080fd5b50610f08600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506146b1565b005b600080600080600080429450600093505b6008805490508410156112165760076000600886815481101515610f3b57fe5b90600052602060002001546000191660001916815260200190815260200160002092508260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc46c48d4dccbb3a0d33e570f3bcd666e4a190ea1782d55f45e56fb73ae956fca856008015460405180826000191660001916815260200180602001828103825260128152602001807f706572696f646963616c6c7920636865636b00000000000000000000000000008152506020019250505060405180910390a36001600481111561105d57fe5b8360010160149054906101000a900460ff16600481111561107a57fe5b14156111365761108983614718565b80925081935050506001151582151514156111355760028360010160146101000a81548160ff021916908360048111156110bf57fe5b021790555060038360010160156101000a81548163ffffffff021916908363ffffffff160217905550808360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508483600401819055505b5b6002600481111561114357fe5b8360010160149054906101000a900460ff16600481111561116057fe5b14156111ac5761012c63ffffffff168360040154860311156111ab576111a98360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166120f4565b505b5b600360048111156111b957fe5b8360010160149054906101000a900460ff1660048111156111d657fe5b148061120857506004808111156111e957fe5b8360010160149054906101000a900460ff16600481111561120657fe5b145b508380600101945050610f1b565b60019550505050505090565b60008060606000806000806000429450328b600187604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140184815260200183600481111561128e57fe5b60ff167f0100000000000000000000000000000000000000000000000000000000000000028152600101828152602001945050505050604051809103902093506007600085600019166000191681526020019081526020016000209250600060048111156112f857fe5b8360010160149054906101000a900460ff16600481111561131557fe5b1415801561137257503273ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611577578260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f07762982108fce80e0bef1a957dde4b562339b56d6585a5242244e5c9ca7800985600801548660020160009054906101000a900467ffffffffffffffff16876007015488600301548960010160159054906101000a900463ffffffff166040518086600019166000191681526020018567ffffffffffffffff1667ffffffffffffffff1681526020018481526020018381526020018263ffffffff1663ffffffff16815260200180602001828103825260228152602001807f7461736b20616c726561647920657869737465642c2063616e63656c2066697281526020017f7374000000000000000000000000000000000000000000000000000000000000815250604001965050505050505060405180910390a360009750839650606060405190810160405280602281526020017f7461736b20616c726561647920657869737465642c2063616e63656c2066697281526020017f73740000000000000000000000000000000000000000000000000000000000008152509550878787975097509750611cd2565b60011515600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166315f1ec9032878f8e6040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001846000191660001916815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561166e578082015181840152602081019050611653565b50505050905090810190601f16801561169b5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156116bd57600080fd5b505af11580156116d1573d6000803e3d6000fd5b505050506040513d60208110156116e757600080fd5b8101908080519060200190929190505050151514151561181a5760003273ffffffffffffffffffffffffffffffffffffffff167f07762982108fce80e0bef1a957dde4b562339b56d6585a5242244e5c9ca78009868f8f6000806040518086600019166000191681526020018567ffffffffffffffff1667ffffffffffffffff1681526020018481526020018381526020018263ffffffff16815260200180602001828103825260118152602001807f4c6f636b20746f6b656e206661696c6564000000000000000000000000000000815250602001965050505050505060405180910390a3600097508396506040805190810160405280601181526020017f4c6f636b20746f6b656e206661696c65640000000000000000000000000000008152509550878787975097509750611cd2565b328360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b8360020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508a83600701819055508983600901600080815260200190815260200160002060000190805190602001906118bd9291906156ba565b5060018360010160146101000a81548160ff021916908360048111156118df57fe5b021790555060018360010160156101000a81548163ffffffff021916908363ffffffff16021790555084836003018190555088836009016000808152602001908152602001600020600201908051906020019061193d9291906156ba565b508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600701548460010160149054906101000a900460ff1687604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018481526020018360048111156119d257fe5b60ff167f0100000000000000000000000000000000000000000000000000000000000000028152600101828152602001945050505050604051809103902083600801816000191690555060016008846008015490806001815401808255809150509060018203906000526020600020016000909192909190915090600019169055038360060181905550600560008154809291906001019190505550611a7783614718565b8092508193505050600115158215151415611b235760028360010160146101000a81548160ff02191690836004811115611aad57fe5b021790555060028360010160156101000a81548163ffffffff021916908363ffffffff160217905550808360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508483600401819055505b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f07762982108fce80e0bef1a957dde4b562339b56d6585a5242244e5c9ca7800985600801548660020160009054906101000a900467ffffffffffffffff16876007015488600301548960010160159054906101000a900463ffffffff166040518086600019166000191681526020018567ffffffffffffffff1667ffffffffffffffff1681526020018481526020018381526020018263ffffffff1663ffffffff16815260200180602001828103825260178152602001807f6f72646572207265717565737420636f6e6669726d6564000000000000000000815250602001965050505050505060405180910390a3600197508396506040805190810160405280601781526020017f6f72646572207265717565737420636f6e6669726d656400000000000000000081525095508787879750975097505b50505050509450945094915050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fca1f3c1846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d8e578082015181840152602081019050611d73565b50505050905090810190601f168015611dbb5780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b158015611dda57600080fd5b505af1158015611dee573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060a0811015611e1857600080fd5b81019080805190602001909291908051640100000000811115611e3a57600080fd5b82810190506020810184811115611e5057600080fd5b8151856001820283011164010000000082111715611e6d57600080fd5b5050929190602001805190602001909291908051640100000000811115611e9357600080fd5b82810190506020810184811115611ea957600080fd5b8151856001820283011164010000000082111715611ec657600080fd5b505092919060200180519060200190929190505050505092505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611f86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f616464722069732030210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80915050919050565b60055481565b60096020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16908060070154908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600a018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120ea5780601f106120bf576101008083540402835291602001916120ea565b820191906000526020600020905b8154815290600101906020018083116120cd57829003601f168201915b505050505090508b565b600080600080600080600960008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209450600115158560060160009054906101000a900460ff161515141515612235578460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5016c058828396d4a7c5c8cdc3c343c5fb2666a5eca21d7d3008aa30d40607fd86600701548760010154886005015460405180846000191660001916815260200183815260200182815260200180602001828103825260148152602001807f6e6f6465206973206e6f7420656e726f6c6c656400000000000000000000000081525060200194505050505060405180910390a2600095506124bc565b846004015493506000600102846000191614151561236a57600760008560001916600019168152602001908152602001600020925060018360010160146101000a81548160ff0219169083600481111561228b57fe5b021790555060018360010160156101000a81548163ffffffff021916908363ffffffff1602179055506122bd83614718565b80925081935050506001151582151514156123695760028360010160146101000a81548160ff021916908360048111156122f357fe5b021790555060028360010160156101000a81548163ffffffff021916908363ffffffff160217905550808360010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504283600401819055505b5b61237385614ad7565b508460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5016c058828396d4a7c5c8cdc3c343c5fb2666a5eca21d7d3008aa30d40607fd866007015487600101548860050154604051808460001916600019168152602001838152602001828152602001806020018281038252600c8152602001807f6e6f64652072656d6f766564000000000000000000000000000000000000000081525060200194505050505060405180910390a26006600081548092919060019003919050555060008560000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008560060160006101000a81548160ff021916908315150217905550600195505b5050505050919050565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634a189f35836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612572578082015181840152602081019050612557565b50505050905090810190601f16801561259f5780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b1580156125be57600080fd5b505af11580156125d2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156125fc57600080fd5b81019080805164010000000081111561261457600080fd5b8281019050602081018481111561262a57600080fd5b815185600182028301116401000000008211171561264757600080fd5b50509291905050509050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088181548110151561268b57fe5b906000526020600020016000915090505481565b6000806000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505b60008273ffffffffffffffffffffffffffffffffffffffff1614151561282657600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5016c058828396d4a7c5c8cdc3c343c5fb2666a5eca21d7d3008aa30d40607fd826007015483600101548460050154604051808460001916600019168152602001838152602001828152602001806020018281038252600a8152602001807f6e6f64652071756572790000000000000000000000000000000000000000000081525060200194505050505060405180910390a28060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506126ca565b60019250505090565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128c55780601f1061289a576101008083540402835291602001916128c5565b820191906000526020600020905b8154815290600101906020018083116128a857829003601f168201915b505050505081565b600080600080600960003273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209150429050600115158260060160009054906101000a900460ff1615151415612a10578160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5016c058828396d4a7c5c8cdc3c343c5fb2666a5eca21d7d3008aa30d40607fd83600701548460010154856005015460405180846000191660001916815260200183815260200182815260200180602001828103825260158152602001807f6e6f646520616c726561647920656e726f6c6c6564000000000000000000000081525060200194505050505060405180910390a260008093509350612c65565b328260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508467ffffffffffffffff16826001018190555080826005018190555060018260060160006101000a81548160ff0219169083151502179055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168582604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c010000000000000000000000000281526014018367ffffffffffffffff1667ffffffffffffffff16780100000000000000000000000000000000000000000000000002815260080182815260200193505050506040518091039020826007018160001916905550612b57826001614e30565b508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5016c058828396d4a7c5c8cdc3c343c5fb2666a5eca21d7d3008aa30d40607fd83600701548460010154856005015460405180846000191660001916815260200183815260200182815260200180602001828103825260108152602001807f6e6f646520656e726f6c6c6564204f4b0000000000000000000000000000000081525060200194505050505060405180910390a260066000815480929190600101919050555060018260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16935093505b5050915091565b60025481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060006060806000600760008a60001916600019168152602001908152602001600020905060006004811115612ccf57fe5b8160010160149054906101000a900460ff166004811115612cec57fe5b1415612d5d5760008060008060008292508191508090506040805190810160405280600781526020017f302e302e302e300000000000000000000000000000000000000000000000000081525060206040519081016040528060008152509750975097509750975097509750612f1e565b60018160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260020160009054906101000a900467ffffffffffffffff1683600301548460070154856009016000808152602001908152602001600020600201866009016000808152602001908152602001600020600001818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e6c5780601f10612e4157610100808354040283529160200191612e6c565b820191906000526020600020905b815481529060010190602001808311612e4f57829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612f085780601f10612edd57610100808354040283529160200191612f08565b820191906000526020600020905b815481529060010190602001808311612eeb57829003601f168201915b5050505050905097509750975097509750975097505b50919395979092949650565b6000806008805490501415612f425760009050612fcc565b60006004811115612f4f57fe5b60076000846000191660001916815260200190815260200160002060010160149054906101000a900460ff166004811115612f8657fe5b14158015612fb9575081600019166007600084600019166000191681526020019081526020016000206008015460001916145b15612fc75760019050612fcc565b600090505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008091505b6008805490508210156131b5576007600060088481548110151561301f57fe5b90600052602060002001546000191660001916815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f07762982108fce80e0bef1a957dde4b562339b56d6585a5242244e5c9ca7800983600801548460020160009054906101000a900467ffffffffffffffff16856007015486600301548760010160159054906101000a900463ffffffff166040518086600019166000191681526020018567ffffffffffffffff1667ffffffffffffffff1681526020018481526020018381526020018263ffffffff1663ffffffff168152602001806020018281038252600a8152602001807f7175657279206f64657200000000000000000000000000000000000000000000815250602001965050505050505060405180910390a38180600101925050612fff565b60019250505090565b6000806000806007600086600019166000191681526020019081526020016000209250600060048111156131ee57fe5b8360010160149054906101000a900460ff16600481111561320b57fe5b141561321a57600093506137a1565b3273ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561327c57600093506137a1565b6002600481111561328957fe5b8360010160149054906101000a900460ff1660048111156132a657fe5b1015156132b657600093506137a1565b60048360010160146101000a81548160ff021916908360048111156132d757fe5b021790555060048360010160156101000a81548163ffffffff021916908363ffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394436fb08460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200192505050602060405180830381600087803b1580156133f157600080fd5b505af1158015613405573d6000803e3d6000fd5b505050506040513d602081101561341b57600080fd5b810190808051906020019092919050505050600073ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156135ee578260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f07762982108fce80e0bef1a957dde4b562339b56d6585a5242244e5c9ca7800985600801548660020160009054906101000a900467ffffffffffffffff16876007015488600301548960010160159054906101000a900463ffffffff166040518086600019166000191681526020018567ffffffffffffffff1667ffffffffffffffff1681526020018481526020018381526020018263ffffffff1663ffffffff168152602001806020018281038252600e8152602001807f6f726465722063616e63656c6564000000000000000000000000000000000000815250602001965050505050505060405180910390a35b60076000846008015460001916600019168152602001908152602001600020600601549150600860016008805490500381548110151561362a57fe5b906000526020600020015490508060088381548110151561364757fe5b90600052602060002001816000191690555081600760008360001916600019168152602001908152602001600020600601819055506008805480919060019003613691919061573a565b5060008360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008360010160146101000a81548160ff021916908360048111156136f757fe5b021790555060008360010160156101000a81548163ffffffff021916908363ffffffff16021790555060008360020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550602060405190810160405280600081525083600901600080815260200190815260200160002060020190805190602001906137889291906156ba565b5060056000815480929190600190039190505550600193505b505050919050565b6000806000806000806000806000429750600760008d600019166000191681526020019081526020016000209650600060048111156137e457fe5b8760010160149054906101000a900460ff16600481111561380157fe5b148061381957508b6000191687600801546000191614155b156138275760009850614243565b60038760010160146101000a81548160ff0219169083600481111561384857fe5b021790555060038760010160156101000a81548163ffffffff021916908363ffffffff1602179055508660010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168760000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f07762982108fce80e0bef1a957dde4b562339b56d6585a5242244e5c9ca7800989600801548a60020160009054906101000a900467ffffffffffffffff168b600701548c600301548d60010160159054906101000a900463ffffffff166040518086600019166000191681526020018567ffffffffffffffff1667ffffffffffffffff1681526020018481526020018381526020018263ffffffff1663ffffffff168152602001806020018281038252600e8152602001807f7461736b20636f6d706c65746564000000000000000000000000000000000000815250602001965050505050505060405180910390a3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166394436fb08860000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168e6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001826000191660001916815260200192505050602060405180830381600087803b158015613ac857600080fd5b505af1158015613adc573d6000803e3d6000fd5b505050506040513d6020811015613af257600080fd5b81019080805190602001909291905050505086600701548b1015613b16578a613b1c565b86600701545b9550613b326005876153c690919063ffffffff16565b94508486039350600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cb7125358860000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168f876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015613c5657600080fd5b505af1158015613c6a573d6000803e3d6000fd5b505050506040513d6020811015613c8057600080fd5b810190808051906020019092919050505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cb7125358860000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1641886040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015613daf57600080fd5b505af1158015613dc3573d6000803e3d6000fd5b505050506040513d6020811015613dd957600080fd5b810190808051906020019092919050505050600760008860080154600019166000191681526020019081526020016000206006015492506008600160088054905003815481101515613e2757fe5b9060005260206000200154915081600884815481101515613e4457fe5b90600052602060002001816000191690555082600760008460001916600019168152602001908152602001600020600601819055506008805480919060019003613e8e919061573a565b5060056000815480929190600190039190505550600960008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806003016000815480929190600101919050555060006001028160040181600019169055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5016c058828396d4a7c5c8cdc3c343c5fb2666a5eca21d7d3008aa30d40607fd82600701548360010154846005015460405180846000191660001916815260200183815260200182815260200180602001828103825260158152602001807f6e6f646520636f6d706c657465642031207461736b000000000000000000000081525060200194505050505060405180910390a27fe06834f02651046d6086818eb1e168c87f4b3772ae497a163d8e2fbf73e7fb4687600801548860000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168960020160009054906101000a900467ffffffffffffffff168460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168c8f6040518087600019166000191681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018567ffffffffffffffff1667ffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015614134578082015181840152602081019050614119565b50505050905090810190601f1680156141615780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a160008760000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060010287600801816000191690555060008760020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060008760010160146101000a81548160ff0219169083600481111561421557fe5b021790555060008760010160156101000a81548163ffffffff021916908363ffffffff160217905550600198505b5050505050505050949350505050565b60076020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060010160159054906101000a900463ffffffff16908060020160009054906101000a900467ffffffffffffffff1690806003015490806004015490806005015490806006015490806007015490806008015490508b565b60008060008091505b6008805490508210156144f257836000191660088381548110151561434857fe5b90600052602060002001546000191614156144e55760076000856000191660001916815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f07762982108fce80e0bef1a957dde4b562339b56d6585a5242244e5c9ca7800983600801548460020160009054906101000a900467ffffffffffffffff16856007015486600301548760010160159054906101000a900463ffffffff166040518086600019166000191681526020018567ffffffffffffffff1667ffffffffffffffff1681526020018481526020018381526020018263ffffffff1663ffffffff168152602001806020018281038252600b8152602001807f7175657279206f72646572000000000000000000000000000000000000000000815250602001965050505050505060405180910390a36144f2565b8180600101925050614327565b600192505050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561455857600080fd5b614561816153dc565b50565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633230b078836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156146105780820151818401526020810190506145f5565b50505050905090810190601f16801561463d5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561465c57600080fd5b505af1158015614670573d6000803e3d6000fd5b505050506040513d602081101561468657600080fd5b81019080805190602001909291905050509050919050565b6000600880549050905090565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561470c57600080fd5b61471581615539565b50565b6000806000806000806000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169450600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209350429250600091505b600a63ffffffff168263ffffffff16111515614ac257600115158460060160009054906101000a900460ff1615151480156147d757506000600102846004015460001916145b15614a1f57614810600a63ffffffff1661480286600101548b600701546153c690919063ffffffff16565b61569c90919063ffffffff16565b905061012c63ffffffff1681111515614a1e5761482c84614ad7565b50614838846000614e30565b50876008015484600401816000191690555060028860010160146101000a81548160ff0219169083600481111561486b57fe5b021790555060028860010160156101000a81548163ffffffff021916908363ffffffff1602179055508473ffffffffffffffffffffffffffffffffffffffff168860000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f99372083fa3a2cc177b5b792c5a3323e07a7c9ad9803714543c7d7ca734c889a8a600801548b60020160009054906101000a900467ffffffffffffffff168c60070154888e60090160008081526020019081526020016000206000016040518086600019166000191681526020018567ffffffffffffffff1667ffffffffffffffff16815260200184815260200183815260200180602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015614a005780601f106149d557610100808354040283529160200191614a00565b820191906000526020600020905b8154815290600101906020018083116149e357829003601f168201915b5050965050505050505060405180910390a360018596509650614acd565b5b8360080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16945060008573ffffffffffffffffffffffffffffffffffffffff161415614a745760008080905096509650614acd565b600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002093508180600101925050614791565b600080809050965096505b5050505050915091565b6000806000600115158460060160009054906101000a900460ff161515141515614b045760009250614e29565b8360080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508360090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff161415614c395781600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614cbb565b81600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008273ffffffffffffffffffffffffffffffffffffffff161415614da25780600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614e24565b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600192505b5050919050565b600080600115158460060160009054906101000a900460ff161515141515614e5b57600091506153bf565b6001151583151514156150f1576000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415614f13578360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550614fde565b60096000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008460090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506153ba565b60008460080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156152245760008460090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550615354565b60096000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600191505b5092915050565b600081838115156153d357fe5b04905092915050565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561544557600080fd5b505af1158015615459573d6000803e3d6000fd5b505050506040513d602081101561546f57600080fd5b810190808051906020019092919050505015156154f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156155de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6e65774f776e657220616464726573732069732030210000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082840190508381101515156156b057fe5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106156fb57805160ff1916838001178555615729565b82800160010185558215615729579182015b8281111561572857825182559160200191906001019061570d565b5b5090506157369190615766565b5090565b81548183558181111561576157818360005260206000209182019101615760919061578b565b5b505050565b61578891905b8082111561578457600081600090555060010161576c565b5090565b90565b6157ad91905b808211156157a9576000816000905550600101615791565b5090565b905600a165627a7a72305820514cdc59f9564efbbc81f06b839c4de6b2cf7717695bad3ec8166f418ee6ea0e0029`

// DeployChainware deploys a new Ethereum contract, binding an instance of Chainware to it.
func DeployChainware(auth *bind.TransactOpts, backend bind.ContractBackend, addrManager common.Address, cware_token common.Address) (common.Address, *types.Transaction, *Chainware, error) {
	parsed, err := abi.JSON(strings.NewReader(ChainwareABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ChainwareBin), backend, addrManager, cware_token)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Chainware{ChainwareCaller: ChainwareCaller{contract: contract}, ChainwareTransactor: ChainwareTransactor{contract: contract}}, nil
}

// Chainware is an auto generated Go binding around an Ethereum contract.
type Chainware struct {
	ChainwareCaller     // Read-only binding to the contract
	ChainwareTransactor // Write-only binding to the contract
}

// ChainwareCaller is an auto generated read-only Go binding around an Ethereum contract.
type ChainwareCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChainwareTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ChainwareTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChainwareSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ChainwareSession struct {
	Contract     *Chainware        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ChainwareCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ChainwareCallerSession struct {
	Contract *ChainwareCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// ChainwareTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ChainwareTransactorSession struct {
	Contract     *ChainwareTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// ChainwareRaw is an auto generated low-level Go binding around an Ethereum contract.
type ChainwareRaw struct {
	Contract *Chainware // Generic contract binding to access the raw methods on
}

// ChainwareCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ChainwareCallerRaw struct {
	Contract *ChainwareCaller // Generic read-only contract binding to access the raw methods on
}

// ChainwareTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ChainwareTransactorRaw struct {
	Contract *ChainwareTransactor // Generic write-only contract binding to access the raw methods on
}

// NewChainware creates a new instance of Chainware, bound to a specific deployed contract.
func NewChainware(address common.Address, backend bind.ContractBackend) (*Chainware, error) {
	contract, err := bindChainware(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Chainware{ChainwareCaller: ChainwareCaller{contract: contract}, ChainwareTransactor: ChainwareTransactor{contract: contract}}, nil
}

// NewChainwareCaller creates a new read-only instance of Chainware, bound to a specific deployed contract.
func NewChainwareCaller(address common.Address, caller bind.ContractCaller) (*ChainwareCaller, error) {
	contract, err := bindChainware(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &ChainwareCaller{contract: contract}, nil
}

// NewChainwareTransactor creates a new write-only instance of Chainware, bound to a specific deployed contract.
func NewChainwareTransactor(address common.Address, transactor bind.ContractTransactor) (*ChainwareTransactor, error) {
	contract, err := bindChainware(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &ChainwareTransactor{contract: contract}, nil
}

// bindChainware binds a generic wrapper to an already deployed contract.
func bindChainware(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ChainwareABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Chainware *ChainwareRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Chainware.Contract.ChainwareCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Chainware *ChainwareRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.Contract.ChainwareTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Chainware *ChainwareRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Chainware.Contract.ChainwareTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Chainware *ChainwareCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Chainware.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Chainware *ChainwareTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Chainware *ChainwareTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Chainware.Contract.contract.Transact(opts, method, params...)
}

// CWARE_Token_Addr is a free data retrieval call binding the contract method 0x4602a127.
//
// Solidity: function CWARE_Token_Addr() constant returns(address)
func (_Chainware *ChainwareCaller) CWARE_Token_Addr(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "CWARE_Token_Addr")
	return *ret0, err
}

// CWARE_Token_Addr is a free data retrieval call binding the contract method 0x4602a127.
//
// Solidity: function CWARE_Token_Addr() constant returns(address)
func (_Chainware *ChainwareSession) CWARE_Token_Addr() (common.Address, error) {
	return _Chainware.Contract.CWARE_Token_Addr(&_Chainware.CallOpts)
}

// CWARE_Token_Addr is a free data retrieval call binding the contract method 0x4602a127.
//
// Solidity: function CWARE_Token_Addr() constant returns(address)
func (_Chainware *ChainwareCallerSession) CWARE_Token_Addr() (common.Address, error) {
	return _Chainware.Contract.CWARE_Token_Addr(&_Chainware.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_Chainware *ChainwareCaller) BokerManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "bokerManager")
	return *ret0, err
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_Chainware *ChainwareSession) BokerManager() (common.Address, error) {
	return _Chainware.Contract.BokerManager(&_Chainware.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_Chainware *ChainwareCallerSession) BokerManager() (common.Address, error) {
	return _Chainware.Contract.BokerManager(&_Chainware.CallOpts)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_Chainware *ChainwareCaller) ContractAddress(opts *bind.CallOpts, cName string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "contractAddress", cName)
	return *ret0, err
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_Chainware *ChainwareSession) ContractAddress(cName string) (common.Address, error) {
	return _Chainware.Contract.ContractAddress(&_Chainware.CallOpts, cName)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_Chainware *ChainwareCallerSession) ContractAddress(cName string) (common.Address, error) {
	return _Chainware.Contract.ContractAddress(&_Chainware.CallOpts, cName)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_Chainware *ChainwareCaller) CreateTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "createTime")
	return *ret0, err
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_Chainware *ChainwareSession) CreateTime() (*big.Int, error) {
	return _Chainware.Contract.CreateTime(&_Chainware.CallOpts)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_Chainware *ChainwareCallerSession) CreateTime() (*big.Int, error) {
	return _Chainware.Contract.CreateTime(&_Chainware.CallOpts)
}

// GetOneTaskOrder is a free data retrieval call binding the contract method 0xcf7da04b.
//
// Solidity: function getOneTaskOrder(orderID bytes32) constant returns(bool)
func (_Chainware *ChainwareCaller) GetOneTaskOrder(opts *bind.CallOpts, orderID [32]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "getOneTaskOrder", orderID)
	return *ret0, err
}

// GetOneTaskOrder is a free data retrieval call binding the contract method 0xcf7da04b.
//
// Solidity: function getOneTaskOrder(orderID bytes32) constant returns(bool)
func (_Chainware *ChainwareSession) GetOneTaskOrder(orderID [32]byte) (bool, error) {
	return _Chainware.Contract.GetOneTaskOrder(&_Chainware.CallOpts, orderID)
}

// GetOneTaskOrder is a free data retrieval call binding the contract method 0xcf7da04b.
//
// Solidity: function getOneTaskOrder(orderID bytes32) constant returns(bool)
func (_Chainware *ChainwareCallerSession) GetOneTaskOrder(orderID [32]byte) (bool, error) {
	return _Chainware.Contract.GetOneTaskOrder(&_Chainware.CallOpts, orderID)
}

// GetTaskOrder is a free data retrieval call binding the contract method 0x6f363fa9.
//
// Solidity: function getTaskOrder(orderID bytes32) constant returns(bool, address, uint64, uint256, uint256, string, string)
func (_Chainware *ChainwareCaller) GetTaskOrder(opts *bind.CallOpts, orderID [32]byte) (bool, common.Address, uint64, *big.Int, *big.Int, string, string, error) {
	var (
		ret0 = new(bool)
		ret1 = new(common.Address)
		ret2 = new(uint64)
		ret3 = new(*big.Int)
		ret4 = new(*big.Int)
		ret5 = new(string)
		ret6 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
		ret5,
		ret6,
	}
	err := _Chainware.contract.Call(opts, out, "getTaskOrder", orderID)
	return *ret0, *ret1, *ret2, *ret3, *ret4, *ret5, *ret6, err
}

// GetTaskOrder is a free data retrieval call binding the contract method 0x6f363fa9.
//
// Solidity: function getTaskOrder(orderID bytes32) constant returns(bool, address, uint64, uint256, uint256, string, string)
func (_Chainware *ChainwareSession) GetTaskOrder(orderID [32]byte) (bool, common.Address, uint64, *big.Int, *big.Int, string, string, error) {
	return _Chainware.Contract.GetTaskOrder(&_Chainware.CallOpts, orderID)
}

// GetTaskOrder is a free data retrieval call binding the contract method 0x6f363fa9.
//
// Solidity: function getTaskOrder(orderID bytes32) constant returns(bool, address, uint64, uint256, uint256, string, string)
func (_Chainware *ChainwareCallerSession) GetTaskOrder(orderID [32]byte) (bool, common.Address, uint64, *big.Int, *big.Int, string, string, error) {
	return _Chainware.Contract.GetTaskOrder(&_Chainware.CallOpts, orderID)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_Chainware *ChainwareCaller) GlobalConfigInt(opts *bind.CallOpts, key string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "globalConfigInt", key)
	return *ret0, err
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_Chainware *ChainwareSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _Chainware.Contract.GlobalConfigInt(&_Chainware.CallOpts, key)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_Chainware *ChainwareCallerSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _Chainware.Contract.GlobalConfigInt(&_Chainware.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_Chainware *ChainwareCaller) GlobalConfigString(opts *bind.CallOpts, key string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "globalConfigString", key)
	return *ret0, err
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_Chainware *ChainwareSession) GlobalConfigString(key string) (string, error) {
	return _Chainware.Contract.GlobalConfigString(&_Chainware.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_Chainware *ChainwareCallerSession) GlobalConfigString(key string) (string, error) {
	return _Chainware.Contract.GlobalConfigString(&_Chainware.CallOpts, key)
}

// NodeSets is a free data retrieval call binding the contract method 0x23ac273f.
//
// Solidity: function nodeSets( address) constant returns(nodeAddr address, hashRate uint256, lastHashRate uint256, assignCnt uint256, assignedClient bytes32, enrollTime uint256, enrolled bool, nodeID bytes32, nextNode address, prevNode address, nodeIp string)
func (_Chainware *ChainwareCaller) NodeSets(opts *bind.CallOpts, arg0 common.Address) (struct {
	NodeAddr       common.Address
	HashRate       *big.Int
	LastHashRate   *big.Int
	AssignCnt      *big.Int
	AssignedClient [32]byte
	EnrollTime     *big.Int
	Enrolled       bool
	NodeID         [32]byte
	NextNode       common.Address
	PrevNode       common.Address
	NodeIp         string
}, error) {
	ret := new(struct {
		NodeAddr       common.Address
		HashRate       *big.Int
		LastHashRate   *big.Int
		AssignCnt      *big.Int
		AssignedClient [32]byte
		EnrollTime     *big.Int
		Enrolled       bool
		NodeID         [32]byte
		NextNode       common.Address
		PrevNode       common.Address
		NodeIp         string
	})
	out := ret
	err := _Chainware.contract.Call(opts, out, "nodeSets", arg0)
	return *ret, err
}

// NodeSets is a free data retrieval call binding the contract method 0x23ac273f.
//
// Solidity: function nodeSets( address) constant returns(nodeAddr address, hashRate uint256, lastHashRate uint256, assignCnt uint256, assignedClient bytes32, enrollTime uint256, enrolled bool, nodeID bytes32, nextNode address, prevNode address, nodeIp string)
func (_Chainware *ChainwareSession) NodeSets(arg0 common.Address) (struct {
	NodeAddr       common.Address
	HashRate       *big.Int
	LastHashRate   *big.Int
	AssignCnt      *big.Int
	AssignedClient [32]byte
	EnrollTime     *big.Int
	Enrolled       bool
	NodeID         [32]byte
	NextNode       common.Address
	PrevNode       common.Address
	NodeIp         string
}, error) {
	return _Chainware.Contract.NodeSets(&_Chainware.CallOpts, arg0)
}

// NodeSets is a free data retrieval call binding the contract method 0x23ac273f.
//
// Solidity: function nodeSets( address) constant returns(nodeAddr address, hashRate uint256, lastHashRate uint256, assignCnt uint256, assignedClient bytes32, enrollTime uint256, enrolled bool, nodeID bytes32, nextNode address, prevNode address, nodeIp string)
func (_Chainware *ChainwareCallerSession) NodeSets(arg0 common.Address) (struct {
	NodeAddr       common.Address
	HashRate       *big.Int
	LastHashRate   *big.Int
	AssignCnt      *big.Int
	AssignedClient [32]byte
	EnrollTime     *big.Int
	Enrolled       bool
	NodeID         [32]byte
	NextNode       common.Address
	PrevNode       common.Address
	NodeIp         string
}, error) {
	return _Chainware.Contract.NodeSets(&_Chainware.CallOpts, arg0)
}

// NumComputeNode is a free data retrieval call binding the contract method 0xef16b54c.
//
// Solidity: function numComputeNode() constant returns(uint256)
func (_Chainware *ChainwareCaller) NumComputeNode(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "numComputeNode")
	return *ret0, err
}

// NumComputeNode is a free data retrieval call binding the contract method 0xef16b54c.
//
// Solidity: function numComputeNode() constant returns(uint256)
func (_Chainware *ChainwareSession) NumComputeNode() (*big.Int, error) {
	return _Chainware.Contract.NumComputeNode(&_Chainware.CallOpts)
}

// NumComputeNode is a free data retrieval call binding the contract method 0xef16b54c.
//
// Solidity: function numComputeNode() constant returns(uint256)
func (_Chainware *ChainwareCallerSession) NumComputeNode() (*big.Int, error) {
	return _Chainware.Contract.NumComputeNode(&_Chainware.CallOpts)
}

// NumTaskOrder is a free data retrieval call binding the contract method 0x2324e6b0.
//
// Solidity: function numTaskOrder() constant returns(uint256)
func (_Chainware *ChainwareCaller) NumTaskOrder(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "numTaskOrder")
	return *ret0, err
}

// NumTaskOrder is a free data retrieval call binding the contract method 0x2324e6b0.
//
// Solidity: function numTaskOrder() constant returns(uint256)
func (_Chainware *ChainwareSession) NumTaskOrder() (*big.Int, error) {
	return _Chainware.Contract.NumTaskOrder(&_Chainware.CallOpts)
}

// NumTaskOrder is a free data retrieval call binding the contract method 0x2324e6b0.
//
// Solidity: function numTaskOrder() constant returns(uint256)
func (_Chainware *ChainwareCallerSession) NumTaskOrder() (*big.Int, error) {
	return _Chainware.Contract.NumTaskOrder(&_Chainware.CallOpts)
}

// OrderBook is a free data retrieval call binding the contract method 0xbd1bceca.
//
// Solidity: function orderBook( bytes32) constant returns(client address, computeNode address, state uint8, _state uint32, index uint64, createTime uint256, assignTime uint256, completeTime uint256, listPtr uint256, taskGas uint256, orderID bytes32)
func (_Chainware *ChainwareCaller) OrderBook(opts *bind.CallOpts, arg0 [32]byte) (struct {
	Client       common.Address
	ComputeNode  common.Address
	State        uint8
	_state       uint32
	Index        uint64
	CreateTime   *big.Int
	AssignTime   *big.Int
	CompleteTime *big.Int
	ListPtr      *big.Int
	TaskGas      *big.Int
	OrderID      [32]byte
}, error) {
	ret := new(struct {
		Client       common.Address
		ComputeNode  common.Address
		State        uint8
		_state       uint32
		Index        uint64
		CreateTime   *big.Int
		AssignTime   *big.Int
		CompleteTime *big.Int
		ListPtr      *big.Int
		TaskGas      *big.Int
		OrderID      [32]byte
	})
	out := ret
	err := _Chainware.contract.Call(opts, out, "orderBook", arg0)
	return *ret, err
}

// OrderBook is a free data retrieval call binding the contract method 0xbd1bceca.
//
// Solidity: function orderBook( bytes32) constant returns(client address, computeNode address, state uint8, _state uint32, index uint64, createTime uint256, assignTime uint256, completeTime uint256, listPtr uint256, taskGas uint256, orderID bytes32)
func (_Chainware *ChainwareSession) OrderBook(arg0 [32]byte) (struct {
	Client       common.Address
	ComputeNode  common.Address
	State        uint8
	_state       uint32
	Index        uint64
	CreateTime   *big.Int
	AssignTime   *big.Int
	CompleteTime *big.Int
	ListPtr      *big.Int
	TaskGas      *big.Int
	OrderID      [32]byte
}, error) {
	return _Chainware.Contract.OrderBook(&_Chainware.CallOpts, arg0)
}

// OrderBook is a free data retrieval call binding the contract method 0xbd1bceca.
//
// Solidity: function orderBook( bytes32) constant returns(client address, computeNode address, state uint8, _state uint32, index uint64, createTime uint256, assignTime uint256, completeTime uint256, listPtr uint256, taskGas uint256, orderID bytes32)
func (_Chainware *ChainwareCallerSession) OrderBook(arg0 [32]byte) (struct {
	Client       common.Address
	ComputeNode  common.Address
	State        uint8
	_state       uint32
	Index        uint64
	CreateTime   *big.Int
	AssignTime   *big.Int
	CompleteTime *big.Int
	ListPtr      *big.Int
	TaskGas      *big.Int
	OrderID      [32]byte
}, error) {
	return _Chainware.Contract.OrderBook(&_Chainware.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Chainware *ChainwareCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Chainware *ChainwareSession) Owner() (common.Address, error) {
	return _Chainware.Contract.Owner(&_Chainware.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Chainware *ChainwareCallerSession) Owner() (common.Address, error) {
	return _Chainware.Contract.Owner(&_Chainware.CallOpts)
}

// TaskOrderList is a free data retrieval call binding the contract method 0x480e46db.
//
// Solidity: function taskOrderList( uint256) constant returns(bytes32)
func (_Chainware *ChainwareCaller) TaskOrderList(opts *bind.CallOpts, arg0 *big.Int) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "taskOrderList", arg0)
	return *ret0, err
}

// TaskOrderList is a free data retrieval call binding the contract method 0x480e46db.
//
// Solidity: function taskOrderList( uint256) constant returns(bytes32)
func (_Chainware *ChainwareSession) TaskOrderList(arg0 *big.Int) ([32]byte, error) {
	return _Chainware.Contract.TaskOrderList(&_Chainware.CallOpts, arg0)
}

// TaskOrderList is a free data retrieval call binding the contract method 0x480e46db.
//
// Solidity: function taskOrderList( uint256) constant returns(bytes32)
func (_Chainware *ChainwareCallerSession) TaskOrderList(arg0 *big.Int) ([32]byte, error) {
	return _Chainware.Contract.TaskOrderList(&_Chainware.CallOpts, arg0)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_Chainware *ChainwareCaller) Version(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_Chainware *ChainwareSession) Version() (string, error) {
	return _Chainware.Contract.Version(&_Chainware.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_Chainware *ChainwareCallerSession) Version() (string, error) {
	return _Chainware.Contract.Version(&_Chainware.CallOpts)
}

// ComputingNodeDisconnect is a paid mutator transaction binding the contract method 0x2d5f6f62.
//
// Solidity: function computingNodeDisconnect(node address) returns(bool)
func (_Chainware *ChainwareTransactor) ComputingNodeDisconnect(opts *bind.TransactOpts, node common.Address) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "computingNodeDisconnect", node)
}

// ComputingNodeDisconnect is a paid mutator transaction binding the contract method 0x2d5f6f62.
//
// Solidity: function computingNodeDisconnect(node address) returns(bool)
func (_Chainware *ChainwareSession) ComputingNodeDisconnect(node common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingNodeDisconnect(&_Chainware.TransactOpts, node)
}

// ComputingNodeDisconnect is a paid mutator transaction binding the contract method 0x2d5f6f62.
//
// Solidity: function computingNodeDisconnect(node address) returns(bool)
func (_Chainware *ChainwareTransactorSession) ComputingNodeDisconnect(node common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingNodeDisconnect(&_Chainware.TransactOpts, node)
}

// ComputingNodeEnroll is a paid mutator transaction binding the contract method 0x5b2be05d.
//
// Solidity: function computingNodeEnroll(hashRate uint64) returns(bool, address)
func (_Chainware *ChainwareTransactor) ComputingNodeEnroll(opts *bind.TransactOpts, hashRate uint64) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "computingNodeEnroll", hashRate)
}

// ComputingNodeEnroll is a paid mutator transaction binding the contract method 0x5b2be05d.
//
// Solidity: function computingNodeEnroll(hashRate uint64) returns(bool, address)
func (_Chainware *ChainwareSession) ComputingNodeEnroll(hashRate uint64) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingNodeEnroll(&_Chainware.TransactOpts, hashRate)
}

// ComputingNodeEnroll is a paid mutator transaction binding the contract method 0x5b2be05d.
//
// Solidity: function computingNodeEnroll(hashRate uint64) returns(bool, address)
func (_Chainware *ChainwareTransactorSession) ComputingNodeEnroll(hashRate uint64) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingNodeEnroll(&_Chainware.TransactOpts, hashRate)
}

// ComputingTaskComplete is a paid mutator transaction binding the contract method 0x9eaabf76.
//
// Solidity: function computingTaskComplete(node address, orderID bytes32, realGas uint256, resultHash string) returns(bool)
func (_Chainware *ChainwareTransactor) ComputingTaskComplete(opts *bind.TransactOpts, node common.Address, orderID [32]byte, realGas *big.Int, resultHash string) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "computingTaskComplete", node, orderID, realGas, resultHash)
}

// ComputingTaskComplete is a paid mutator transaction binding the contract method 0x9eaabf76.
//
// Solidity: function computingTaskComplete(node address, orderID bytes32, realGas uint256, resultHash string) returns(bool)
func (_Chainware *ChainwareSession) ComputingTaskComplete(node common.Address, orderID [32]byte, realGas *big.Int, resultHash string) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingTaskComplete(&_Chainware.TransactOpts, node, orderID, realGas, resultHash)
}

// ComputingTaskComplete is a paid mutator transaction binding the contract method 0x9eaabf76.
//
// Solidity: function computingTaskComplete(node address, orderID bytes32, realGas uint256, resultHash string) returns(bool)
func (_Chainware *ChainwareTransactorSession) ComputingTaskComplete(node common.Address, orderID [32]byte, realGas *big.Int, resultHash string) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingTaskComplete(&_Chainware.TransactOpts, node, orderID, realGas, resultHash)
}

// GetAllNodeSet is a paid mutator transaction binding the contract method 0x4e580dd0.
//
// Solidity: function getAllNodeSet() returns(bool)
func (_Chainware *ChainwareTransactor) GetAllNodeSet(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "getAllNodeSet")
}

// GetAllNodeSet is a paid mutator transaction binding the contract method 0x4e580dd0.
//
// Solidity: function getAllNodeSet() returns(bool)
func (_Chainware *ChainwareSession) GetAllNodeSet() (*types.Transaction, error) {
	return _Chainware.Contract.GetAllNodeSet(&_Chainware.TransactOpts)
}

// GetAllNodeSet is a paid mutator transaction binding the contract method 0x4e580dd0.
//
// Solidity: function getAllNodeSet() returns(bool)
func (_Chainware *ChainwareTransactorSession) GetAllNodeSet() (*types.Transaction, error) {
	return _Chainware.Contract.GetAllNodeSet(&_Chainware.TransactOpts)
}

// GetAllTaskOrder is a paid mutator transaction binding the contract method 0x96854ba4.
//
// Solidity: function getAllTaskOrder() returns(bool)
func (_Chainware *ChainwareTransactor) GetAllTaskOrder(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "getAllTaskOrder")
}

// GetAllTaskOrder is a paid mutator transaction binding the contract method 0x96854ba4.
//
// Solidity: function getAllTaskOrder() returns(bool)
func (_Chainware *ChainwareSession) GetAllTaskOrder() (*types.Transaction, error) {
	return _Chainware.Contract.GetAllTaskOrder(&_Chainware.TransactOpts)
}

// GetAllTaskOrder is a paid mutator transaction binding the contract method 0x96854ba4.
//
// Solidity: function getAllTaskOrder() returns(bool)
func (_Chainware *ChainwareTransactorSession) GetAllTaskOrder() (*types.Transaction, error) {
	return _Chainware.Contract.GetAllTaskOrder(&_Chainware.TransactOpts)
}

// GetOrderBookCount is a paid mutator transaction binding the contract method 0xe35ab3e8.
//
// Solidity: function getOrderBookCount() returns(uint256)
func (_Chainware *ChainwareTransactor) GetOrderBookCount(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "getOrderBookCount")
}

// GetOrderBookCount is a paid mutator transaction binding the contract method 0xe35ab3e8.
//
// Solidity: function getOrderBookCount() returns(uint256)
func (_Chainware *ChainwareSession) GetOrderBookCount() (*types.Transaction, error) {
	return _Chainware.Contract.GetOrderBookCount(&_Chainware.TransactOpts)
}

// GetOrderBookCount is a paid mutator transaction binding the contract method 0xe35ab3e8.
//
// Solidity: function getOrderBookCount() returns(uint256)
func (_Chainware *ChainwareTransactorSession) GetOrderBookCount() (*types.Transaction, error) {
	return _Chainware.Contract.GetOrderBookCount(&_Chainware.TransactOpts)
}

// HouseHoldAllTaskOrder is a paid mutator transaction binding the contract method 0x0414fc4a.
//
// Solidity: function houseHoldAllTaskOrder() returns(bool)
func (_Chainware *ChainwareTransactor) HouseHoldAllTaskOrder(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "houseHoldAllTaskOrder")
}

// HouseHoldAllTaskOrder is a paid mutator transaction binding the contract method 0x0414fc4a.
//
// Solidity: function houseHoldAllTaskOrder() returns(bool)
func (_Chainware *ChainwareSession) HouseHoldAllTaskOrder() (*types.Transaction, error) {
	return _Chainware.Contract.HouseHoldAllTaskOrder(&_Chainware.TransactOpts)
}

// HouseHoldAllTaskOrder is a paid mutator transaction binding the contract method 0x0414fc4a.
//
// Solidity: function houseHoldAllTaskOrder() returns(bool)
func (_Chainware *ChainwareTransactorSession) HouseHoldAllTaskOrder() (*types.Transaction, error) {
	return _Chainware.Contract.HouseHoldAllTaskOrder(&_Chainware.TransactOpts)
}

// IsActiveOrder is a paid mutator transaction binding the contract method 0x7e0c3458.
//
// Solidity: function isActiveOrder(orderID bytes32) returns(bool)
func (_Chainware *ChainwareTransactor) IsActiveOrder(opts *bind.TransactOpts, orderID [32]byte) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "isActiveOrder", orderID)
}

// IsActiveOrder is a paid mutator transaction binding the contract method 0x7e0c3458.
//
// Solidity: function isActiveOrder(orderID bytes32) returns(bool)
func (_Chainware *ChainwareSession) IsActiveOrder(orderID [32]byte) (*types.Transaction, error) {
	return _Chainware.Contract.IsActiveOrder(&_Chainware.TransactOpts, orderID)
}

// IsActiveOrder is a paid mutator transaction binding the contract method 0x7e0c3458.
//
// Solidity: function isActiveOrder(orderID bytes32) returns(bool)
func (_Chainware *ChainwareTransactorSession) IsActiveOrder(orderID [32]byte) (*types.Transaction, error) {
	return _Chainware.Contract.IsActiveOrder(&_Chainware.TransactOpts, orderID)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_Chainware *ChainwareTransactor) SetManager(opts *bind.TransactOpts, addrManager common.Address) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "setManager", addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_Chainware *ChainwareSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.SetManager(&_Chainware.TransactOpts, addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_Chainware *ChainwareTransactorSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.SetManager(&_Chainware.TransactOpts, addrManager)
}

// TaskOrderCancel is a paid mutator transaction binding the contract method 0x982a4afe.
//
// Solidity: function taskOrderCancel(orderID bytes32) returns(bool)
func (_Chainware *ChainwareTransactor) TaskOrderCancel(opts *bind.TransactOpts, orderID [32]byte) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "taskOrderCancel", orderID)
}

// TaskOrderCancel is a paid mutator transaction binding the contract method 0x982a4afe.
//
// Solidity: function taskOrderCancel(orderID bytes32) returns(bool)
func (_Chainware *ChainwareSession) TaskOrderCancel(orderID [32]byte) (*types.Transaction, error) {
	return _Chainware.Contract.TaskOrderCancel(&_Chainware.TransactOpts, orderID)
}

// TaskOrderCancel is a paid mutator transaction binding the contract method 0x982a4afe.
//
// Solidity: function taskOrderCancel(orderID bytes32) returns(bool)
func (_Chainware *ChainwareTransactorSession) TaskOrderCancel(orderID [32]byte) (*types.Transaction, error) {
	return _Chainware.Contract.TaskOrderCancel(&_Chainware.TransactOpts, orderID)
}

// TaskOrderRequest is a paid mutator transaction binding the contract method 0x0a2d0cd6.
//
// Solidity: function taskOrderRequest(index uint64, taskGas uint256, codeHash string, taskIp string) returns(success bool, orderId bytes32, reason string)
func (_Chainware *ChainwareTransactor) TaskOrderRequest(opts *bind.TransactOpts, index uint64, taskGas *big.Int, codeHash string, taskIp string) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "taskOrderRequest", index, taskGas, codeHash, taskIp)
}

// TaskOrderRequest is a paid mutator transaction binding the contract method 0x0a2d0cd6.
//
// Solidity: function taskOrderRequest(index uint64, taskGas uint256, codeHash string, taskIp string) returns(success bool, orderId bytes32, reason string)
func (_Chainware *ChainwareSession) TaskOrderRequest(index uint64, taskGas *big.Int, codeHash string, taskIp string) (*types.Transaction, error) {
	return _Chainware.Contract.TaskOrderRequest(&_Chainware.TransactOpts, index, taskGas, codeHash, taskIp)
}

// TaskOrderRequest is a paid mutator transaction binding the contract method 0x0a2d0cd6.
//
// Solidity: function taskOrderRequest(index uint64, taskGas uint256, codeHash string, taskIp string) returns(success bool, orderId bytes32, reason string)
func (_Chainware *ChainwareTransactorSession) TaskOrderRequest(index uint64, taskGas *big.Int, codeHash string, taskIp string) (*types.Transaction, error) {
	return _Chainware.Contract.TaskOrderRequest(&_Chainware.TransactOpts, index, taskGas, codeHash, taskIp)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_Chainware *ChainwareTransactor) TransferOwnership(opts *bind.TransactOpts, _newOwner common.Address) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "transferOwnership", _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_Chainware *ChainwareSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.TransferOwnership(&_Chainware.TransactOpts, _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_Chainware *ChainwareTransactorSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.TransferOwnership(&_Chainware.TransactOpts, _newOwner)
}
