// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package boker_contract

import (
	"math/big"
	"strings"

	"github.com/Tinachain/Tina/chain/accounts/abi"
	"github.com/Tinachain/Tina/chain/accounts/abi/bind"
	"github.com/Tinachain/Tina/chain/common"
	"github.com/Tinachain/Tina/chain/core/types"
)

// ChainwareABI is the input ABI used to generate the binding from.
const ChainwareABI = "[{\"constant\":false,\"inputs\":[],\"name\":\"houseHoldAllTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint64\"},{\"name\":\"taskGas\",\"type\":\"uint256\"},{\"name\":\"codeHash\",\"type\":\"string\"},{\"name\":\"taskIp\",\"type\":\"string\"}],\"name\":\"taskOrderRequest\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cName\",\"type\":\"string\"}],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"nodeSets\",\"outputs\":[{\"name\":\"nodeAddr\",\"type\":\"address\"},{\"name\":\"hashRate\",\"type\":\"uint256\"},{\"name\":\"lastHashRate\",\"type\":\"uint256\"},{\"name\":\"assignCnt\",\"type\":\"uint256\"},{\"name\":\"assignedClient\",\"type\":\"bytes32\"},{\"name\":\"enrollTime\",\"type\":\"uint256\"},{\"name\":\"enrolled\",\"type\":\"bool\"},{\"name\":\"nodeID\",\"type\":\"bytes32\"},{\"name\":\"nextNode\",\"type\":\"address\"},{\"name\":\"prevNode\",\"type\":\"address\"},{\"name\":\"nodeIp\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"address\"}],\"name\":\"computingNodeDisconnect\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CWARE_Token_Addr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"taskOrderList\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAllNodeSet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hashRate\",\"type\":\"uint64\"}],\"name\":\"computingNodeEnroll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bokerManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAllTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"name\":\"taskOrderCancel\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"address\"},{\"name\":\"orderID\",\"type\":\"bytes32\"},{\"name\":\"realGas\",\"type\":\"uint256\"},{\"name\":\"resultHash\",\"type\":\"string\"}],\"name\":\"computingTaskComplete\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint64\"}],\"name\":\"getTaskId\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderBook\",\"outputs\":[{\"name\":\"client\",\"type\":\"address\"},{\"name\":\"computeNode\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"uint8\"},{\"name\":\"_state\",\"type\":\"uint32\"},{\"name\":\"index\",\"type\":\"uint64\"},{\"name\":\"createTime\",\"type\":\"uint256\"},{\"name\":\"assignTime\",\"type\":\"uint256\"},{\"name\":\"completeTime\",\"type\":\"uint256\"},{\"name\":\"listPtr\",\"type\":\"uint256\"},{\"name\":\"taskGas\",\"type\":\"uint256\"},{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"name\":\"getOneTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigInt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getOrderBookCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numComputeNode\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"cware_token\",\"type\":\"address\"},{\"name\":\"addrManager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_client\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_indexID\",\"type\":\"uint64\"},{\"indexed\":true,\"name\":\"_computeNode\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_taskGas\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_createTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_state\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"ClientEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_node\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_hashRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_enrollTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"NodeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_client\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_index\",\"type\":\"uint64\"},{\"indexed\":true,\"name\":\"_computeNode\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_taskGas\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_assignTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_codeHash\",\"type\":\"string\"}],\"name\":\"AssignEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_client\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_index\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"_computeNode\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_completeTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_resultHash\",\"type\":\"string\"}],\"name\":\"CompleteEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_client\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_computeNode\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"LogEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// ChainwareBin is the compiled bytecode used for deploying new contracts.
const ChainwareBin = ``

// DeployChainware deploys a new Ethereum contract, binding an instance of Chainware to it.
func DeployChainware(auth *bind.TransactOpts, backend bind.ContractBackend, cware_token common.Address, addrManager common.Address) (common.Address, *types.Transaction, *Chainware, error) {
	parsed, err := abi.JSON(strings.NewReader(ChainwareABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ChainwareBin), backend, cware_token, addrManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Chainware{ChainwareCaller: ChainwareCaller{contract: contract}, ChainwareTransactor: ChainwareTransactor{contract: contract}}, nil
}

// Chainware is an auto generated Go binding around an Ethereum contract.
type Chainware struct {
	ChainwareCaller     // Read-only binding to the contract
	ChainwareTransactor // Write-only binding to the contract
}

// ChainwareCaller is an auto generated read-only Go binding around an Ethereum contract.
type ChainwareCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChainwareTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ChainwareTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ChainwareSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ChainwareSession struct {
	Contract     *Chainware        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ChainwareCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ChainwareCallerSession struct {
	Contract *ChainwareCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// ChainwareTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ChainwareTransactorSession struct {
	Contract     *ChainwareTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// ChainwareRaw is an auto generated low-level Go binding around an Ethereum contract.
type ChainwareRaw struct {
	Contract *Chainware // Generic contract binding to access the raw methods on
}

// ChainwareCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ChainwareCallerRaw struct {
	Contract *ChainwareCaller // Generic read-only contract binding to access the raw methods on
}

// ChainwareTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ChainwareTransactorRaw struct {
	Contract *ChainwareTransactor // Generic write-only contract binding to access the raw methods on
}

// NewChainware creates a new instance of Chainware, bound to a specific deployed contract.
func NewChainware(address common.Address, backend bind.ContractBackend) (*Chainware, error) {
	contract, err := bindChainware(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Chainware{ChainwareCaller: ChainwareCaller{contract: contract}, ChainwareTransactor: ChainwareTransactor{contract: contract}}, nil
}

// NewChainwareCaller creates a new read-only instance of Chainware, bound to a specific deployed contract.
func NewChainwareCaller(address common.Address, caller bind.ContractCaller) (*ChainwareCaller, error) {
	contract, err := bindChainware(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &ChainwareCaller{contract: contract}, nil
}

// NewChainwareTransactor creates a new write-only instance of Chainware, bound to a specific deployed contract.
func NewChainwareTransactor(address common.Address, transactor bind.ContractTransactor) (*ChainwareTransactor, error) {
	contract, err := bindChainware(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &ChainwareTransactor{contract: contract}, nil
}

// bindChainware binds a generic wrapper to an already deployed contract.
func bindChainware(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ChainwareABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Chainware *ChainwareRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Chainware.Contract.ChainwareCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Chainware *ChainwareRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.Contract.ChainwareTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Chainware *ChainwareRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Chainware.Contract.ChainwareTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Chainware *ChainwareCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Chainware.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Chainware *ChainwareTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Chainware *ChainwareTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Chainware.Contract.contract.Transact(opts, method, params...)
}

// CWARE_Token_Addr is a free data retrieval call binding the contract method 0x4602a127.
//
// Solidity: function CWARE_Token_Addr() constant returns(address)
func (_Chainware *ChainwareCaller) CWARE_Token_Addr(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "CWARE_Token_Addr")
	return *ret0, err
}

// CWARE_Token_Addr is a free data retrieval call binding the contract method 0x4602a127.
//
// Solidity: function CWARE_Token_Addr() constant returns(address)
func (_Chainware *ChainwareSession) CWARE_Token_Addr() (common.Address, error) {
	return _Chainware.Contract.CWARE_Token_Addr(&_Chainware.CallOpts)
}

// CWARE_Token_Addr is a free data retrieval call binding the contract method 0x4602a127.
//
// Solidity: function CWARE_Token_Addr() constant returns(address)
func (_Chainware *ChainwareCallerSession) CWARE_Token_Addr() (common.Address, error) {
	return _Chainware.Contract.CWARE_Token_Addr(&_Chainware.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_Chainware *ChainwareCaller) BokerManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "bokerManager")
	return *ret0, err
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_Chainware *ChainwareSession) BokerManager() (common.Address, error) {
	return _Chainware.Contract.BokerManager(&_Chainware.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_Chainware *ChainwareCallerSession) BokerManager() (common.Address, error) {
	return _Chainware.Contract.BokerManager(&_Chainware.CallOpts)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_Chainware *ChainwareCaller) ContractAddress(opts *bind.CallOpts, cName string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "contractAddress", cName)
	return *ret0, err
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_Chainware *ChainwareSession) ContractAddress(cName string) (common.Address, error) {
	return _Chainware.Contract.ContractAddress(&_Chainware.CallOpts, cName)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_Chainware *ChainwareCallerSession) ContractAddress(cName string) (common.Address, error) {
	return _Chainware.Contract.ContractAddress(&_Chainware.CallOpts, cName)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_Chainware *ChainwareCaller) CreateTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "createTime")
	return *ret0, err
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_Chainware *ChainwareSession) CreateTime() (*big.Int, error) {
	return _Chainware.Contract.CreateTime(&_Chainware.CallOpts)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_Chainware *ChainwareCallerSession) CreateTime() (*big.Int, error) {
	return _Chainware.Contract.CreateTime(&_Chainware.CallOpts)
}

// GetOneTaskOrder is a free data retrieval call binding the contract method 0xcf7da04b.
//
// Solidity: function getOneTaskOrder(orderID bytes32) constant returns(bool)
func (_Chainware *ChainwareCaller) GetOneTaskOrder(opts *bind.CallOpts, orderID [32]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "getOneTaskOrder", orderID)
	return *ret0, err
}

// GetOneTaskOrder is a free data retrieval call binding the contract method 0xcf7da04b.
//
// Solidity: function getOneTaskOrder(orderID bytes32) constant returns(bool)
func (_Chainware *ChainwareSession) GetOneTaskOrder(orderID [32]byte) (bool, error) {
	return _Chainware.Contract.GetOneTaskOrder(&_Chainware.CallOpts, orderID)
}

// GetOneTaskOrder is a free data retrieval call binding the contract method 0xcf7da04b.
//
// Solidity: function getOneTaskOrder(orderID bytes32) constant returns(bool)
func (_Chainware *ChainwareCallerSession) GetOneTaskOrder(orderID [32]byte) (bool, error) {
	return _Chainware.Contract.GetOneTaskOrder(&_Chainware.CallOpts, orderID)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_Chainware *ChainwareCaller) GlobalConfigInt(opts *bind.CallOpts, key string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "globalConfigInt", key)
	return *ret0, err
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_Chainware *ChainwareSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _Chainware.Contract.GlobalConfigInt(&_Chainware.CallOpts, key)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_Chainware *ChainwareCallerSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _Chainware.Contract.GlobalConfigInt(&_Chainware.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_Chainware *ChainwareCaller) GlobalConfigString(opts *bind.CallOpts, key string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "globalConfigString", key)
	return *ret0, err
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_Chainware *ChainwareSession) GlobalConfigString(key string) (string, error) {
	return _Chainware.Contract.GlobalConfigString(&_Chainware.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_Chainware *ChainwareCallerSession) GlobalConfigString(key string) (string, error) {
	return _Chainware.Contract.GlobalConfigString(&_Chainware.CallOpts, key)
}

// NodeSets is a free data retrieval call binding the contract method 0x23ac273f.
//
// Solidity: function nodeSets( address) constant returns(nodeAddr address, hashRate uint256, lastHashRate uint256, assignCnt uint256, assignedClient bytes32, enrollTime uint256, enrolled bool, nodeID bytes32, nextNode address, prevNode address, nodeIp string)
func (_Chainware *ChainwareCaller) NodeSets(opts *bind.CallOpts, arg0 common.Address) (struct {
	NodeAddr       common.Address
	HashRate       *big.Int
	LastHashRate   *big.Int
	AssignCnt      *big.Int
	AssignedClient [32]byte
	EnrollTime     *big.Int
	Enrolled       bool
	NodeID         [32]byte
	NextNode       common.Address
	PrevNode       common.Address
	NodeIp         string
}, error) {
	ret := new(struct {
		NodeAddr       common.Address
		HashRate       *big.Int
		LastHashRate   *big.Int
		AssignCnt      *big.Int
		AssignedClient [32]byte
		EnrollTime     *big.Int
		Enrolled       bool
		NodeID         [32]byte
		NextNode       common.Address
		PrevNode       common.Address
		NodeIp         string
	})
	out := ret
	err := _Chainware.contract.Call(opts, out, "nodeSets", arg0)
	return *ret, err
}

// NodeSets is a free data retrieval call binding the contract method 0x23ac273f.
//
// Solidity: function nodeSets( address) constant returns(nodeAddr address, hashRate uint256, lastHashRate uint256, assignCnt uint256, assignedClient bytes32, enrollTime uint256, enrolled bool, nodeID bytes32, nextNode address, prevNode address, nodeIp string)
func (_Chainware *ChainwareSession) NodeSets(arg0 common.Address) (struct {
	NodeAddr       common.Address
	HashRate       *big.Int
	LastHashRate   *big.Int
	AssignCnt      *big.Int
	AssignedClient [32]byte
	EnrollTime     *big.Int
	Enrolled       bool
	NodeID         [32]byte
	NextNode       common.Address
	PrevNode       common.Address
	NodeIp         string
}, error) {
	return _Chainware.Contract.NodeSets(&_Chainware.CallOpts, arg0)
}

// NodeSets is a free data retrieval call binding the contract method 0x23ac273f.
//
// Solidity: function nodeSets( address) constant returns(nodeAddr address, hashRate uint256, lastHashRate uint256, assignCnt uint256, assignedClient bytes32, enrollTime uint256, enrolled bool, nodeID bytes32, nextNode address, prevNode address, nodeIp string)
func (_Chainware *ChainwareCallerSession) NodeSets(arg0 common.Address) (struct {
	NodeAddr       common.Address
	HashRate       *big.Int
	LastHashRate   *big.Int
	AssignCnt      *big.Int
	AssignedClient [32]byte
	EnrollTime     *big.Int
	Enrolled       bool
	NodeID         [32]byte
	NextNode       common.Address
	PrevNode       common.Address
	NodeIp         string
}, error) {
	return _Chainware.Contract.NodeSets(&_Chainware.CallOpts, arg0)
}

// NumComputeNode is a free data retrieval call binding the contract method 0xef16b54c.
//
// Solidity: function numComputeNode() constant returns(uint256)
func (_Chainware *ChainwareCaller) NumComputeNode(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "numComputeNode")
	return *ret0, err
}

// NumComputeNode is a free data retrieval call binding the contract method 0xef16b54c.
//
// Solidity: function numComputeNode() constant returns(uint256)
func (_Chainware *ChainwareSession) NumComputeNode() (*big.Int, error) {
	return _Chainware.Contract.NumComputeNode(&_Chainware.CallOpts)
}

// NumComputeNode is a free data retrieval call binding the contract method 0xef16b54c.
//
// Solidity: function numComputeNode() constant returns(uint256)
func (_Chainware *ChainwareCallerSession) NumComputeNode() (*big.Int, error) {
	return _Chainware.Contract.NumComputeNode(&_Chainware.CallOpts)
}

// NumTaskOrder is a free data retrieval call binding the contract method 0x2324e6b0.
//
// Solidity: function numTaskOrder() constant returns(uint256)
func (_Chainware *ChainwareCaller) NumTaskOrder(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "numTaskOrder")
	return *ret0, err
}

// NumTaskOrder is a free data retrieval call binding the contract method 0x2324e6b0.
//
// Solidity: function numTaskOrder() constant returns(uint256)
func (_Chainware *ChainwareSession) NumTaskOrder() (*big.Int, error) {
	return _Chainware.Contract.NumTaskOrder(&_Chainware.CallOpts)
}

// NumTaskOrder is a free data retrieval call binding the contract method 0x2324e6b0.
//
// Solidity: function numTaskOrder() constant returns(uint256)
func (_Chainware *ChainwareCallerSession) NumTaskOrder() (*big.Int, error) {
	return _Chainware.Contract.NumTaskOrder(&_Chainware.CallOpts)
}

// OrderBook is a free data retrieval call binding the contract method 0xbd1bceca.
//
// Solidity: function orderBook( bytes32) constant returns(client address, computeNode address, state uint8, _state uint32, index uint64, createTime uint256, assignTime uint256, completeTime uint256, listPtr uint256, taskGas uint256, orderID bytes32)
func (_Chainware *ChainwareCaller) OrderBook(opts *bind.CallOpts, arg0 [32]byte) (struct {
	Client       common.Address
	ComputeNode  common.Address
	State        uint8
	_state       uint32
	Index        uint64
	CreateTime   *big.Int
	AssignTime   *big.Int
	CompleteTime *big.Int
	ListPtr      *big.Int
	TaskGas      *big.Int
	OrderID      [32]byte
}, error) {
	ret := new(struct {
		Client       common.Address
		ComputeNode  common.Address
		State        uint8
		_state       uint32
		Index        uint64
		CreateTime   *big.Int
		AssignTime   *big.Int
		CompleteTime *big.Int
		ListPtr      *big.Int
		TaskGas      *big.Int
		OrderID      [32]byte
	})
	out := ret
	err := _Chainware.contract.Call(opts, out, "orderBook", arg0)
	return *ret, err
}

// OrderBook is a free data retrieval call binding the contract method 0xbd1bceca.
//
// Solidity: function orderBook( bytes32) constant returns(client address, computeNode address, state uint8, _state uint32, index uint64, createTime uint256, assignTime uint256, completeTime uint256, listPtr uint256, taskGas uint256, orderID bytes32)
func (_Chainware *ChainwareSession) OrderBook(arg0 [32]byte) (struct {
	Client       common.Address
	ComputeNode  common.Address
	State        uint8
	_state       uint32
	Index        uint64
	CreateTime   *big.Int
	AssignTime   *big.Int
	CompleteTime *big.Int
	ListPtr      *big.Int
	TaskGas      *big.Int
	OrderID      [32]byte
}, error) {
	return _Chainware.Contract.OrderBook(&_Chainware.CallOpts, arg0)
}

// OrderBook is a free data retrieval call binding the contract method 0xbd1bceca.
//
// Solidity: function orderBook( bytes32) constant returns(client address, computeNode address, state uint8, _state uint32, index uint64, createTime uint256, assignTime uint256, completeTime uint256, listPtr uint256, taskGas uint256, orderID bytes32)
func (_Chainware *ChainwareCallerSession) OrderBook(arg0 [32]byte) (struct {
	Client       common.Address
	ComputeNode  common.Address
	State        uint8
	_state       uint32
	Index        uint64
	CreateTime   *big.Int
	AssignTime   *big.Int
	CompleteTime *big.Int
	ListPtr      *big.Int
	TaskGas      *big.Int
	OrderID      [32]byte
}, error) {
	return _Chainware.Contract.OrderBook(&_Chainware.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Chainware *ChainwareCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Chainware *ChainwareSession) Owner() (common.Address, error) {
	return _Chainware.Contract.Owner(&_Chainware.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Chainware *ChainwareCallerSession) Owner() (common.Address, error) {
	return _Chainware.Contract.Owner(&_Chainware.CallOpts)
}

// TaskOrderList is a free data retrieval call binding the contract method 0x480e46db.
//
// Solidity: function taskOrderList( uint256) constant returns(bytes32)
func (_Chainware *ChainwareCaller) TaskOrderList(opts *bind.CallOpts, arg0 *big.Int) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "taskOrderList", arg0)
	return *ret0, err
}

// TaskOrderList is a free data retrieval call binding the contract method 0x480e46db.
//
// Solidity: function taskOrderList( uint256) constant returns(bytes32)
func (_Chainware *ChainwareSession) TaskOrderList(arg0 *big.Int) ([32]byte, error) {
	return _Chainware.Contract.TaskOrderList(&_Chainware.CallOpts, arg0)
}

// TaskOrderList is a free data retrieval call binding the contract method 0x480e46db.
//
// Solidity: function taskOrderList( uint256) constant returns(bytes32)
func (_Chainware *ChainwareCallerSession) TaskOrderList(arg0 *big.Int) ([32]byte, error) {
	return _Chainware.Contract.TaskOrderList(&_Chainware.CallOpts, arg0)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_Chainware *ChainwareCaller) Version(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Chainware.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_Chainware *ChainwareSession) Version() (string, error) {
	return _Chainware.Contract.Version(&_Chainware.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_Chainware *ChainwareCallerSession) Version() (string, error) {
	return _Chainware.Contract.Version(&_Chainware.CallOpts)
}

// ComputingNodeDisconnect is a paid mutator transaction binding the contract method 0x2d5f6f62.
//
// Solidity: function computingNodeDisconnect(node address) returns(bool)
func (_Chainware *ChainwareTransactor) ComputingNodeDisconnect(opts *bind.TransactOpts, node common.Address) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "computingNodeDisconnect", node)
}

// ComputingNodeDisconnect is a paid mutator transaction binding the contract method 0x2d5f6f62.
//
// Solidity: function computingNodeDisconnect(node address) returns(bool)
func (_Chainware *ChainwareSession) ComputingNodeDisconnect(node common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingNodeDisconnect(&_Chainware.TransactOpts, node)
}

// ComputingNodeDisconnect is a paid mutator transaction binding the contract method 0x2d5f6f62.
//
// Solidity: function computingNodeDisconnect(node address) returns(bool)
func (_Chainware *ChainwareTransactorSession) ComputingNodeDisconnect(node common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingNodeDisconnect(&_Chainware.TransactOpts, node)
}

// ComputingNodeEnroll is a paid mutator transaction binding the contract method 0x5b2be05d.
//
// Solidity: function computingNodeEnroll(hashRate uint64) returns(bool)
func (_Chainware *ChainwareTransactor) ComputingNodeEnroll(opts *bind.TransactOpts, hashRate uint64) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "computingNodeEnroll", hashRate)
}

// ComputingNodeEnroll is a paid mutator transaction binding the contract method 0x5b2be05d.
//
// Solidity: function computingNodeEnroll(hashRate uint64) returns(bool)
func (_Chainware *ChainwareSession) ComputingNodeEnroll(hashRate uint64) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingNodeEnroll(&_Chainware.TransactOpts, hashRate)
}

// ComputingNodeEnroll is a paid mutator transaction binding the contract method 0x5b2be05d.
//
// Solidity: function computingNodeEnroll(hashRate uint64) returns(bool)
func (_Chainware *ChainwareTransactorSession) ComputingNodeEnroll(hashRate uint64) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingNodeEnroll(&_Chainware.TransactOpts, hashRate)
}

// ComputingTaskComplete is a paid mutator transaction binding the contract method 0x9eaabf76.
//
// Solidity: function computingTaskComplete(node address, orderID bytes32, realGas uint256, resultHash string) returns(bool)
func (_Chainware *ChainwareTransactor) ComputingTaskComplete(opts *bind.TransactOpts, node common.Address, orderID [32]byte, realGas *big.Int, resultHash string) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "computingTaskComplete", node, orderID, realGas, resultHash)
}

// ComputingTaskComplete is a paid mutator transaction binding the contract method 0x9eaabf76.
//
// Solidity: function computingTaskComplete(node address, orderID bytes32, realGas uint256, resultHash string) returns(bool)
func (_Chainware *ChainwareSession) ComputingTaskComplete(node common.Address, orderID [32]byte, realGas *big.Int, resultHash string) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingTaskComplete(&_Chainware.TransactOpts, node, orderID, realGas, resultHash)
}

// ComputingTaskComplete is a paid mutator transaction binding the contract method 0x9eaabf76.
//
// Solidity: function computingTaskComplete(node address, orderID bytes32, realGas uint256, resultHash string) returns(bool)
func (_Chainware *ChainwareTransactorSession) ComputingTaskComplete(node common.Address, orderID [32]byte, realGas *big.Int, resultHash string) (*types.Transaction, error) {
	return _Chainware.Contract.ComputingTaskComplete(&_Chainware.TransactOpts, node, orderID, realGas, resultHash)
}

// GetAllNodeSet is a paid mutator transaction binding the contract method 0x4e580dd0.
//
// Solidity: function getAllNodeSet() returns(bool)
func (_Chainware *ChainwareTransactor) GetAllNodeSet(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "getAllNodeSet")
}

// GetAllNodeSet is a paid mutator transaction binding the contract method 0x4e580dd0.
//
// Solidity: function getAllNodeSet() returns(bool)
func (_Chainware *ChainwareSession) GetAllNodeSet() (*types.Transaction, error) {
	return _Chainware.Contract.GetAllNodeSet(&_Chainware.TransactOpts)
}

// GetAllNodeSet is a paid mutator transaction binding the contract method 0x4e580dd0.
//
// Solidity: function getAllNodeSet() returns(bool)
func (_Chainware *ChainwareTransactorSession) GetAllNodeSet() (*types.Transaction, error) {
	return _Chainware.Contract.GetAllNodeSet(&_Chainware.TransactOpts)
}

// GetAllTaskOrder is a paid mutator transaction binding the contract method 0x96854ba4.
//
// Solidity: function getAllTaskOrder() returns(bool)
func (_Chainware *ChainwareTransactor) GetAllTaskOrder(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "getAllTaskOrder")
}

// GetAllTaskOrder is a paid mutator transaction binding the contract method 0x96854ba4.
//
// Solidity: function getAllTaskOrder() returns(bool)
func (_Chainware *ChainwareSession) GetAllTaskOrder() (*types.Transaction, error) {
	return _Chainware.Contract.GetAllTaskOrder(&_Chainware.TransactOpts)
}

// GetAllTaskOrder is a paid mutator transaction binding the contract method 0x96854ba4.
//
// Solidity: function getAllTaskOrder() returns(bool)
func (_Chainware *ChainwareTransactorSession) GetAllTaskOrder() (*types.Transaction, error) {
	return _Chainware.Contract.GetAllTaskOrder(&_Chainware.TransactOpts)
}

// GetOrderBookCount is a paid mutator transaction binding the contract method 0xe35ab3e8.
//
// Solidity: function getOrderBookCount() returns(uint256)
func (_Chainware *ChainwareTransactor) GetOrderBookCount(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "getOrderBookCount")
}

// GetOrderBookCount is a paid mutator transaction binding the contract method 0xe35ab3e8.
//
// Solidity: function getOrderBookCount() returns(uint256)
func (_Chainware *ChainwareSession) GetOrderBookCount() (*types.Transaction, error) {
	return _Chainware.Contract.GetOrderBookCount(&_Chainware.TransactOpts)
}

// GetOrderBookCount is a paid mutator transaction binding the contract method 0xe35ab3e8.
//
// Solidity: function getOrderBookCount() returns(uint256)
func (_Chainware *ChainwareTransactorSession) GetOrderBookCount() (*types.Transaction, error) {
	return _Chainware.Contract.GetOrderBookCount(&_Chainware.TransactOpts)
}

// GetTaskId is a paid mutator transaction binding the contract method 0xb1b5e6e3.
//
// Solidity: function getTaskId(index uint64) returns(bytes32)
func (_Chainware *ChainwareTransactor) GetTaskId(opts *bind.TransactOpts, index uint64) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "getTaskId", index)
}

// GetTaskId is a paid mutator transaction binding the contract method 0xb1b5e6e3.
//
// Solidity: function getTaskId(index uint64) returns(bytes32)
func (_Chainware *ChainwareSession) GetTaskId(index uint64) (*types.Transaction, error) {
	return _Chainware.Contract.GetTaskId(&_Chainware.TransactOpts, index)
}

// GetTaskId is a paid mutator transaction binding the contract method 0xb1b5e6e3.
//
// Solidity: function getTaskId(index uint64) returns(bytes32)
func (_Chainware *ChainwareTransactorSession) GetTaskId(index uint64) (*types.Transaction, error) {
	return _Chainware.Contract.GetTaskId(&_Chainware.TransactOpts, index)
}

// HouseHoldAllTaskOrder is a paid mutator transaction binding the contract method 0x0414fc4a.
//
// Solidity: function houseHoldAllTaskOrder() returns(bool)
func (_Chainware *ChainwareTransactor) HouseHoldAllTaskOrder(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "houseHoldAllTaskOrder")
}

// HouseHoldAllTaskOrder is a paid mutator transaction binding the contract method 0x0414fc4a.
//
// Solidity: function houseHoldAllTaskOrder() returns(bool)
func (_Chainware *ChainwareSession) HouseHoldAllTaskOrder() (*types.Transaction, error) {
	return _Chainware.Contract.HouseHoldAllTaskOrder(&_Chainware.TransactOpts)
}

// HouseHoldAllTaskOrder is a paid mutator transaction binding the contract method 0x0414fc4a.
//
// Solidity: function houseHoldAllTaskOrder() returns(bool)
func (_Chainware *ChainwareTransactorSession) HouseHoldAllTaskOrder() (*types.Transaction, error) {
	return _Chainware.Contract.HouseHoldAllTaskOrder(&_Chainware.TransactOpts)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_Chainware *ChainwareTransactor) SetManager(opts *bind.TransactOpts, addrManager common.Address) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "setManager", addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_Chainware *ChainwareSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.SetManager(&_Chainware.TransactOpts, addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_Chainware *ChainwareTransactorSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.SetManager(&_Chainware.TransactOpts, addrManager)
}

// TaskOrderCancel is a paid mutator transaction binding the contract method 0x982a4afe.
//
// Solidity: function taskOrderCancel(orderID bytes32) returns(bool)
func (_Chainware *ChainwareTransactor) TaskOrderCancel(opts *bind.TransactOpts, orderID [32]byte) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "taskOrderCancel", orderID)
}

// TaskOrderCancel is a paid mutator transaction binding the contract method 0x982a4afe.
//
// Solidity: function taskOrderCancel(orderID bytes32) returns(bool)
func (_Chainware *ChainwareSession) TaskOrderCancel(orderID [32]byte) (*types.Transaction, error) {
	return _Chainware.Contract.TaskOrderCancel(&_Chainware.TransactOpts, orderID)
}

// TaskOrderCancel is a paid mutator transaction binding the contract method 0x982a4afe.
//
// Solidity: function taskOrderCancel(orderID bytes32) returns(bool)
func (_Chainware *ChainwareTransactorSession) TaskOrderCancel(orderID [32]byte) (*types.Transaction, error) {
	return _Chainware.Contract.TaskOrderCancel(&_Chainware.TransactOpts, orderID)
}

// TaskOrderRequest is a paid mutator transaction binding the contract method 0x0a2d0cd6.
//
// Solidity: function taskOrderRequest(index uint64, taskGas uint256, codeHash string, taskIp string) returns(bool)
func (_Chainware *ChainwareTransactor) TaskOrderRequest(opts *bind.TransactOpts, index uint64, taskGas *big.Int, codeHash string, taskIp string) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "taskOrderRequest", index, taskGas, codeHash, taskIp)
}

// TaskOrderRequest is a paid mutator transaction binding the contract method 0x0a2d0cd6.
//
// Solidity: function taskOrderRequest(index uint64, taskGas uint256, codeHash string, taskIp string) returns(bool)
func (_Chainware *ChainwareSession) TaskOrderRequest(index uint64, taskGas *big.Int, codeHash string, taskIp string) (*types.Transaction, error) {
	return _Chainware.Contract.TaskOrderRequest(&_Chainware.TransactOpts, index, taskGas, codeHash, taskIp)
}

// TaskOrderRequest is a paid mutator transaction binding the contract method 0x0a2d0cd6.
//
// Solidity: function taskOrderRequest(index uint64, taskGas uint256, codeHash string, taskIp string) returns(bool)
func (_Chainware *ChainwareTransactorSession) TaskOrderRequest(index uint64, taskGas *big.Int, codeHash string, taskIp string) (*types.Transaction, error) {
	return _Chainware.Contract.TaskOrderRequest(&_Chainware.TransactOpts, index, taskGas, codeHash, taskIp)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_Chainware *ChainwareTransactor) TransferOwnership(opts *bind.TransactOpts, _newOwner common.Address) (*types.Transaction, error) {
	return _Chainware.contract.Transact(opts, "transferOwnership", _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_Chainware *ChainwareSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.TransferOwnership(&_Chainware.TransactOpts, _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_Chainware *ChainwareTransactorSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _Chainware.Contract.TransferOwnership(&_Chainware.TransactOpts, _newOwner)
}
