// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package boker_contract

import (
	"math/big"
	"strings"

	"github.com/Tinachain/Tina/chain/accounts/abi"
	"github.com/Tinachain/Tina/chain/accounts/abi/bind"
	"github.com/Tinachain/Tina/chain/common"
	"github.com/Tinachain/Tina/chain/core/types"
)

// BokerInterfaceABI is the input ABI used to generate the binding from.
const BokerInterfaceABI = "[{\"constant\":false,\"inputs\":[],\"name\":\"houseHoldAllTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCandidates\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"tickets\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint64\"},{\"name\":\"taskGas\",\"type\":\"uint256\"},{\"name\":\"codeHash\",\"type\":\"string\"},{\"name\":\"taskIp\",\"type\":\"string\"}],\"name\":\"taskOrderRequest\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"},{\"name\":\"orderId\",\"type\":\"bytes32\"},{\"name\":\"reason\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"orderId\",\"type\":\"bytes32\"},{\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"name\":\"taskIp\",\"type\":\"string\"}],\"name\":\"lockToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cName\",\"type\":\"string\"}],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"voteCandidate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"address\"}],\"name\":\"computingNodeDisconnect\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"getLockToken\",\"outputs\":[{\"name\":\"exitst\",\"type\":\"bool\"},{\"name\":\"orderID\",\"type\":\"bytes32\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"taskIp\",\"type\":\"string\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"getAccountBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAllNodeSet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hashRate\",\"type\":\"uint64\"}],\"name\":\"computingNodeEnroll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bokerManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"name\":\"getTaskOrder\",\"outputs\":[{\"name\":\"exists\",\"type\":\"bool\"},{\"name\":\"client\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint64\"},{\"name\":\"createTime\",\"type\":\"uint256\"},{\"name\":\"taskGas\",\"type\":\"uint256\"},{\"name\":\"taskIp\",\"type\":\"string\"},{\"name\":\"codeHash\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"name\":\"isActiveOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyLockBoxBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"orderId\",\"type\":\"bytes32\"}],\"name\":\"unLockToken\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAllTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"name\":\"taskOrderCancel\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"node\",\"type\":\"address\"},{\"name\":\"orderID\",\"type\":\"bytes32\"},{\"name\":\"realGas\",\"type\":\"uint256\"},{\"name\":\"resultHash\",\"type\":\"string\"}],\"name\":\"computingTaskComplete\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"getCandidate\",\"outputs\":[{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"tickets\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMyAccountBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orderID\",\"type\":\"bytes32\"}],\"name\":\"getOneTaskOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isBokerInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigInt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"getLockBoxBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getOrderBookCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelAllVotes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"tickets\",\"type\":\"uint256\"}],\"name\":\"registerCandidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// BokerInterfaceBin is the compiled bytecode used for deploying new contracts.
const BokerInterfaceBin = ``

// DeployBokerInterface deploys a new Ethereum contract, binding an instance of BokerInterface to it.
func DeployBokerInterface(auth *bind.TransactOpts, backend bind.ContractBackend, addrManager common.Address) (common.Address, *types.Transaction, *BokerInterface, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerInterfaceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BokerInterfaceBin), backend, addrManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BokerInterface{BokerInterfaceCaller: BokerInterfaceCaller{contract: contract}, BokerInterfaceTransactor: BokerInterfaceTransactor{contract: contract}}, nil
}

// BokerInterface is an auto generated Go binding around an Ethereum contract.
type BokerInterface struct {
	BokerInterfaceCaller     // Read-only binding to the contract
	BokerInterfaceTransactor // Write-only binding to the contract
}

// BokerInterfaceCaller is an auto generated read-only Go binding around an Ethereum contract.
type BokerInterfaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerInterfaceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BokerInterfaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerInterfaceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BokerInterfaceSession struct {
	Contract     *BokerInterface   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BokerInterfaceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BokerInterfaceCallerSession struct {
	Contract *BokerInterfaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// BokerInterfaceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BokerInterfaceTransactorSession struct {
	Contract     *BokerInterfaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// BokerInterfaceRaw is an auto generated low-level Go binding around an Ethereum contract.
type BokerInterfaceRaw struct {
	Contract *BokerInterface // Generic contract binding to access the raw methods on
}

// BokerInterfaceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BokerInterfaceCallerRaw struct {
	Contract *BokerInterfaceCaller // Generic read-only contract binding to access the raw methods on
}

// BokerInterfaceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BokerInterfaceTransactorRaw struct {
	Contract *BokerInterfaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBokerInterface creates a new instance of BokerInterface, bound to a specific deployed contract.
func NewBokerInterface(address common.Address, backend bind.ContractBackend) (*BokerInterface, error) {
	contract, err := bindBokerInterface(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BokerInterface{BokerInterfaceCaller: BokerInterfaceCaller{contract: contract}, BokerInterfaceTransactor: BokerInterfaceTransactor{contract: contract}}, nil
}

// NewBokerInterfaceCaller creates a new read-only instance of BokerInterface, bound to a specific deployed contract.
func NewBokerInterfaceCaller(address common.Address, caller bind.ContractCaller) (*BokerInterfaceCaller, error) {
	contract, err := bindBokerInterface(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &BokerInterfaceCaller{contract: contract}, nil
}

// NewBokerInterfaceTransactor creates a new write-only instance of BokerInterface, bound to a specific deployed contract.
func NewBokerInterfaceTransactor(address common.Address, transactor bind.ContractTransactor) (*BokerInterfaceTransactor, error) {
	contract, err := bindBokerInterface(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &BokerInterfaceTransactor{contract: contract}, nil
}

// bindBokerInterface binds a generic wrapper to an already deployed contract.
func bindBokerInterface(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerInterfaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerInterface *BokerInterfaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerInterface.Contract.BokerInterfaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerInterface *BokerInterfaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerInterface.Contract.BokerInterfaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerInterface *BokerInterfaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerInterface.Contract.BokerInterfaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerInterface *BokerInterfaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerInterface.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerInterface *BokerInterfaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerInterface.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerInterface *BokerInterfaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerInterface.Contract.contract.Transact(opts, method, params...)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerInterface *BokerInterfaceCaller) BokerManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "bokerManager")
	return *ret0, err
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerInterface *BokerInterfaceSession) BokerManager() (common.Address, error) {
	return _BokerInterface.Contract.BokerManager(&_BokerInterface.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerInterface *BokerInterfaceCallerSession) BokerManager() (common.Address, error) {
	return _BokerInterface.Contract.BokerManager(&_BokerInterface.CallOpts)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerInterface *BokerInterfaceCaller) ContractAddress(opts *bind.CallOpts, cName string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "contractAddress", cName)
	return *ret0, err
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerInterface *BokerInterfaceSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerInterface.Contract.ContractAddress(&_BokerInterface.CallOpts, cName)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerInterface *BokerInterfaceCallerSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerInterface.Contract.ContractAddress(&_BokerInterface.CallOpts, cName)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerInterface *BokerInterfaceCaller) CreateTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "createTime")
	return *ret0, err
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerInterface *BokerInterfaceSession) CreateTime() (*big.Int, error) {
	return _BokerInterface.Contract.CreateTime(&_BokerInterface.CallOpts)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerInterface *BokerInterfaceCallerSession) CreateTime() (*big.Int, error) {
	return _BokerInterface.Contract.CreateTime(&_BokerInterface.CallOpts)
}

// GetAccountBalanceOf is a free data retrieval call binding the contract method 0x3b5baccc.
//
// Solidity: function getAccountBalanceOf(target address) constant returns(uint256)
func (_BokerInterface *BokerInterfaceCaller) GetAccountBalanceOf(opts *bind.CallOpts, target common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "getAccountBalanceOf", target)
	return *ret0, err
}

// GetAccountBalanceOf is a free data retrieval call binding the contract method 0x3b5baccc.
//
// Solidity: function getAccountBalanceOf(target address) constant returns(uint256)
func (_BokerInterface *BokerInterfaceSession) GetAccountBalanceOf(target common.Address) (*big.Int, error) {
	return _BokerInterface.Contract.GetAccountBalanceOf(&_BokerInterface.CallOpts, target)
}

// GetAccountBalanceOf is a free data retrieval call binding the contract method 0x3b5baccc.
//
// Solidity: function getAccountBalanceOf(target address) constant returns(uint256)
func (_BokerInterface *BokerInterfaceCallerSession) GetAccountBalanceOf(target common.Address) (*big.Int, error) {
	return _BokerInterface.Contract.GetAccountBalanceOf(&_BokerInterface.CallOpts, target)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerInterface *BokerInterfaceCaller) GetCandidate(opts *bind.CallOpts, addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	ret := new(struct {
		Description string
		Team        string
		Name        string
		Tickets     *big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "getCandidate", addrCandidate)
	return *ret, err
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerInterface *BokerInterfaceSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerInterface.Contract.GetCandidate(&_BokerInterface.CallOpts, addrCandidate)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerInterface *BokerInterfaceCallerSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerInterface.Contract.GetCandidate(&_BokerInterface.CallOpts, addrCandidate)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerInterface *BokerInterfaceCaller) GetCandidates(opts *bind.CallOpts) (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	ret := new(struct {
		Addresses []common.Address
		Tickets   []*big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "getCandidates")
	return *ret, err
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerInterface *BokerInterfaceSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerInterface.Contract.GetCandidates(&_BokerInterface.CallOpts)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerInterface *BokerInterfaceCallerSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerInterface.Contract.GetCandidates(&_BokerInterface.CallOpts)
}

// GetLockBoxBalanceOf is a free data retrieval call binding the contract method 0xd9d0d761.
//
// Solidity: function getLockBoxBalanceOf(target address) constant returns(uint256)
func (_BokerInterface *BokerInterfaceCaller) GetLockBoxBalanceOf(opts *bind.CallOpts, target common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "getLockBoxBalanceOf", target)
	return *ret0, err
}

// GetLockBoxBalanceOf is a free data retrieval call binding the contract method 0xd9d0d761.
//
// Solidity: function getLockBoxBalanceOf(target address) constant returns(uint256)
func (_BokerInterface *BokerInterfaceSession) GetLockBoxBalanceOf(target common.Address) (*big.Int, error) {
	return _BokerInterface.Contract.GetLockBoxBalanceOf(&_BokerInterface.CallOpts, target)
}

// GetLockBoxBalanceOf is a free data retrieval call binding the contract method 0xd9d0d761.
//
// Solidity: function getLockBoxBalanceOf(target address) constant returns(uint256)
func (_BokerInterface *BokerInterfaceCallerSession) GetLockBoxBalanceOf(target common.Address) (*big.Int, error) {
	return _BokerInterface.Contract.GetLockBoxBalanceOf(&_BokerInterface.CallOpts, target)
}

// GetMyAccountBalanceOf is a free data retrieval call binding the contract method 0xceaeeb4a.
//
// Solidity: function getMyAccountBalanceOf() constant returns(uint256)
func (_BokerInterface *BokerInterfaceCaller) GetMyAccountBalanceOf(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "getMyAccountBalanceOf")
	return *ret0, err
}

// GetMyAccountBalanceOf is a free data retrieval call binding the contract method 0xceaeeb4a.
//
// Solidity: function getMyAccountBalanceOf() constant returns(uint256)
func (_BokerInterface *BokerInterfaceSession) GetMyAccountBalanceOf() (*big.Int, error) {
	return _BokerInterface.Contract.GetMyAccountBalanceOf(&_BokerInterface.CallOpts)
}

// GetMyAccountBalanceOf is a free data retrieval call binding the contract method 0xceaeeb4a.
//
// Solidity: function getMyAccountBalanceOf() constant returns(uint256)
func (_BokerInterface *BokerInterfaceCallerSession) GetMyAccountBalanceOf() (*big.Int, error) {
	return _BokerInterface.Contract.GetMyAccountBalanceOf(&_BokerInterface.CallOpts)
}

// GetMyLockBoxBalanceOf is a free data retrieval call binding the contract method 0x93f6edca.
//
// Solidity: function getMyLockBoxBalanceOf() constant returns(uint256)
func (_BokerInterface *BokerInterfaceCaller) GetMyLockBoxBalanceOf(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "getMyLockBoxBalanceOf")
	return *ret0, err
}

// GetMyLockBoxBalanceOf is a free data retrieval call binding the contract method 0x93f6edca.
//
// Solidity: function getMyLockBoxBalanceOf() constant returns(uint256)
func (_BokerInterface *BokerInterfaceSession) GetMyLockBoxBalanceOf() (*big.Int, error) {
	return _BokerInterface.Contract.GetMyLockBoxBalanceOf(&_BokerInterface.CallOpts)
}

// GetMyLockBoxBalanceOf is a free data retrieval call binding the contract method 0x93f6edca.
//
// Solidity: function getMyLockBoxBalanceOf() constant returns(uint256)
func (_BokerInterface *BokerInterfaceCallerSession) GetMyLockBoxBalanceOf() (*big.Int, error) {
	return _BokerInterface.Contract.GetMyLockBoxBalanceOf(&_BokerInterface.CallOpts)
}

// GetOneTaskOrder is a free data retrieval call binding the contract method 0xcf7da04b.
//
// Solidity: function getOneTaskOrder(orderID bytes32) constant returns(bool)
func (_BokerInterface *BokerInterfaceCaller) GetOneTaskOrder(opts *bind.CallOpts, orderID [32]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "getOneTaskOrder", orderID)
	return *ret0, err
}

// GetOneTaskOrder is a free data retrieval call binding the contract method 0xcf7da04b.
//
// Solidity: function getOneTaskOrder(orderID bytes32) constant returns(bool)
func (_BokerInterface *BokerInterfaceSession) GetOneTaskOrder(orderID [32]byte) (bool, error) {
	return _BokerInterface.Contract.GetOneTaskOrder(&_BokerInterface.CallOpts, orderID)
}

// GetOneTaskOrder is a free data retrieval call binding the contract method 0xcf7da04b.
//
// Solidity: function getOneTaskOrder(orderID bytes32) constant returns(bool)
func (_BokerInterface *BokerInterfaceCallerSession) GetOneTaskOrder(orderID [32]byte) (bool, error) {
	return _BokerInterface.Contract.GetOneTaskOrder(&_BokerInterface.CallOpts, orderID)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerInterface *BokerInterfaceCaller) GlobalConfigInt(opts *bind.CallOpts, key string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "globalConfigInt", key)
	return *ret0, err
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerInterface *BokerInterfaceSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerInterface.Contract.GlobalConfigInt(&_BokerInterface.CallOpts, key)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerInterface *BokerInterfaceCallerSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerInterface.Contract.GlobalConfigInt(&_BokerInterface.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerInterface *BokerInterfaceCaller) GlobalConfigString(opts *bind.CallOpts, key string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "globalConfigString", key)
	return *ret0, err
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerInterface *BokerInterfaceSession) GlobalConfigString(key string) (string, error) {
	return _BokerInterface.Contract.GlobalConfigString(&_BokerInterface.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerInterface *BokerInterfaceCallerSession) GlobalConfigString(key string) (string, error) {
	return _BokerInterface.Contract.GlobalConfigString(&_BokerInterface.CallOpts, key)
}

// IsBokerInterface is a free data retrieval call binding the contract method 0xd408efb2.
//
// Solidity: function isBokerInterface() constant returns(bool)
func (_BokerInterface *BokerInterfaceCaller) IsBokerInterface(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "isBokerInterface")
	return *ret0, err
}

// IsBokerInterface is a free data retrieval call binding the contract method 0xd408efb2.
//
// Solidity: function isBokerInterface() constant returns(bool)
func (_BokerInterface *BokerInterfaceSession) IsBokerInterface() (bool, error) {
	return _BokerInterface.Contract.IsBokerInterface(&_BokerInterface.CallOpts)
}

// IsBokerInterface is a free data retrieval call binding the contract method 0xd408efb2.
//
// Solidity: function isBokerInterface() constant returns(bool)
func (_BokerInterface *BokerInterfaceCallerSession) IsBokerInterface() (bool, error) {
	return _BokerInterface.Contract.IsBokerInterface(&_BokerInterface.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerInterface *BokerInterfaceCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerInterface *BokerInterfaceSession) Owner() (common.Address, error) {
	return _BokerInterface.Contract.Owner(&_BokerInterface.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerInterface *BokerInterfaceCallerSession) Owner() (common.Address, error) {
	return _BokerInterface.Contract.Owner(&_BokerInterface.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerInterface *BokerInterfaceCaller) Version(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerInterface *BokerInterfaceSession) Version() (string, error) {
	return _BokerInterface.Contract.Version(&_BokerInterface.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerInterface *BokerInterfaceCallerSession) Version() (string, error) {
	return _BokerInterface.Contract.Version(&_BokerInterface.CallOpts)
}

// ApproveAndCall is a paid mutator transaction binding the contract method 0xcae9ca51.
//
// Solidity: function approveAndCall(spender address, value uint256, extraData bytes) returns(success bool)
func (_BokerInterface *BokerInterfaceTransactor) ApproveAndCall(opts *bind.TransactOpts, spender common.Address, value *big.Int, extraData []byte) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "approveAndCall", spender, value, extraData)
}

// ApproveAndCall is a paid mutator transaction binding the contract method 0xcae9ca51.
//
// Solidity: function approveAndCall(spender address, value uint256, extraData bytes) returns(success bool)
func (_BokerInterface *BokerInterfaceSession) ApproveAndCall(spender common.Address, value *big.Int, extraData []byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.ApproveAndCall(&_BokerInterface.TransactOpts, spender, value, extraData)
}

// ApproveAndCall is a paid mutator transaction binding the contract method 0xcae9ca51.
//
// Solidity: function approveAndCall(spender address, value uint256, extraData bytes) returns(success bool)
func (_BokerInterface *BokerInterfaceTransactorSession) ApproveAndCall(spender common.Address, value *big.Int, extraData []byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.ApproveAndCall(&_BokerInterface.TransactOpts, spender, value, extraData)
}

// CancelAllVotes is a paid mutator transaction binding the contract method 0xf49f9df8.
//
// Solidity: function cancelAllVotes() returns()
func (_BokerInterface *BokerInterfaceTransactor) CancelAllVotes(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "cancelAllVotes")
}

// CancelAllVotes is a paid mutator transaction binding the contract method 0xf49f9df8.
//
// Solidity: function cancelAllVotes() returns()
func (_BokerInterface *BokerInterfaceSession) CancelAllVotes() (*types.Transaction, error) {
	return _BokerInterface.Contract.CancelAllVotes(&_BokerInterface.TransactOpts)
}

// CancelAllVotes is a paid mutator transaction binding the contract method 0xf49f9df8.
//
// Solidity: function cancelAllVotes() returns()
func (_BokerInterface *BokerInterfaceTransactorSession) CancelAllVotes() (*types.Transaction, error) {
	return _BokerInterface.Contract.CancelAllVotes(&_BokerInterface.TransactOpts)
}

// ComputingNodeDisconnect is a paid mutator transaction binding the contract method 0x2d5f6f62.
//
// Solidity: function computingNodeDisconnect(node address) returns(bool)
func (_BokerInterface *BokerInterfaceTransactor) ComputingNodeDisconnect(opts *bind.TransactOpts, node common.Address) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "computingNodeDisconnect", node)
}

// ComputingNodeDisconnect is a paid mutator transaction binding the contract method 0x2d5f6f62.
//
// Solidity: function computingNodeDisconnect(node address) returns(bool)
func (_BokerInterface *BokerInterfaceSession) ComputingNodeDisconnect(node common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.ComputingNodeDisconnect(&_BokerInterface.TransactOpts, node)
}

// ComputingNodeDisconnect is a paid mutator transaction binding the contract method 0x2d5f6f62.
//
// Solidity: function computingNodeDisconnect(node address) returns(bool)
func (_BokerInterface *BokerInterfaceTransactorSession) ComputingNodeDisconnect(node common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.ComputingNodeDisconnect(&_BokerInterface.TransactOpts, node)
}

// ComputingNodeEnroll is a paid mutator transaction binding the contract method 0x5b2be05d.
//
// Solidity: function computingNodeEnroll(hashRate uint64) returns(bool, address)
func (_BokerInterface *BokerInterfaceTransactor) ComputingNodeEnroll(opts *bind.TransactOpts, hashRate uint64) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "computingNodeEnroll", hashRate)
}

// ComputingNodeEnroll is a paid mutator transaction binding the contract method 0x5b2be05d.
//
// Solidity: function computingNodeEnroll(hashRate uint64) returns(bool, address)
func (_BokerInterface *BokerInterfaceSession) ComputingNodeEnroll(hashRate uint64) (*types.Transaction, error) {
	return _BokerInterface.Contract.ComputingNodeEnroll(&_BokerInterface.TransactOpts, hashRate)
}

// ComputingNodeEnroll is a paid mutator transaction binding the contract method 0x5b2be05d.
//
// Solidity: function computingNodeEnroll(hashRate uint64) returns(bool, address)
func (_BokerInterface *BokerInterfaceTransactorSession) ComputingNodeEnroll(hashRate uint64) (*types.Transaction, error) {
	return _BokerInterface.Contract.ComputingNodeEnroll(&_BokerInterface.TransactOpts, hashRate)
}

// ComputingTaskComplete is a paid mutator transaction binding the contract method 0x9eaabf76.
//
// Solidity: function computingTaskComplete(node address, orderID bytes32, realGas uint256, resultHash string) returns(bool)
func (_BokerInterface *BokerInterfaceTransactor) ComputingTaskComplete(opts *bind.TransactOpts, node common.Address, orderID [32]byte, realGas *big.Int, resultHash string) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "computingTaskComplete", node, orderID, realGas, resultHash)
}

// ComputingTaskComplete is a paid mutator transaction binding the contract method 0x9eaabf76.
//
// Solidity: function computingTaskComplete(node address, orderID bytes32, realGas uint256, resultHash string) returns(bool)
func (_BokerInterface *BokerInterfaceSession) ComputingTaskComplete(node common.Address, orderID [32]byte, realGas *big.Int, resultHash string) (*types.Transaction, error) {
	return _BokerInterface.Contract.ComputingTaskComplete(&_BokerInterface.TransactOpts, node, orderID, realGas, resultHash)
}

// ComputingTaskComplete is a paid mutator transaction binding the contract method 0x9eaabf76.
//
// Solidity: function computingTaskComplete(node address, orderID bytes32, realGas uint256, resultHash string) returns(bool)
func (_BokerInterface *BokerInterfaceTransactorSession) ComputingTaskComplete(node common.Address, orderID [32]byte, realGas *big.Int, resultHash string) (*types.Transaction, error) {
	return _BokerInterface.Contract.ComputingTaskComplete(&_BokerInterface.TransactOpts, node, orderID, realGas, resultHash)
}

// GetAllNodeSet is a paid mutator transaction binding the contract method 0x4e580dd0.
//
// Solidity: function getAllNodeSet() returns(bool)
func (_BokerInterface *BokerInterfaceTransactor) GetAllNodeSet(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "getAllNodeSet")
}

// GetAllNodeSet is a paid mutator transaction binding the contract method 0x4e580dd0.
//
// Solidity: function getAllNodeSet() returns(bool)
func (_BokerInterface *BokerInterfaceSession) GetAllNodeSet() (*types.Transaction, error) {
	return _BokerInterface.Contract.GetAllNodeSet(&_BokerInterface.TransactOpts)
}

// GetAllNodeSet is a paid mutator transaction binding the contract method 0x4e580dd0.
//
// Solidity: function getAllNodeSet() returns(bool)
func (_BokerInterface *BokerInterfaceTransactorSession) GetAllNodeSet() (*types.Transaction, error) {
	return _BokerInterface.Contract.GetAllNodeSet(&_BokerInterface.TransactOpts)
}

// GetAllTaskOrder is a paid mutator transaction binding the contract method 0x96854ba4.
//
// Solidity: function getAllTaskOrder() returns(bool)
func (_BokerInterface *BokerInterfaceTransactor) GetAllTaskOrder(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "getAllTaskOrder")
}

// GetAllTaskOrder is a paid mutator transaction binding the contract method 0x96854ba4.
//
// Solidity: function getAllTaskOrder() returns(bool)
func (_BokerInterface *BokerInterfaceSession) GetAllTaskOrder() (*types.Transaction, error) {
	return _BokerInterface.Contract.GetAllTaskOrder(&_BokerInterface.TransactOpts)
}

// GetAllTaskOrder is a paid mutator transaction binding the contract method 0x96854ba4.
//
// Solidity: function getAllTaskOrder() returns(bool)
func (_BokerInterface *BokerInterfaceTransactorSession) GetAllTaskOrder() (*types.Transaction, error) {
	return _BokerInterface.Contract.GetAllTaskOrder(&_BokerInterface.TransactOpts)
}

// GetLockToken is a paid mutator transaction binding the contract method 0x2fbc3a7f.
//
// Solidity: function getLockToken(target address, orderId bytes32) returns(exitst bool, orderID bytes32, value uint256, taskIp string, index uint256)
func (_BokerInterface *BokerInterfaceTransactor) GetLockToken(opts *bind.TransactOpts, target common.Address, orderId [32]byte) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "getLockToken", target, orderId)
}

// GetLockToken is a paid mutator transaction binding the contract method 0x2fbc3a7f.
//
// Solidity: function getLockToken(target address, orderId bytes32) returns(exitst bool, orderID bytes32, value uint256, taskIp string, index uint256)
func (_BokerInterface *BokerInterfaceSession) GetLockToken(target common.Address, orderId [32]byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.GetLockToken(&_BokerInterface.TransactOpts, target, orderId)
}

// GetLockToken is a paid mutator transaction binding the contract method 0x2fbc3a7f.
//
// Solidity: function getLockToken(target address, orderId bytes32) returns(exitst bool, orderID bytes32, value uint256, taskIp string, index uint256)
func (_BokerInterface *BokerInterfaceTransactorSession) GetLockToken(target common.Address, orderId [32]byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.GetLockToken(&_BokerInterface.TransactOpts, target, orderId)
}

// GetOrderBookCount is a paid mutator transaction binding the contract method 0xe35ab3e8.
//
// Solidity: function getOrderBookCount() returns(uint256)
func (_BokerInterface *BokerInterfaceTransactor) GetOrderBookCount(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "getOrderBookCount")
}

// GetOrderBookCount is a paid mutator transaction binding the contract method 0xe35ab3e8.
//
// Solidity: function getOrderBookCount() returns(uint256)
func (_BokerInterface *BokerInterfaceSession) GetOrderBookCount() (*types.Transaction, error) {
	return _BokerInterface.Contract.GetOrderBookCount(&_BokerInterface.TransactOpts)
}

// GetOrderBookCount is a paid mutator transaction binding the contract method 0xe35ab3e8.
//
// Solidity: function getOrderBookCount() returns(uint256)
func (_BokerInterface *BokerInterfaceTransactorSession) GetOrderBookCount() (*types.Transaction, error) {
	return _BokerInterface.Contract.GetOrderBookCount(&_BokerInterface.TransactOpts)
}

// GetTaskOrder is a paid mutator transaction binding the contract method 0x6f363fa9.
//
// Solidity: function getTaskOrder(orderID bytes32) returns(exists bool, client address, index uint64, createTime uint256, taskGas uint256, taskIp string, codeHash string)
func (_BokerInterface *BokerInterfaceTransactor) GetTaskOrder(opts *bind.TransactOpts, orderID [32]byte) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "getTaskOrder", orderID)
}

// GetTaskOrder is a paid mutator transaction binding the contract method 0x6f363fa9.
//
// Solidity: function getTaskOrder(orderID bytes32) returns(exists bool, client address, index uint64, createTime uint256, taskGas uint256, taskIp string, codeHash string)
func (_BokerInterface *BokerInterfaceSession) GetTaskOrder(orderID [32]byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.GetTaskOrder(&_BokerInterface.TransactOpts, orderID)
}

// GetTaskOrder is a paid mutator transaction binding the contract method 0x6f363fa9.
//
// Solidity: function getTaskOrder(orderID bytes32) returns(exists bool, client address, index uint64, createTime uint256, taskGas uint256, taskIp string, codeHash string)
func (_BokerInterface *BokerInterfaceTransactorSession) GetTaskOrder(orderID [32]byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.GetTaskOrder(&_BokerInterface.TransactOpts, orderID)
}

// HouseHoldAllTaskOrder is a paid mutator transaction binding the contract method 0x0414fc4a.
//
// Solidity: function houseHoldAllTaskOrder() returns(bool)
func (_BokerInterface *BokerInterfaceTransactor) HouseHoldAllTaskOrder(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "houseHoldAllTaskOrder")
}

// HouseHoldAllTaskOrder is a paid mutator transaction binding the contract method 0x0414fc4a.
//
// Solidity: function houseHoldAllTaskOrder() returns(bool)
func (_BokerInterface *BokerInterfaceSession) HouseHoldAllTaskOrder() (*types.Transaction, error) {
	return _BokerInterface.Contract.HouseHoldAllTaskOrder(&_BokerInterface.TransactOpts)
}

// HouseHoldAllTaskOrder is a paid mutator transaction binding the contract method 0x0414fc4a.
//
// Solidity: function houseHoldAllTaskOrder() returns(bool)
func (_BokerInterface *BokerInterfaceTransactorSession) HouseHoldAllTaskOrder() (*types.Transaction, error) {
	return _BokerInterface.Contract.HouseHoldAllTaskOrder(&_BokerInterface.TransactOpts)
}

// IsActiveOrder is a paid mutator transaction binding the contract method 0x7e0c3458.
//
// Solidity: function isActiveOrder(orderID bytes32) returns(bool)
func (_BokerInterface *BokerInterfaceTransactor) IsActiveOrder(opts *bind.TransactOpts, orderID [32]byte) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "isActiveOrder", orderID)
}

// IsActiveOrder is a paid mutator transaction binding the contract method 0x7e0c3458.
//
// Solidity: function isActiveOrder(orderID bytes32) returns(bool)
func (_BokerInterface *BokerInterfaceSession) IsActiveOrder(orderID [32]byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.IsActiveOrder(&_BokerInterface.TransactOpts, orderID)
}

// IsActiveOrder is a paid mutator transaction binding the contract method 0x7e0c3458.
//
// Solidity: function isActiveOrder(orderID bytes32) returns(bool)
func (_BokerInterface *BokerInterfaceTransactorSession) IsActiveOrder(orderID [32]byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.IsActiveOrder(&_BokerInterface.TransactOpts, orderID)
}

// LockToken is a paid mutator transaction binding the contract method 0x15f1ec90.
//
// Solidity: function lockToken(target address, orderId bytes32, lockedAmount uint256, taskIp string) returns(bool)
func (_BokerInterface *BokerInterfaceTransactor) LockToken(opts *bind.TransactOpts, target common.Address, orderId [32]byte, lockedAmount *big.Int, taskIp string) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "lockToken", target, orderId, lockedAmount, taskIp)
}

// LockToken is a paid mutator transaction binding the contract method 0x15f1ec90.
//
// Solidity: function lockToken(target address, orderId bytes32, lockedAmount uint256, taskIp string) returns(bool)
func (_BokerInterface *BokerInterfaceSession) LockToken(target common.Address, orderId [32]byte, lockedAmount *big.Int, taskIp string) (*types.Transaction, error) {
	return _BokerInterface.Contract.LockToken(&_BokerInterface.TransactOpts, target, orderId, lockedAmount, taskIp)
}

// LockToken is a paid mutator transaction binding the contract method 0x15f1ec90.
//
// Solidity: function lockToken(target address, orderId bytes32, lockedAmount uint256, taskIp string) returns(bool)
func (_BokerInterface *BokerInterfaceTransactorSession) LockToken(target common.Address, orderId [32]byte, lockedAmount *big.Int, taskIp string) (*types.Transaction, error) {
	return _BokerInterface.Contract.LockToken(&_BokerInterface.TransactOpts, target, orderId, lockedAmount, taskIp)
}

// MintToken is a paid mutator transaction binding the contract method 0x79c65068.
//
// Solidity: function mintToken(target address, mintedAmount uint256) returns()
func (_BokerInterface *BokerInterfaceTransactor) MintToken(opts *bind.TransactOpts, target common.Address, mintedAmount *big.Int) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "mintToken", target, mintedAmount)
}

// MintToken is a paid mutator transaction binding the contract method 0x79c65068.
//
// Solidity: function mintToken(target address, mintedAmount uint256) returns()
func (_BokerInterface *BokerInterfaceSession) MintToken(target common.Address, mintedAmount *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.MintToken(&_BokerInterface.TransactOpts, target, mintedAmount)
}

// MintToken is a paid mutator transaction binding the contract method 0x79c65068.
//
// Solidity: function mintToken(target address, mintedAmount uint256) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) MintToken(target common.Address, mintedAmount *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.MintToken(&_BokerInterface.TransactOpts, target, mintedAmount)
}

// RegisterCandidate is a paid mutator transaction binding the contract method 0xf71cf2e7.
//
// Solidity: function registerCandidate(description string, team string, name string, tickets uint256) returns()
func (_BokerInterface *BokerInterfaceTransactor) RegisterCandidate(opts *bind.TransactOpts, description string, team string, name string, tickets *big.Int) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "registerCandidate", description, team, name, tickets)
}

// RegisterCandidate is a paid mutator transaction binding the contract method 0xf71cf2e7.
//
// Solidity: function registerCandidate(description string, team string, name string, tickets uint256) returns()
func (_BokerInterface *BokerInterfaceSession) RegisterCandidate(description string, team string, name string, tickets *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.RegisterCandidate(&_BokerInterface.TransactOpts, description, team, name, tickets)
}

// RegisterCandidate is a paid mutator transaction binding the contract method 0xf71cf2e7.
//
// Solidity: function registerCandidate(description string, team string, name string, tickets uint256) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) RegisterCandidate(description string, team string, name string, tickets *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.RegisterCandidate(&_BokerInterface.TransactOpts, description, team, name, tickets)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerInterface *BokerInterfaceTransactor) SetManager(opts *bind.TransactOpts, addrManager common.Address) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "setManager", addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerInterface *BokerInterfaceSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.SetManager(&_BokerInterface.TransactOpts, addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.SetManager(&_BokerInterface.TransactOpts, addrManager)
}

// TaskOrderCancel is a paid mutator transaction binding the contract method 0x982a4afe.
//
// Solidity: function taskOrderCancel(orderID bytes32) returns(bool)
func (_BokerInterface *BokerInterfaceTransactor) TaskOrderCancel(opts *bind.TransactOpts, orderID [32]byte) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "taskOrderCancel", orderID)
}

// TaskOrderCancel is a paid mutator transaction binding the contract method 0x982a4afe.
//
// Solidity: function taskOrderCancel(orderID bytes32) returns(bool)
func (_BokerInterface *BokerInterfaceSession) TaskOrderCancel(orderID [32]byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.TaskOrderCancel(&_BokerInterface.TransactOpts, orderID)
}

// TaskOrderCancel is a paid mutator transaction binding the contract method 0x982a4afe.
//
// Solidity: function taskOrderCancel(orderID bytes32) returns(bool)
func (_BokerInterface *BokerInterfaceTransactorSession) TaskOrderCancel(orderID [32]byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.TaskOrderCancel(&_BokerInterface.TransactOpts, orderID)
}

// TaskOrderRequest is a paid mutator transaction binding the contract method 0x0a2d0cd6.
//
// Solidity: function taskOrderRequest(index uint64, taskGas uint256, codeHash string, taskIp string) returns(success bool, orderId bytes32, reason string)
func (_BokerInterface *BokerInterfaceTransactor) TaskOrderRequest(opts *bind.TransactOpts, index uint64, taskGas *big.Int, codeHash string, taskIp string) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "taskOrderRequest", index, taskGas, codeHash, taskIp)
}

// TaskOrderRequest is a paid mutator transaction binding the contract method 0x0a2d0cd6.
//
// Solidity: function taskOrderRequest(index uint64, taskGas uint256, codeHash string, taskIp string) returns(success bool, orderId bytes32, reason string)
func (_BokerInterface *BokerInterfaceSession) TaskOrderRequest(index uint64, taskGas *big.Int, codeHash string, taskIp string) (*types.Transaction, error) {
	return _BokerInterface.Contract.TaskOrderRequest(&_BokerInterface.TransactOpts, index, taskGas, codeHash, taskIp)
}

// TaskOrderRequest is a paid mutator transaction binding the contract method 0x0a2d0cd6.
//
// Solidity: function taskOrderRequest(index uint64, taskGas uint256, codeHash string, taskIp string) returns(success bool, orderId bytes32, reason string)
func (_BokerInterface *BokerInterfaceTransactorSession) TaskOrderRequest(index uint64, taskGas *big.Int, codeHash string, taskIp string) (*types.Transaction, error) {
	return _BokerInterface.Contract.TaskOrderRequest(&_BokerInterface.TransactOpts, index, taskGas, codeHash, taskIp)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(to address, value uint256) returns()
func (_BokerInterface *BokerInterfaceTransactor) Transfer(opts *bind.TransactOpts, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "transfer", to, value)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(to address, value uint256) returns()
func (_BokerInterface *BokerInterfaceSession) Transfer(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.Transfer(&_BokerInterface.TransactOpts, to, value)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(to address, value uint256) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) Transfer(to common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.Transfer(&_BokerInterface.TransactOpts, to, value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(from address, to address, value uint256) returns(bool)
func (_BokerInterface *BokerInterfaceTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "transferFrom", from, to, value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(from address, to address, value uint256) returns(bool)
func (_BokerInterface *BokerInterfaceSession) TransferFrom(from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.TransferFrom(&_BokerInterface.TransactOpts, from, to, value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(from address, to address, value uint256) returns(bool)
func (_BokerInterface *BokerInterfaceTransactorSession) TransferFrom(from common.Address, to common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.TransferFrom(&_BokerInterface.TransactOpts, from, to, value)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerInterface *BokerInterfaceTransactor) TransferOwnership(opts *bind.TransactOpts, _newOwner common.Address) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "transferOwnership", _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerInterface *BokerInterfaceSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.TransferOwnership(&_BokerInterface.TransactOpts, _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.TransferOwnership(&_BokerInterface.TransactOpts, _newOwner)
}

// UnLockToken is a paid mutator transaction binding the contract method 0x94436fb0.
//
// Solidity: function unLockToken(target address, orderId bytes32) returns(bool)
func (_BokerInterface *BokerInterfaceTransactor) UnLockToken(opts *bind.TransactOpts, target common.Address, orderId [32]byte) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "unLockToken", target, orderId)
}

// UnLockToken is a paid mutator transaction binding the contract method 0x94436fb0.
//
// Solidity: function unLockToken(target address, orderId bytes32) returns(bool)
func (_BokerInterface *BokerInterfaceSession) UnLockToken(target common.Address, orderId [32]byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.UnLockToken(&_BokerInterface.TransactOpts, target, orderId)
}

// UnLockToken is a paid mutator transaction binding the contract method 0x94436fb0.
//
// Solidity: function unLockToken(target address, orderId bytes32) returns(bool)
func (_BokerInterface *BokerInterfaceTransactorSession) UnLockToken(target common.Address, orderId [32]byte) (*types.Transaction, error) {
	return _BokerInterface.Contract.UnLockToken(&_BokerInterface.TransactOpts, target, orderId)
}

// VoteCandidate is a paid mutator transaction binding the contract method 0x26bb886d.
//
// Solidity: function voteCandidate(addrCandidate address) returns()
func (_BokerInterface *BokerInterfaceTransactor) VoteCandidate(opts *bind.TransactOpts, addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "voteCandidate", addrCandidate)
}

// VoteCandidate is a paid mutator transaction binding the contract method 0x26bb886d.
//
// Solidity: function voteCandidate(addrCandidate address) returns()
func (_BokerInterface *BokerInterfaceSession) VoteCandidate(addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.VoteCandidate(&_BokerInterface.TransactOpts, addrCandidate)
}

// VoteCandidate is a paid mutator transaction binding the contract method 0x26bb886d.
//
// Solidity: function voteCandidate(addrCandidate address) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) VoteCandidate(addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.VoteCandidate(&_BokerInterface.TransactOpts, addrCandidate)
}
