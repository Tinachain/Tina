// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package boker_contract

import (
	"math/big"
	"strings"

	"github.com/Tinachain/Tina/chain/accounts/abi"
	"github.com/Tinachain/Tina/chain/accounts/abi/bind"
	"github.com/Tinachain/Tina/chain/common"
	"github.com/Tinachain/Tina/chain/core/types"
)

// BokerNodeDataABI is the input ABI used to generate the binding from.
const BokerNodeDataABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getCandidates\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"tickets\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"increaseVoterVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"tickTimeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"existCandidate\",\"outputs\":[{\"name\":\"exist\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearBlacks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cName\",\"type\":\"string\"}],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidateArray\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"increaseCandidateTicket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"increaseVoterDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address\"}],\"name\":\"deleteBlacks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bokerManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"candidates\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"tickets\",\"type\":\"uint256\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address\"}],\"name\":\"insertBlacks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"deposit\",\"type\":\"uint256\"},{\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"clearVoterVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"getCandidate\",\"outputs\":[{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"tickets\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"blackMap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterArray\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setVoterDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVoters\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"tickets\",\"type\":\"uint256\"}],\"name\":\"addCandidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBlacks\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigInt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"}],\"name\":\"getVoteInfo\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"tickets\",\"type\":\"uint256[]\"},{\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"name\":\"deposit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"decreaseCandidateTicket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// BokerNodeDataBin is the compiled bytecode used for deploying new contracts.
const BokerNodeDataBin = `60806040526040805190810160405280600581526020017f312e302e31000000000000000000000000000000000000000000000000000000815250600190805190602001906200005192919062000319565b50426002553480156200006357600080fd5b506040516020806200385a8339810180604052810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000e281620001b8640100000000026401000000009004565b506005600090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506007600090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620003c8565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200022257600080fd5b505af115801562000237573d6000803e3d6000fd5b505050506040513d60208110156200024e57600080fd5b81019080805190602001909291905050501515620002d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200035c57805160ff19168380011785556200038d565b828001600101855582156200038d579182015b828111156200038c5782518255916020019190600101906200036f565b5b5090506200039c9190620003a0565b5090565b620003c591905b80821115620003c1576000816000905550600101620003a7565b5090565b90565b61348280620003d86000396000f30060806040526004361061018b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306a49fce146101905780630c9f510814610244578063156bf9ba146102b157806317132a0f146102c85780631c32c9ef146103235780631eb726af1461033a57806335a893a1146103e3578063378298bc146104505780633e26a5a914610532578063424b0baf1461057f57806354fd4d50146105cc57806361dcd7ab1461065c5780636207dab01461068757806366ebc1c6146106ca5780638ab66a90146107215780638da5cb5b146108f6578063937c70411461094d578063a3ec138d14610990578063a7a6586a14610a28578063b7adcf1d14610a8b578063bb01ecd814610c26578063c279919f14610c81578063c90f008a14610cee578063cdd7225314610d3b578063d0ebdbe714610da7578063d349273b14610dea578063d38ff7a114610e7f578063d43c802114610eeb578063dc1e30da14610f68578063e13e6ffe14611056578063f2fde38b146110a3575b600080fd5b34801561019c57600080fd5b506101a56110e6565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156101ec5780820151818401526020810190506101d1565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561022e578082015181840152602081019050610213565b5050505090500194505050505060405180910390f35b34801561025057600080fd5b506102af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061126d565b005b3480156102bd57600080fd5b506102c66112f6565b005b3480156102d457600080fd5b50610309600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112f8565b604051808215151515815260200191505060405180910390f35b34801561032f57600080fd5b50610338611359565b005b34801561034657600080fd5b506103a1600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061146e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ef57600080fd5b5061040e6004803603810190808035906020019092919050505061171c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561045c57600080fd5b506104b7600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061175a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f75780820151818401526020810190506104dc565b50505050905090810190601f1680156105245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561053e57600080fd5b5061057d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118ea565b005b34801561058b57600080fd5b506105ca600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611969565b005b3480156105d857600080fd5b506105e1611b46565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610621578082015181840152602081019050610606565b50505050905090810190601f16801561064e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561066857600080fd5b50610671611be4565b6040518082815260200191505060405180910390f35b34801561069357600080fd5b506106c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bea565b005b3480156106d657600080fd5b506106df611d9c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561072d57600080fd5b50610762600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc2565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b838110156107e85780820151818401526020810190506107cd565b50505050905090810190601f1680156108155780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561084e578082015181840152602081019050610833565b50505050905090810190601f16801561087b5780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156108b4578082015181840152602081019050610899565b50505050905090810190601f1680156108e15780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561090257600080fd5b5061090b611fe6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561095957600080fd5b5061098e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061200b565b005b34801561099c57600080fd5b506109d1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061217b565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b348015610a3457600080fd5b50610a89600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121cb565b005b348015610a9757600080fd5b50610acc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612275565b60405180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b83811015610b1a578082015181840152602081019050610aff565b50505050905090810190601f168015610b475780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610b80578082015181840152602081019050610b65565b50505050905090810190601f168015610bad5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015610be6578082015181840152602081019050610bcb565b50505050905090810190601f168015610c135780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b348015610c3257600080fd5b50610c67600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124bd565b604051808215151515815260200191505060405180910390f35b348015610c8d57600080fd5b50610cac600480360381019080803590602001909291905050506124dd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610cfa57600080fd5b50610d39600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061251b565b005b348015610d4757600080fd5b50610d5061257f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d93578082015181840152602081019050610d78565b505050509050019250505060405180910390f35b348015610db357600080fd5b50610de8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612771565b005b348015610df657600080fd5b50610e7d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001919091929391929390803590602001908201803590602001919091929391929390803590602001908201803590602001919091929391929390803590602001909291905050506127d8565b005b348015610e8b57600080fd5b50610e94612935565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610ed7578082015181840152602081019050610ebc565b505050509050019250505060405180910390f35b348015610ef757600080fd5b50610f52600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612b34565b6040518082815260200191505060405180910390f35b348015610f7457600080fd5b50610fa9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612c6e565b604051808060200180602001858152602001848152602001838103835287818151815260200191508051906020019060200280838360005b83811015610ffc578082015181840152602081019050610fe1565b50505050905001838103825286818151815260200191508051906020019060200280838360005b8381101561103e578082015181840152602081019050611023565b50505050905001965050505050505060405180910390f35b34801561106257600080fd5b506110a1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612e65565b005b3480156110af57600080fd5b506110e4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612f60565b005b60608060008060006005805490509250600183036040519080825280602002602001820160405280156111285781602001602082028038833980820191505090505b5094506001830360405190808252806020026020018201604052801561115d5781602001602082028038833980820191505090505b509350600191505b828210156112665760058281548110151561117c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508085600184038151811015156111bb57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154846001840381518110151561124b57fe5b90602001906020020181815250508180600101925050611165565b5050509091565b600080600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010154600014156112c3576112ef565b6112cd8285612fc7565b90506112e683826001015461309990919063ffffffff16565b81600101819055505b5050505050565b565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600014151561134f5760019050611354565b600090505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113b657600080fd5b600090505b60098054905081101561145d57600860006009838154811015156113db57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905580806001019150506113bb565b6009600061146b9190613390565b50565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fca1f3c1846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561151b578082015181840152602081019050611500565b50505050905090810190601f1680156115485780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561156757600080fd5b505af115801561157b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060a08110156115a557600080fd5b810190808051906020019092919080516401000000008111156115c757600080fd5b828101905060208101848111156115dd57600080fd5b81518560018202830111640100000000821117156115fa57600080fd5b505092919060200180519060200190929190805164010000000081111561162057600080fd5b8281019050602081018481111561163657600080fd5b815185600182028301116401000000008211171561165357600080fd5b505092919060200180519060200190929190505050505092505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f616464722069732030210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80915050919050565b60058181548110151561172b57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634a189f35836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156118065780820151818401526020810190506117eb565b50505050905090810190601f1680156118335780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561185257600080fd5b505af1158015611866573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561189057600080fd5b8101908080516401000000008111156118a857600080fd5b828101905060208101848111156118be57600080fd5b81518560018202830111640100000000821117156118db57600080fd5b50509291905050509050919050565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020915081600101546000141561194057611963565b82905061195a81836002015461309990919063ffffffff16565b82600201819055505b50505050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001015460001415611b2257828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160020181905550600780549050816001018190555060078390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501600090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b611b3982826002015461309990919063ffffffff16565b8160020181905550505050565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611bdc5780601f10611bb157610100808354040283529160200191611bdc565b820191906000526020600020905b815481529060010190602001808311611bbf57829003601f168201915b505050505081565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c4757600080fd5b600090505b600980549050811015611d98578173ffffffffffffffffffffffffffffffffffffffff16600982815481101515611c7f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611d8b5760086000600983815481101515611cd957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055600981815481101515611d5d57fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080600101915050611c4c565b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ea05780601f10611e7557610100808354040283529160200191611ea0565b820191906000526020600020905b815481529060010190602001808311611e8357829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f3e5780601f10611f1357610100808354040283529160200191611f3e565b820191906000526020600020905b815481529060010190602001808311611f2157829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611fdc5780601f10611fb157610100808354040283529160200191611fdc565b820191906000526020600020905b815481529060010190602001808311611fbf57829003601f168201915b5050505050905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561206657600080fd5b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515612178576001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060098190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b600080600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010154600014156122215761226f565b8160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600101819055505b50505050565b6060806060600080600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010154600014156122d0576124b5565b806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156123685780601f1061233d57610100808354040283529160200191612368565b820191906000526020600020905b81548152906001019060200180831161234b57829003601f168201915b50505050509450806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124075780601f106123dc57610100808354040283529160200191612407565b820191906000526020600020905b8154815290600101906020018083116123ea57829003601f168201915b50505050509350806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124a65780601f1061247b576101008083540402835291602001916124a6565b820191906000526020600020905b81548152906001019060200180831161248957829003601f168201915b50505050509250806002015491505b509193509193565b60086020528060005260406000206000915054906101000a900460ff1681565b6007818154811015156124ec57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010154600014156125705761257a565b8181600201819055505b505050565b606060008060008060009350600192505b60078054905083101561263a576007838154811015156125ac57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154111561262d5783806001019450505b8280600101935050612590565b836040519080825280602002602001820160405280156126695781602001602082028038833980820191505090505b50945060009050600192505b60078054905083101561276a5760078381548110151561269157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154111561275d5781858281518110151561271857fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806001019150505b8280600101935050612675565b5050505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156127cc57600080fd5b6127d5816130b7565b50565b6000600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160010154111561282d5761292a565b888160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506005805490508160010181905550818160020181905550878782600301919061289a9291906133b1565b5085858260040191906128ae9291906133b1565b5083838260050191906128c29291906133b1565b5060058990806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b505050505050505050565b60606000806000806000809450600093505b6009805490508410156129f5576008600060098681548110151561296757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156129e85784806001019550505b8380600101945050612947565b84604051908082528060200260200182016040528015612a245781602001602082028038833980820191505090505b50955060009250600091505b600980549050821015612b2c57600982815481101515612a4c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612b1f57808684815181101515612ada57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082806001019350505b8180600101925050612a30565b505050505090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633230b078836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612be0578082015181840152602081019050612bc5565b50505050905090810190601f168015612c0d5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015612c2c57600080fd5b505af1158015612c40573d6000803e3d6000fd5b505050506040513d6020811015612c5657600080fd5b81019080805190602001909291905050509050919050565b606080600080600080600080600660008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209350836001015460001415612ccd57612e5a565b83600301549550836002015494508360050180549050925060018303604051908082528060200260200182016040528015612d175781602001602082028038833980820191505090505b50975060018303604051908082528060200260200182016040528015612d4c5781602001602082028038833980820191505090505b509650600191505b82821015612e59578360050182815481101515612d6d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050808860018403815181101515612dac57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508360040160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548760018403815181101515612e3e57fe5b90602001906020020181815250508180600101925050612d54565b5b505050509193509193565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209150816001015460001415612ebb57612f5a565b82905080826002015410151515612f3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f63616e6469646174652e7469636b657473203c20616d6f756e7421000000000081525060200191505060405180910390fd5b612f5181836002015461321490919063ffffffff16565b82600201819055505b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612fbb57600080fd5b612fc48161322d565b50565b6000808360040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816001018190555083600501805490508160000181905550836005018390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508091505092915050565b60008082840190508381101515156130ad57fe5b8091505092915050565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561312057600080fd5b505af1158015613134573d6000803e3d6000fd5b505050506040513d602081101561314a57600080fd5b810190808051906020019092919050505015156131cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115151561322257fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156132d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6e65774f776e657220616464726573732069732030210000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b50805460008255906000526020600020908101906133ae9190613431565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106133f257803560ff1916838001178555613420565b82800160010185558215613420579182015b8281111561341f578235825591602001919060010190613404565b5b50905061342d9190613431565b5090565b61345391905b8082111561344f576000816000905550600101613437565b5090565b905600a165627a7a72305820d109ac09a03d18c4e4c17bd104ee4822a6eb59eab762d86ad76c54bad4afb62b0029`

// DeployBokerNodeData deploys a new Ethereum contract, binding an instance of BokerNodeData to it.
func DeployBokerNodeData(auth *bind.TransactOpts, backend bind.ContractBackend, addrManager common.Address) (common.Address, *types.Transaction, *BokerNodeData, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerNodeDataABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BokerNodeDataBin), backend, addrManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BokerNodeData{BokerNodeDataCaller: BokerNodeDataCaller{contract: contract}, BokerNodeDataTransactor: BokerNodeDataTransactor{contract: contract}}, nil
}

// BokerNodeData is an auto generated Go binding around an Ethereum contract.
type BokerNodeData struct {
	BokerNodeDataCaller     // Read-only binding to the contract
	BokerNodeDataTransactor // Write-only binding to the contract
}

// BokerNodeDataCaller is an auto generated read-only Go binding around an Ethereum contract.
type BokerNodeDataCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerNodeDataTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BokerNodeDataTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerNodeDataSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BokerNodeDataSession struct {
	Contract     *BokerNodeData    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BokerNodeDataCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BokerNodeDataCallerSession struct {
	Contract *BokerNodeDataCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// BokerNodeDataTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BokerNodeDataTransactorSession struct {
	Contract     *BokerNodeDataTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// BokerNodeDataRaw is an auto generated low-level Go binding around an Ethereum contract.
type BokerNodeDataRaw struct {
	Contract *BokerNodeData // Generic contract binding to access the raw methods on
}

// BokerNodeDataCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BokerNodeDataCallerRaw struct {
	Contract *BokerNodeDataCaller // Generic read-only contract binding to access the raw methods on
}

// BokerNodeDataTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BokerNodeDataTransactorRaw struct {
	Contract *BokerNodeDataTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBokerNodeData creates a new instance of BokerNodeData, bound to a specific deployed contract.
func NewBokerNodeData(address common.Address, backend bind.ContractBackend) (*BokerNodeData, error) {
	contract, err := bindBokerNodeData(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BokerNodeData{BokerNodeDataCaller: BokerNodeDataCaller{contract: contract}, BokerNodeDataTransactor: BokerNodeDataTransactor{contract: contract}}, nil
}

// NewBokerNodeDataCaller creates a new read-only instance of BokerNodeData, bound to a specific deployed contract.
func NewBokerNodeDataCaller(address common.Address, caller bind.ContractCaller) (*BokerNodeDataCaller, error) {
	contract, err := bindBokerNodeData(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &BokerNodeDataCaller{contract: contract}, nil
}

// NewBokerNodeDataTransactor creates a new write-only instance of BokerNodeData, bound to a specific deployed contract.
func NewBokerNodeDataTransactor(address common.Address, transactor bind.ContractTransactor) (*BokerNodeDataTransactor, error) {
	contract, err := bindBokerNodeData(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &BokerNodeDataTransactor{contract: contract}, nil
}

// bindBokerNodeData binds a generic wrapper to an already deployed contract.
func bindBokerNodeData(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerNodeDataABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerNodeData *BokerNodeDataRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerNodeData.Contract.BokerNodeDataCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerNodeData *BokerNodeDataRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNodeData.Contract.BokerNodeDataTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerNodeData *BokerNodeDataRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerNodeData.Contract.BokerNodeDataTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerNodeData *BokerNodeDataCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerNodeData.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerNodeData *BokerNodeDataTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNodeData.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerNodeData *BokerNodeDataTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerNodeData.Contract.contract.Transact(opts, method, params...)
}

// BlackMap is a free data retrieval call binding the contract method 0xbb01ecd8.
//
// Solidity: function blackMap( address) constant returns(bool)
func (_BokerNodeData *BokerNodeDataCaller) BlackMap(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "blackMap", arg0)
	return *ret0, err
}

// BlackMap is a free data retrieval call binding the contract method 0xbb01ecd8.
//
// Solidity: function blackMap( address) constant returns(bool)
func (_BokerNodeData *BokerNodeDataSession) BlackMap(arg0 common.Address) (bool, error) {
	return _BokerNodeData.Contract.BlackMap(&_BokerNodeData.CallOpts, arg0)
}

// BlackMap is a free data retrieval call binding the contract method 0xbb01ecd8.
//
// Solidity: function blackMap( address) constant returns(bool)
func (_BokerNodeData *BokerNodeDataCallerSession) BlackMap(arg0 common.Address) (bool, error) {
	return _BokerNodeData.Contract.BlackMap(&_BokerNodeData.CallOpts, arg0)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) BokerManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "bokerManager")
	return *ret0, err
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) BokerManager() (common.Address, error) {
	return _BokerNodeData.Contract.BokerManager(&_BokerNodeData.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) BokerManager() (common.Address, error) {
	return _BokerNodeData.Contract.BokerManager(&_BokerNodeData.CallOpts)
}

// CandidateArray is a free data retrieval call binding the contract method 0x35a893a1.
//
// Solidity: function candidateArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) CandidateArray(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "candidateArray", arg0)
	return *ret0, err
}

// CandidateArray is a free data retrieval call binding the contract method 0x35a893a1.
//
// Solidity: function candidateArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) CandidateArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.CandidateArray(&_BokerNodeData.CallOpts, arg0)
}

// CandidateArray is a free data retrieval call binding the contract method 0x35a893a1.
//
// Solidity: function candidateArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) CandidateArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.CandidateArray(&_BokerNodeData.CallOpts, arg0)
}

// Candidates is a free data retrieval call binding the contract method 0x8ab66a90.
//
// Solidity: function candidates( address) constant returns(addr address, index uint256, tickets uint256, description string, team string, name string)
func (_BokerNodeData *BokerNodeDataCaller) Candidates(opts *bind.CallOpts, arg0 common.Address) (struct {
	Addr        common.Address
	Index       *big.Int
	Tickets     *big.Int
	Description string
	Team        string
	Name        string
}, error) {
	ret := new(struct {
		Addr        common.Address
		Index       *big.Int
		Tickets     *big.Int
		Description string
		Team        string
		Name        string
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "candidates", arg0)
	return *ret, err
}

// Candidates is a free data retrieval call binding the contract method 0x8ab66a90.
//
// Solidity: function candidates( address) constant returns(addr address, index uint256, tickets uint256, description string, team string, name string)
func (_BokerNodeData *BokerNodeDataSession) Candidates(arg0 common.Address) (struct {
	Addr        common.Address
	Index       *big.Int
	Tickets     *big.Int
	Description string
	Team        string
	Name        string
}, error) {
	return _BokerNodeData.Contract.Candidates(&_BokerNodeData.CallOpts, arg0)
}

// Candidates is a free data retrieval call binding the contract method 0x8ab66a90.
//
// Solidity: function candidates( address) constant returns(addr address, index uint256, tickets uint256, description string, team string, name string)
func (_BokerNodeData *BokerNodeDataCallerSession) Candidates(arg0 common.Address) (struct {
	Addr        common.Address
	Index       *big.Int
	Tickets     *big.Int
	Description string
	Team        string
	Name        string
}, error) {
	return _BokerNodeData.Contract.Candidates(&_BokerNodeData.CallOpts, arg0)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) ContractAddress(opts *bind.CallOpts, cName string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "contractAddress", cName)
	return *ret0, err
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerNodeData.Contract.ContractAddress(&_BokerNodeData.CallOpts, cName)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerNodeData.Contract.ContractAddress(&_BokerNodeData.CallOpts, cName)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCaller) CreateTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "createTime")
	return *ret0, err
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) CreateTime() (*big.Int, error) {
	return _BokerNodeData.Contract.CreateTime(&_BokerNodeData.CallOpts)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) CreateTime() (*big.Int, error) {
	return _BokerNodeData.Contract.CreateTime(&_BokerNodeData.CallOpts)
}

// ExistCandidate is a free data retrieval call binding the contract method 0x17132a0f.
//
// Solidity: function existCandidate(addrCandidate address) constant returns(exist bool)
func (_BokerNodeData *BokerNodeDataCaller) ExistCandidate(opts *bind.CallOpts, addrCandidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "existCandidate", addrCandidate)
	return *ret0, err
}

// ExistCandidate is a free data retrieval call binding the contract method 0x17132a0f.
//
// Solidity: function existCandidate(addrCandidate address) constant returns(exist bool)
func (_BokerNodeData *BokerNodeDataSession) ExistCandidate(addrCandidate common.Address) (bool, error) {
	return _BokerNodeData.Contract.ExistCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// ExistCandidate is a free data retrieval call binding the contract method 0x17132a0f.
//
// Solidity: function existCandidate(addrCandidate address) constant returns(exist bool)
func (_BokerNodeData *BokerNodeDataCallerSession) ExistCandidate(addrCandidate common.Address) (bool, error) {
	return _BokerNodeData.Contract.ExistCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// GetBlacks is a free data retrieval call binding the contract method 0xd38ff7a1.
//
// Solidity: function getBlacks() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataCaller) GetBlacks(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "getBlacks")
	return *ret0, err
}

// GetBlacks is a free data retrieval call binding the contract method 0xd38ff7a1.
//
// Solidity: function getBlacks() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataSession) GetBlacks() ([]common.Address, error) {
	return _BokerNodeData.Contract.GetBlacks(&_BokerNodeData.CallOpts)
}

// GetBlacks is a free data retrieval call binding the contract method 0xd38ff7a1.
//
// Solidity: function getBlacks() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataCallerSession) GetBlacks() ([]common.Address, error) {
	return _BokerNodeData.Contract.GetBlacks(&_BokerNodeData.CallOpts)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNodeData *BokerNodeDataCaller) GetCandidate(opts *bind.CallOpts, addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	ret := new(struct {
		Description string
		Team        string
		Name        string
		Tickets     *big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "getCandidate", addrCandidate)
	return *ret, err
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNodeData *BokerNodeDataSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNodeData *BokerNodeDataCaller) GetCandidates(opts *bind.CallOpts) (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	ret := new(struct {
		Addresses []common.Address
		Tickets   []*big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "getCandidates")
	return *ret, err
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNodeData *BokerNodeDataSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidates(&_BokerNodeData.CallOpts)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNodeData *BokerNodeDataCallerSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidates(&_BokerNodeData.CallOpts)
}

// GetVoteInfo is a free data retrieval call binding the contract method 0xdc1e30da.
//
// Solidity: function getVoteInfo(addrVoter address) constant returns(addresses address[], tickets uint256[], unlockTime uint256, deposit uint256)
func (_BokerNodeData *BokerNodeDataCaller) GetVoteInfo(opts *bind.CallOpts, addrVoter common.Address) (struct {
	Addresses  []common.Address
	Tickets    []*big.Int
	UnlockTime *big.Int
	Deposit    *big.Int
}, error) {
	ret := new(struct {
		Addresses  []common.Address
		Tickets    []*big.Int
		UnlockTime *big.Int
		Deposit    *big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "getVoteInfo", addrVoter)
	return *ret, err
}

// GetVoteInfo is a free data retrieval call binding the contract method 0xdc1e30da.
//
// Solidity: function getVoteInfo(addrVoter address) constant returns(addresses address[], tickets uint256[], unlockTime uint256, deposit uint256)
func (_BokerNodeData *BokerNodeDataSession) GetVoteInfo(addrVoter common.Address) (struct {
	Addresses  []common.Address
	Tickets    []*big.Int
	UnlockTime *big.Int
	Deposit    *big.Int
}, error) {
	return _BokerNodeData.Contract.GetVoteInfo(&_BokerNodeData.CallOpts, addrVoter)
}

// GetVoteInfo is a free data retrieval call binding the contract method 0xdc1e30da.
//
// Solidity: function getVoteInfo(addrVoter address) constant returns(addresses address[], tickets uint256[], unlockTime uint256, deposit uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) GetVoteInfo(addrVoter common.Address) (struct {
	Addresses  []common.Address
	Tickets    []*big.Int
	UnlockTime *big.Int
	Deposit    *big.Int
}, error) {
	return _BokerNodeData.Contract.GetVoteInfo(&_BokerNodeData.CallOpts, addrVoter)
}

// GetVoters is a free data retrieval call binding the contract method 0xcdd72253.
//
// Solidity: function getVoters() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataCaller) GetVoters(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "getVoters")
	return *ret0, err
}

// GetVoters is a free data retrieval call binding the contract method 0xcdd72253.
//
// Solidity: function getVoters() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataSession) GetVoters() ([]common.Address, error) {
	return _BokerNodeData.Contract.GetVoters(&_BokerNodeData.CallOpts)
}

// GetVoters is a free data retrieval call binding the contract method 0xcdd72253.
//
// Solidity: function getVoters() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataCallerSession) GetVoters() ([]common.Address, error) {
	return _BokerNodeData.Contract.GetVoters(&_BokerNodeData.CallOpts)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCaller) GlobalConfigInt(opts *bind.CallOpts, key string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "globalConfigInt", key)
	return *ret0, err
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerNodeData.Contract.GlobalConfigInt(&_BokerNodeData.CallOpts, key)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerNodeData.Contract.GlobalConfigInt(&_BokerNodeData.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNodeData *BokerNodeDataCaller) GlobalConfigString(opts *bind.CallOpts, key string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "globalConfigString", key)
	return *ret0, err
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNodeData *BokerNodeDataSession) GlobalConfigString(key string) (string, error) {
	return _BokerNodeData.Contract.GlobalConfigString(&_BokerNodeData.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNodeData *BokerNodeDataCallerSession) GlobalConfigString(key string) (string, error) {
	return _BokerNodeData.Contract.GlobalConfigString(&_BokerNodeData.CallOpts, key)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) Owner() (common.Address, error) {
	return _BokerNodeData.Contract.Owner(&_BokerNodeData.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) Owner() (common.Address, error) {
	return _BokerNodeData.Contract.Owner(&_BokerNodeData.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNodeData *BokerNodeDataCaller) Version(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNodeData *BokerNodeDataSession) Version() (string, error) {
	return _BokerNodeData.Contract.Version(&_BokerNodeData.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNodeData *BokerNodeDataCallerSession) Version() (string, error) {
	return _BokerNodeData.Contract.Version(&_BokerNodeData.CallOpts)
}

// VoterArray is a free data retrieval call binding the contract method 0xc279919f.
//
// Solidity: function voterArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) VoterArray(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "voterArray", arg0)
	return *ret0, err
}

// VoterArray is a free data retrieval call binding the contract method 0xc279919f.
//
// Solidity: function voterArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) VoterArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.VoterArray(&_BokerNodeData.CallOpts, arg0)
}

// VoterArray is a free data retrieval call binding the contract method 0xc279919f.
//
// Solidity: function voterArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) VoterArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.VoterArray(&_BokerNodeData.CallOpts, arg0)
}

// Voters is a free data retrieval call binding the contract method 0xa3ec138d.
//
// Solidity: function voters( address) constant returns(addr address, index uint256, deposit uint256, unlockTime uint256)
func (_BokerNodeData *BokerNodeDataCaller) Voters(opts *bind.CallOpts, arg0 common.Address) (struct {
	Addr       common.Address
	Index      *big.Int
	Deposit    *big.Int
	UnlockTime *big.Int
}, error) {
	ret := new(struct {
		Addr       common.Address
		Index      *big.Int
		Deposit    *big.Int
		UnlockTime *big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "voters", arg0)
	return *ret, err
}

// Voters is a free data retrieval call binding the contract method 0xa3ec138d.
//
// Solidity: function voters( address) constant returns(addr address, index uint256, deposit uint256, unlockTime uint256)
func (_BokerNodeData *BokerNodeDataSession) Voters(arg0 common.Address) (struct {
	Addr       common.Address
	Index      *big.Int
	Deposit    *big.Int
	UnlockTime *big.Int
}, error) {
	return _BokerNodeData.Contract.Voters(&_BokerNodeData.CallOpts, arg0)
}

// Voters is a free data retrieval call binding the contract method 0xa3ec138d.
//
// Solidity: function voters( address) constant returns(addr address, index uint256, deposit uint256, unlockTime uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) Voters(arg0 common.Address) (struct {
	Addr       common.Address
	Index      *big.Int
	Deposit    *big.Int
	UnlockTime *big.Int
}, error) {
	return _BokerNodeData.Contract.Voters(&_BokerNodeData.CallOpts, arg0)
}

// AddCandidate is a paid mutator transaction binding the contract method 0xd349273b.
//
// Solidity: function addCandidate(addrCandidate address, description string, team string, name string, tickets uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) AddCandidate(opts *bind.TransactOpts, addrCandidate common.Address, description string, team string, name string, tickets *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "addCandidate", addrCandidate, description, team, name, tickets)
}

// AddCandidate is a paid mutator transaction binding the contract method 0xd349273b.
//
// Solidity: function addCandidate(addrCandidate address, description string, team string, name string, tickets uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) AddCandidate(addrCandidate common.Address, description string, team string, name string, tickets *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.AddCandidate(&_BokerNodeData.TransactOpts, addrCandidate, description, team, name, tickets)
}

// AddCandidate is a paid mutator transaction binding the contract method 0xd349273b.
//
// Solidity: function addCandidate(addrCandidate address, description string, team string, name string, tickets uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) AddCandidate(addrCandidate common.Address, description string, team string, name string, tickets *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.AddCandidate(&_BokerNodeData.TransactOpts, addrCandidate, description, team, name, tickets)
}

// ClearBlacks is a paid mutator transaction binding the contract method 0x1c32c9ef.
//
// Solidity: function clearBlacks() returns()
func (_BokerNodeData *BokerNodeDataTransactor) ClearBlacks(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "clearBlacks")
}

// ClearBlacks is a paid mutator transaction binding the contract method 0x1c32c9ef.
//
// Solidity: function clearBlacks() returns()
func (_BokerNodeData *BokerNodeDataSession) ClearBlacks() (*types.Transaction, error) {
	return _BokerNodeData.Contract.ClearBlacks(&_BokerNodeData.TransactOpts)
}

// ClearBlacks is a paid mutator transaction binding the contract method 0x1c32c9ef.
//
// Solidity: function clearBlacks() returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) ClearBlacks() (*types.Transaction, error) {
	return _BokerNodeData.Contract.ClearBlacks(&_BokerNodeData.TransactOpts)
}

// ClearVoterVote is a paid mutator transaction binding the contract method 0xa7a6586a.
//
// Solidity: function clearVoterVote(addrVoter address, addrCandidate address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) ClearVoterVote(opts *bind.TransactOpts, addrVoter common.Address, addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "clearVoterVote", addrVoter, addrCandidate)
}

// ClearVoterVote is a paid mutator transaction binding the contract method 0xa7a6586a.
//
// Solidity: function clearVoterVote(addrVoter address, addrCandidate address) returns()
func (_BokerNodeData *BokerNodeDataSession) ClearVoterVote(addrVoter common.Address, addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.ClearVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate)
}

// ClearVoterVote is a paid mutator transaction binding the contract method 0xa7a6586a.
//
// Solidity: function clearVoterVote(addrVoter address, addrCandidate address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) ClearVoterVote(addrVoter common.Address, addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.ClearVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate)
}

// DecreaseCandidateTicket is a paid mutator transaction binding the contract method 0xe13e6ffe.
//
// Solidity: function decreaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) DecreaseCandidateTicket(opts *bind.TransactOpts, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "decreaseCandidateTicket", addrCandidate, tokens)
}

// DecreaseCandidateTicket is a paid mutator transaction binding the contract method 0xe13e6ffe.
//
// Solidity: function decreaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) DecreaseCandidateTicket(addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.DecreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, tokens)
}

// DecreaseCandidateTicket is a paid mutator transaction binding the contract method 0xe13e6ffe.
//
// Solidity: function decreaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) DecreaseCandidateTicket(addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.DecreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, tokens)
}

// DeleteBlacks is a paid mutator transaction binding the contract method 0x6207dab0.
//
// Solidity: function deleteBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) DeleteBlacks(opts *bind.TransactOpts, addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "deleteBlacks", addresses)
}

// DeleteBlacks is a paid mutator transaction binding the contract method 0x6207dab0.
//
// Solidity: function deleteBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataSession) DeleteBlacks(addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.DeleteBlacks(&_BokerNodeData.TransactOpts, addresses)
}

// DeleteBlacks is a paid mutator transaction binding the contract method 0x6207dab0.
//
// Solidity: function deleteBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) DeleteBlacks(addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.DeleteBlacks(&_BokerNodeData.TransactOpts, addresses)
}

// IncreaseCandidateTicket is a paid mutator transaction binding the contract method 0x3e26a5a9.
//
// Solidity: function increaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) IncreaseCandidateTicket(opts *bind.TransactOpts, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "increaseCandidateTicket", addrCandidate, tokens)
}

// IncreaseCandidateTicket is a paid mutator transaction binding the contract method 0x3e26a5a9.
//
// Solidity: function increaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) IncreaseCandidateTicket(addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, tokens)
}

// IncreaseCandidateTicket is a paid mutator transaction binding the contract method 0x3e26a5a9.
//
// Solidity: function increaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) IncreaseCandidateTicket(addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, tokens)
}

// IncreaseVoterDeposit is a paid mutator transaction binding the contract method 0x424b0baf.
//
// Solidity: function increaseVoterDeposit(addrVoter address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) IncreaseVoterDeposit(opts *bind.TransactOpts, addrVoter common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "increaseVoterDeposit", addrVoter, tokens)
}

// IncreaseVoterDeposit is a paid mutator transaction binding the contract method 0x424b0baf.
//
// Solidity: function increaseVoterDeposit(addrVoter address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) IncreaseVoterDeposit(addrVoter common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, tokens)
}

// IncreaseVoterDeposit is a paid mutator transaction binding the contract method 0x424b0baf.
//
// Solidity: function increaseVoterDeposit(addrVoter address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) IncreaseVoterDeposit(addrVoter common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, tokens)
}

// IncreaseVoterVote is a paid mutator transaction binding the contract method 0x0c9f5108.
//
// Solidity: function increaseVoterVote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) IncreaseVoterVote(opts *bind.TransactOpts, addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "increaseVoterVote", addrVoter, addrCandidate, tokens)
}

// IncreaseVoterVote is a paid mutator transaction binding the contract method 0x0c9f5108.
//
// Solidity: function increaseVoterVote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) IncreaseVoterVote(addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate, tokens)
}

// IncreaseVoterVote is a paid mutator transaction binding the contract method 0x0c9f5108.
//
// Solidity: function increaseVoterVote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) IncreaseVoterVote(addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate, tokens)
}

// InsertBlacks is a paid mutator transaction binding the contract method 0x937c7041.
//
// Solidity: function insertBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) InsertBlacks(opts *bind.TransactOpts, addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "insertBlacks", addresses)
}

// InsertBlacks is a paid mutator transaction binding the contract method 0x937c7041.
//
// Solidity: function insertBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataSession) InsertBlacks(addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.InsertBlacks(&_BokerNodeData.TransactOpts, addresses)
}

// InsertBlacks is a paid mutator transaction binding the contract method 0x937c7041.
//
// Solidity: function insertBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) InsertBlacks(addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.InsertBlacks(&_BokerNodeData.TransactOpts, addresses)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) SetManager(opts *bind.TransactOpts, addrManager common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "setManager", addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNodeData *BokerNodeDataSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetManager(&_BokerNodeData.TransactOpts, addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetManager(&_BokerNodeData.TransactOpts, addrManager)
}

// SetVoterDeposit is a paid mutator transaction binding the contract method 0xc90f008a.
//
// Solidity: function setVoterDeposit(addrVoter address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) SetVoterDeposit(opts *bind.TransactOpts, addrVoter common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "setVoterDeposit", addrVoter, amount)
}

// SetVoterDeposit is a paid mutator transaction binding the contract method 0xc90f008a.
//
// Solidity: function setVoterDeposit(addrVoter address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) SetVoterDeposit(addrVoter common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, amount)
}

// SetVoterDeposit is a paid mutator transaction binding the contract method 0xc90f008a.
//
// Solidity: function setVoterDeposit(addrVoter address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) SetVoterDeposit(addrVoter common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, amount)
}

// TickTimeout is a paid mutator transaction binding the contract method 0x156bf9ba.
//
// Solidity: function tickTimeout() returns()
func (_BokerNodeData *BokerNodeDataTransactor) TickTimeout(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "tickTimeout")
}

// TickTimeout is a paid mutator transaction binding the contract method 0x156bf9ba.
//
// Solidity: function tickTimeout() returns()
func (_BokerNodeData *BokerNodeDataSession) TickTimeout() (*types.Transaction, error) {
	return _BokerNodeData.Contract.TickTimeout(&_BokerNodeData.TransactOpts)
}

// TickTimeout is a paid mutator transaction binding the contract method 0x156bf9ba.
//
// Solidity: function tickTimeout() returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) TickTimeout() (*types.Transaction, error) {
	return _BokerNodeData.Contract.TickTimeout(&_BokerNodeData.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) TransferOwnership(opts *bind.TransactOpts, _newOwner common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "transferOwnership", _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNodeData *BokerNodeDataSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.TransferOwnership(&_BokerNodeData.TransactOpts, _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.TransferOwnership(&_BokerNodeData.TransactOpts, _newOwner)
}
