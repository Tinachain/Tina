// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package boker_contract

import (
	"math/big"
	"strings"

	"github.com/Tinachain/Tina/chain/accounts/abi"
	"github.com/Tinachain/Tina/chain/accounts/abi/bind"
	"github.com/Tinachain/Tina/chain/common"
	"github.com/Tinachain/Tina/chain/core/types"
)

// BokerNodeDataABI is the input ABI used to generate the binding from.
const BokerNodeDataABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getCandidates\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"tickets\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"increaseVoterVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"addCandidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"tickTimeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"existCandidate\",\"outputs\":[{\"name\":\"exist\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearBlacks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cName\",\"type\":\"string\"}],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidateArray\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"increaseCandidateTicket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"increaseVoterDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address\"}],\"name\":\"deleteBlacks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"voteCycleRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bokerManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"candidates\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"tickets\",\"type\":\"uint256\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addresses\",\"type\":\"address\"}],\"name\":\"insertBlacks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"}],\"name\":\"updateVoterUnlockTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"roundAdd\",\"type\":\"uint256\"}],\"name\":\"increaseVoteCycleRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"deposit\",\"type\":\"uint256\"},{\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"clearVoterVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"getCandidate\",\"outputs\":[{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"tickets\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"voteCycleBegin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"blackMap\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterArray\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setVoterDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVoters\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBlacks\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigInt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"}],\"name\":\"getVoteInfo\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"tickets\",\"type\":\"uint256[]\"},{\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"name\":\"deposit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setVoteCycleBegin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseCandidateTicket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// BokerNodeDataBin is the compiled bytecode used for deploying new contracts.
const BokerNodeDataBin = `60806040526040805190810160405280600581526020017f312e302e3100000000000000000000000000000000000000000000000000000081525060019080519060200190620000519291906200032a565b5042600255600060045560006005553480156200006d57600080fd5b5060405160208062003a578339810180604052810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000ec81620001c9640100000000026401000000009004565b506007600090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506009600090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550504260048190555050620003d9565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200023357600080fd5b505af115801562000248573d6000803e3d6000fd5b505050506040513d60208110156200025f57600080fd5b81019080805190602001909291905050501515620002e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036d57805160ff19168380011785556200039e565b828001600101855582156200039e579182015b828111156200039d57825182559160200191906001019062000380565b5b509050620003ad9190620003b1565b5090565b620003d691905b80821115620003d2576000816000905550600101620003b8565b5090565b90565b61366e80620003e96000396000f3006080604052600436106101c2576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306a49fce146101c75780630c9f51081461027b5780630df7afab146102e8578063156bf9ba1461037357806317132a0f1461038a5780631c32c9ef146103e55780631eb726af146103fc57806335a893a1146104a5578063378298bc146105125780633e26a5a9146105f4578063424b0baf1461064157806354fd4d501461068e57806361dcd7ab1461071e5780636207dab01461074957806365fc42ce1461078c57806366ebc1c6146107b75780638ab66a901461080e5780638da5cb5b146109e3578063937c704114610a3a5780639814be5314610a7d5780639a5074a414610ac0578063a3ec138d14610b01578063a7a6586a14610b99578063b7adcf1d14610bfc578063b9c25a6d14610d97578063bb01ecd814610dc2578063c279919f14610e1d578063c90f008a14610e8a578063cdd7225314610ed7578063d0ebdbe714610f43578063d38ff7a114610f86578063d43c802114610ff2578063dc1e30da1461106f578063e107f9ec1461115d578063e13e6ffe1461118a578063f2fde38b146111d7575b600080fd5b3480156101d357600080fd5b506101dc61121a565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610223578082015181840152602081019050610208565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561026557808201518184015260208101905061024a565b5050505090500194505050505060405180910390f35b34801561028757600080fd5b506102e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113a1565b005b3480156102f457600080fd5b50610371600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190820180359060200191909192939192939080359060200190820180359060200191909192939192939080359060200190820180359060200191909192939192939050505061142a565b005b34801561037f57600080fd5b50610388611587565b005b34801561039657600080fd5b506103cb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611589565b604051808215151515815260200191505060405180910390f35b3480156103f157600080fd5b506103fa6115ea565b005b34801561040857600080fd5b50610463600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506116ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104b157600080fd5b506104d0600480360381019080803590602001909291905050506119ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561051e57600080fd5b50610579600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506119eb565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105b957808201518184015260208101905061059e565b50505050905090810190601f1680156105e65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561060057600080fd5b5061063f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b7b565b005b34801561064d57600080fd5b5061068c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611bf5565b005b34801561069a57600080fd5b506106a3611e1c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106e35780820151818401526020810190506106c8565b50505050905090810190601f1680156107105780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561072a57600080fd5b50610733611eba565b6040518082815260200191505060405180910390f35b34801561075557600080fd5b5061078a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ec0565b005b34801561079857600080fd5b506107a1612072565b6040518082815260200191505060405180910390f35b3480156107c357600080fd5b506107cc612078565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561081a57600080fd5b5061084f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061209e565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019080838360005b838110156108d55780820151818401526020810190506108ba565b50505050905090810190601f1680156109025780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561093b578082015181840152602081019050610920565b50505050905090810190601f1680156109685780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019080838360005b838110156109a1578082015181840152602081019050610986565b50505050905090810190601f1680156109ce5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b3480156109ef57600080fd5b506109f86122c2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a4657600080fd5b50610a7b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122e7565b005b348015610a8957600080fd5b50610abe600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612457565b005b348015610acc57600080fd5b50610aeb600480360381019080803590602001909291905050506124fb565b6040518082815260200191505060405180910390f35b348015610b0d57600080fd5b50610b42600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612522565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b348015610ba557600080fd5b50610bfa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612572565b005b348015610c0857600080fd5b50610c3d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061261c565b60405180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b83811015610c8b578082015181840152602081019050610c70565b50505050905090810190601f168015610cb85780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b83811015610cf1578082015181840152602081019050610cd6565b50505050905090810190601f168015610d1e5780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015610d57578082015181840152602081019050610d3c565b50505050905090810190601f168015610d845780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b348015610da357600080fd5b50610dac612864565b6040518082815260200191505060405180910390f35b348015610dce57600080fd5b50610e03600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061286a565b604051808215151515815260200191505060405180910390f35b348015610e2957600080fd5b50610e486004803603810190808035906020019092919050505061288a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610e9657600080fd5b50610ed5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506128c8565b005b348015610ee357600080fd5b50610eec61292c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610f2f578082015181840152602081019050610f14565b505050509050019250505060405180910390f35b348015610f4f57600080fd5b50610f84600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b1e565b005b348015610f9257600080fd5b50610f9b612b85565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610fde578082015181840152602081019050610fc3565b505050509050019250505060405180910390f35b348015610ffe57600080fd5b50611059600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612d84565b6040518082815260200191505060405180910390f35b34801561107b57600080fd5b506110b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ebe565b604051808060200180602001858152602001848152602001838103835287818151815260200191508051906020019060200280838360005b838110156111035780820151818401526020810190506110e8565b50505050905001838103825286818151815260200191508051906020019060200280838360005b8381101561114557808201518184015260208101905061112a565b50505050905001965050505050505060405180910390f35b34801561116957600080fd5b50611188600480360381019080803590602001909291905050506130b5565b005b34801561119657600080fd5b506111d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506130bf565b005b3480156111e357600080fd5b50611218600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131b5565b005b606080600080600060078054905092506001830360405190808252806020026020018201604052801561125c5781602001602082028038833980820191505090505b509450600183036040519080825280602002602001820160405280156112915781602001602082028038833980820191505090505b509350600191505b8282101561139a576007828154811015156112b057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508085600184038151811015156112ef57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154846001840381518110151561137f57fe5b90602001906020020181815250508180600101925050611299565b5050509091565b600080600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010154600014156113f757611423565b611401828561321c565b905061141a8382600101546132ee90919063ffffffff16565b81600101819055505b5050505050565b6000600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160010154111561147f5761157d565b878160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060078054905081600101819055506000816002018190555086868260030191906114ed92919061357c565b50848482600401919061150192919061357c565b50828282600501919061151592919061357c565b5060078890806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b5050505050505050565b565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460001415156115e057600190506115e5565b600090505b919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561164757600080fd5b600090505b600b805490508110156116ee57600a6000600b8381548110151561166c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055808060010191505061164c565b600b60006116fc91906135fc565b50565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fca1f3c1846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117ac578082015181840152602081019050611791565b50505050905090810190601f1680156117d95780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b1580156117f857600080fd5b505af115801561180c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060a081101561183657600080fd5b8101908080519060200190929190805164010000000081111561185857600080fd5b8281019050602081018481111561186e57600080fd5b815185600182028301116401000000008211171561188b57600080fd5b50509291906020018051906020019092919080516401000000008111156118b157600080fd5b828101905060208101848111156118c757600080fd5b81518560018202830111640100000000821117156118e457600080fd5b505092919060200180519060200190929190505050505092505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156119a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f616464722069732030210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80915050919050565b6007818154811015156119bc57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634a189f35836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611a97578082015181840152602081019050611a7c565b50505050905090810190601f168015611ac45780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b158015611ae357600080fd5b505af1158015611af7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611b2157600080fd5b810190808051640100000000811115611b3957600080fd5b82810190506020810184811115611b4f57600080fd5b8151856001820283011164010000000082111715611b6c57600080fd5b50509291905050509050919050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001015460001415611bd057611bf0565b611be78282600201546132ee90919063ffffffff16565b81600201819055505b505050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001015460001415611df857828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160020181905550611cd06040805190810160405280600a81526020017f566f74654c6f636b757000000000000000000000000000000000000000000000815250612d84565b600454018160030181905550600980549050816001018190555060098390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501600090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b611e0f8282600201546132ee90919063ffffffff16565b8160020181905550505050565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611eb25780601f10611e8757610100808354040283529160200191611eb2565b820191906000526020600020905b815481529060010190602001808311611e9557829003601f168201915b505050505081565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611f1d57600080fd5b600090505b600b8054905081101561206e578173ffffffffffffffffffffffffffffffffffffffff16600b82815481101515611f5557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561206157600a6000600b83815481101515611faf57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055600b8181548110151561203357fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b8080600101915050611f22565b5050565b60055481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561217c5780601f106121515761010080835404028352916020019161217c565b820191906000526020600020905b81548152906001019060200180831161215f57829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561221a5780601f106121ef5761010080835404028352916020019161221a565b820191906000526020600020905b8154815290600101906020018083116121fd57829003601f168201915b505050505090806005018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122b85780601f1061228d576101008083540402835291602001916122b8565b820191906000526020600020905b81548152906001019060200180831161229b57829003601f168201915b5050505050905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561234257600080fd5b600a60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515612454576001600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600b8190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010154600014156124ac576124f7565b6124ea6040805190810160405280600a81526020017f566f74654c6f636b757000000000000000000000000000000000000000000000815250612d84565b6004540181600301819055505b5050565b6000612512826005546132ee90919063ffffffff16565b6005819055506005549050919050565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b600080600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010154600014156125c857612616565b8160040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600101819055505b50505050565b6060806060600080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010154600014156126775761285c565b806003018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561270f5780601f106126e45761010080835404028352916020019161270f565b820191906000526020600020905b8154815290600101906020018083116126f257829003601f168201915b50505050509450806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156127ae5780601f10612783576101008083540402835291602001916127ae565b820191906000526020600020905b81548152906001019060200180831161279157829003601f168201915b50505050509350806005018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561284d5780601f106128225761010080835404028352916020019161284d565b820191906000526020600020905b81548152906001019060200180831161283057829003601f168201915b50505050509250806002015491505b509193509193565b60045481565b600a6020528060005260406000206000915054906101000a900460ff1681565b60098181548110151561289957fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600101546000141561291d57612927565b8181600201819055505b505050565b606060008060008060009350600192505b6009805490508310156129e75760098381548110151561295957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015411156129da5783806001019450505b828060010193505061293d565b83604051908082528060200260200182016040528015612a165781602001602082028038833980820191505090505b50945060009050600192505b600980549050831015612b1757600983815481101515612a3e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541115612b0a57818582815181101515612ac557fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806001019150505b8280600101935050612a22565b5050505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612b7957600080fd5b612b828161330c565b50565b60606000806000806000809450600093505b600b80549050841015612c4557600a6000600b86815481101515612bb757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612c385784806001019550505b8380600101945050612b97565b84604051908082528060200260200182016040528015612c745781602001602082028038833980820191505090505b50955060009250600091505b600b80549050821015612d7c57600b82815481101515612c9c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600a60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612d6f57808684815181101515612d2a57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505082806001019350505b8180600101925050612c80565b505050505090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633230b078836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e30578082015181840152602081019050612e15565b50505050905090810190601f168015612e5d5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015612e7c57600080fd5b505af1158015612e90573d6000803e3d6000fd5b505050506040513d6020811015612ea657600080fd5b81019080805190602001909291905050509050919050565b606080600080600080600080600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209350836001015460001415612f1d576130aa565b83600301549550836002015494508360050180549050925060018303604051908082528060200260200182016040528015612f675781602001602082028038833980820191505090505b50975060018303604051908082528060200260200182016040528015612f9c5781602001602082028038833980820191505090505b509650600191505b828210156130a9578360050182815481101515612fbd57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050808860018403815181101515612ffc57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508360040160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154876001840381518110151561308e57fe5b90602001906020020181815250508180600101925050612fa4565b5b505050509193509193565b8060048190555050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806001015460001415613114576131b0565b81816002015410151515613190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f63616e6469646174652e7469636b657473203c20616d6f756e7421000000000081525060200191505060405180910390fd5b6131a782826002015461346990919063ffffffff16565b81600201819055505b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561321057600080fd5b61321981613482565b50565b6000808360040160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816001018190555083600501805490508160000181905550836005018390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508091505092915050565b600080828401905083811015151561330257fe5b8091505092915050565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561337557600080fd5b505af1158015613389573d6000803e3d6000fd5b505050506040513d602081101561339f57600080fd5b81019080805190602001909291905050501515613424576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600082821115151561347757fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156134be57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106135bd57803560ff19168380011785556135eb565b828001600101855582156135eb579182015b828111156135ea5782358255916020019190600101906135cf565b5b5090506135f8919061361d565b5090565b508054600082559060005260206000209081019061361a919061361d565b50565b61363f91905b8082111561363b576000816000905550600101613623565b5090565b905600a165627a7a723058208e661d8165cfeeaaa11f92e7102fd14f09ede4b399472e30bc56391134f787d30029`

// DeployBokerNodeData deploys a new Ethereum contract, binding an instance of BokerNodeData to it.
func DeployBokerNodeData(auth *bind.TransactOpts, backend bind.ContractBackend, addrManager common.Address) (common.Address, *types.Transaction, *BokerNodeData, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerNodeDataABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BokerNodeDataBin), backend, addrManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BokerNodeData{BokerNodeDataCaller: BokerNodeDataCaller{contract: contract}, BokerNodeDataTransactor: BokerNodeDataTransactor{contract: contract}}, nil
}

// BokerNodeData is an auto generated Go binding around an Ethereum contract.
type BokerNodeData struct {
	BokerNodeDataCaller     // Read-only binding to the contract
	BokerNodeDataTransactor // Write-only binding to the contract
}

// BokerNodeDataCaller is an auto generated read-only Go binding around an Ethereum contract.
type BokerNodeDataCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerNodeDataTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BokerNodeDataTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerNodeDataSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BokerNodeDataSession struct {
	Contract     *BokerNodeData    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BokerNodeDataCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BokerNodeDataCallerSession struct {
	Contract *BokerNodeDataCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// BokerNodeDataTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BokerNodeDataTransactorSession struct {
	Contract     *BokerNodeDataTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// BokerNodeDataRaw is an auto generated low-level Go binding around an Ethereum contract.
type BokerNodeDataRaw struct {
	Contract *BokerNodeData // Generic contract binding to access the raw methods on
}

// BokerNodeDataCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BokerNodeDataCallerRaw struct {
	Contract *BokerNodeDataCaller // Generic read-only contract binding to access the raw methods on
}

// BokerNodeDataTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BokerNodeDataTransactorRaw struct {
	Contract *BokerNodeDataTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBokerNodeData creates a new instance of BokerNodeData, bound to a specific deployed contract.
func NewBokerNodeData(address common.Address, backend bind.ContractBackend) (*BokerNodeData, error) {
	contract, err := bindBokerNodeData(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BokerNodeData{BokerNodeDataCaller: BokerNodeDataCaller{contract: contract}, BokerNodeDataTransactor: BokerNodeDataTransactor{contract: contract}}, nil
}

// NewBokerNodeDataCaller creates a new read-only instance of BokerNodeData, bound to a specific deployed contract.
func NewBokerNodeDataCaller(address common.Address, caller bind.ContractCaller) (*BokerNodeDataCaller, error) {
	contract, err := bindBokerNodeData(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &BokerNodeDataCaller{contract: contract}, nil
}

// NewBokerNodeDataTransactor creates a new write-only instance of BokerNodeData, bound to a specific deployed contract.
func NewBokerNodeDataTransactor(address common.Address, transactor bind.ContractTransactor) (*BokerNodeDataTransactor, error) {
	contract, err := bindBokerNodeData(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &BokerNodeDataTransactor{contract: contract}, nil
}

// bindBokerNodeData binds a generic wrapper to an already deployed contract.
func bindBokerNodeData(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerNodeDataABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerNodeData *BokerNodeDataRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerNodeData.Contract.BokerNodeDataCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerNodeData *BokerNodeDataRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNodeData.Contract.BokerNodeDataTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerNodeData *BokerNodeDataRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerNodeData.Contract.BokerNodeDataTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerNodeData *BokerNodeDataCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerNodeData.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerNodeData *BokerNodeDataTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNodeData.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerNodeData *BokerNodeDataTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerNodeData.Contract.contract.Transact(opts, method, params...)
}

// BlackMap is a free data retrieval call binding the contract method 0xbb01ecd8.
//
// Solidity: function blackMap( address) constant returns(bool)
func (_BokerNodeData *BokerNodeDataCaller) BlackMap(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "blackMap", arg0)
	return *ret0, err
}

// BlackMap is a free data retrieval call binding the contract method 0xbb01ecd8.
//
// Solidity: function blackMap( address) constant returns(bool)
func (_BokerNodeData *BokerNodeDataSession) BlackMap(arg0 common.Address) (bool, error) {
	return _BokerNodeData.Contract.BlackMap(&_BokerNodeData.CallOpts, arg0)
}

// BlackMap is a free data retrieval call binding the contract method 0xbb01ecd8.
//
// Solidity: function blackMap( address) constant returns(bool)
func (_BokerNodeData *BokerNodeDataCallerSession) BlackMap(arg0 common.Address) (bool, error) {
	return _BokerNodeData.Contract.BlackMap(&_BokerNodeData.CallOpts, arg0)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) BokerManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "bokerManager")
	return *ret0, err
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) BokerManager() (common.Address, error) {
	return _BokerNodeData.Contract.BokerManager(&_BokerNodeData.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) BokerManager() (common.Address, error) {
	return _BokerNodeData.Contract.BokerManager(&_BokerNodeData.CallOpts)
}

// CandidateArray is a free data retrieval call binding the contract method 0x35a893a1.
//
// Solidity: function candidateArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) CandidateArray(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "candidateArray", arg0)
	return *ret0, err
}

// CandidateArray is a free data retrieval call binding the contract method 0x35a893a1.
//
// Solidity: function candidateArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) CandidateArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.CandidateArray(&_BokerNodeData.CallOpts, arg0)
}

// CandidateArray is a free data retrieval call binding the contract method 0x35a893a1.
//
// Solidity: function candidateArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) CandidateArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.CandidateArray(&_BokerNodeData.CallOpts, arg0)
}

// Candidates is a free data retrieval call binding the contract method 0x8ab66a90.
//
// Solidity: function candidates( address) constant returns(addr address, index uint256, tickets uint256, description string, team string, name string)
func (_BokerNodeData *BokerNodeDataCaller) Candidates(opts *bind.CallOpts, arg0 common.Address) (struct {
	Addr        common.Address
	Index       *big.Int
	Tickets     *big.Int
	Description string
	Team        string
	Name        string
}, error) {
	ret := new(struct {
		Addr        common.Address
		Index       *big.Int
		Tickets     *big.Int
		Description string
		Team        string
		Name        string
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "candidates", arg0)
	return *ret, err
}

// Candidates is a free data retrieval call binding the contract method 0x8ab66a90.
//
// Solidity: function candidates( address) constant returns(addr address, index uint256, tickets uint256, description string, team string, name string)
func (_BokerNodeData *BokerNodeDataSession) Candidates(arg0 common.Address) (struct {
	Addr        common.Address
	Index       *big.Int
	Tickets     *big.Int
	Description string
	Team        string
	Name        string
}, error) {
	return _BokerNodeData.Contract.Candidates(&_BokerNodeData.CallOpts, arg0)
}

// Candidates is a free data retrieval call binding the contract method 0x8ab66a90.
//
// Solidity: function candidates( address) constant returns(addr address, index uint256, tickets uint256, description string, team string, name string)
func (_BokerNodeData *BokerNodeDataCallerSession) Candidates(arg0 common.Address) (struct {
	Addr        common.Address
	Index       *big.Int
	Tickets     *big.Int
	Description string
	Team        string
	Name        string
}, error) {
	return _BokerNodeData.Contract.Candidates(&_BokerNodeData.CallOpts, arg0)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) ContractAddress(opts *bind.CallOpts, cName string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "contractAddress", cName)
	return *ret0, err
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerNodeData.Contract.ContractAddress(&_BokerNodeData.CallOpts, cName)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerNodeData.Contract.ContractAddress(&_BokerNodeData.CallOpts, cName)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCaller) CreateTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "createTime")
	return *ret0, err
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) CreateTime() (*big.Int, error) {
	return _BokerNodeData.Contract.CreateTime(&_BokerNodeData.CallOpts)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) CreateTime() (*big.Int, error) {
	return _BokerNodeData.Contract.CreateTime(&_BokerNodeData.CallOpts)
}

// ExistCandidate is a free data retrieval call binding the contract method 0x17132a0f.
//
// Solidity: function existCandidate(addrCandidate address) constant returns(exist bool)
func (_BokerNodeData *BokerNodeDataCaller) ExistCandidate(opts *bind.CallOpts, addrCandidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "existCandidate", addrCandidate)
	return *ret0, err
}

// ExistCandidate is a free data retrieval call binding the contract method 0x17132a0f.
//
// Solidity: function existCandidate(addrCandidate address) constant returns(exist bool)
func (_BokerNodeData *BokerNodeDataSession) ExistCandidate(addrCandidate common.Address) (bool, error) {
	return _BokerNodeData.Contract.ExistCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// ExistCandidate is a free data retrieval call binding the contract method 0x17132a0f.
//
// Solidity: function existCandidate(addrCandidate address) constant returns(exist bool)
func (_BokerNodeData *BokerNodeDataCallerSession) ExistCandidate(addrCandidate common.Address) (bool, error) {
	return _BokerNodeData.Contract.ExistCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// GetBlacks is a free data retrieval call binding the contract method 0xd38ff7a1.
//
// Solidity: function getBlacks() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataCaller) GetBlacks(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "getBlacks")
	return *ret0, err
}

// GetBlacks is a free data retrieval call binding the contract method 0xd38ff7a1.
//
// Solidity: function getBlacks() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataSession) GetBlacks() ([]common.Address, error) {
	return _BokerNodeData.Contract.GetBlacks(&_BokerNodeData.CallOpts)
}

// GetBlacks is a free data retrieval call binding the contract method 0xd38ff7a1.
//
// Solidity: function getBlacks() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataCallerSession) GetBlacks() ([]common.Address, error) {
	return _BokerNodeData.Contract.GetBlacks(&_BokerNodeData.CallOpts)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNodeData *BokerNodeDataCaller) GetCandidate(opts *bind.CallOpts, addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	ret := new(struct {
		Description string
		Team        string
		Name        string
		Tickets     *big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "getCandidate", addrCandidate)
	return *ret, err
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNodeData *BokerNodeDataSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNodeData *BokerNodeDataCaller) GetCandidates(opts *bind.CallOpts) (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	ret := new(struct {
		Addresses []common.Address
		Tickets   []*big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "getCandidates")
	return *ret, err
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNodeData *BokerNodeDataSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidates(&_BokerNodeData.CallOpts)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNodeData *BokerNodeDataCallerSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidates(&_BokerNodeData.CallOpts)
}

// GetVoteInfo is a free data retrieval call binding the contract method 0xdc1e30da.
//
// Solidity: function getVoteInfo(addrVoter address) constant returns(addresses address[], tickets uint256[], unlockTime uint256, deposit uint256)
func (_BokerNodeData *BokerNodeDataCaller) GetVoteInfo(opts *bind.CallOpts, addrVoter common.Address) (struct {
	Addresses  []common.Address
	Tickets    []*big.Int
	UnlockTime *big.Int
	Deposit    *big.Int
}, error) {
	ret := new(struct {
		Addresses  []common.Address
		Tickets    []*big.Int
		UnlockTime *big.Int
		Deposit    *big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "getVoteInfo", addrVoter)
	return *ret, err
}

// GetVoteInfo is a free data retrieval call binding the contract method 0xdc1e30da.
//
// Solidity: function getVoteInfo(addrVoter address) constant returns(addresses address[], tickets uint256[], unlockTime uint256, deposit uint256)
func (_BokerNodeData *BokerNodeDataSession) GetVoteInfo(addrVoter common.Address) (struct {
	Addresses  []common.Address
	Tickets    []*big.Int
	UnlockTime *big.Int
	Deposit    *big.Int
}, error) {
	return _BokerNodeData.Contract.GetVoteInfo(&_BokerNodeData.CallOpts, addrVoter)
}

// GetVoteInfo is a free data retrieval call binding the contract method 0xdc1e30da.
//
// Solidity: function getVoteInfo(addrVoter address) constant returns(addresses address[], tickets uint256[], unlockTime uint256, deposit uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) GetVoteInfo(addrVoter common.Address) (struct {
	Addresses  []common.Address
	Tickets    []*big.Int
	UnlockTime *big.Int
	Deposit    *big.Int
}, error) {
	return _BokerNodeData.Contract.GetVoteInfo(&_BokerNodeData.CallOpts, addrVoter)
}

// GetVoters is a free data retrieval call binding the contract method 0xcdd72253.
//
// Solidity: function getVoters() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataCaller) GetVoters(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "getVoters")
	return *ret0, err
}

// GetVoters is a free data retrieval call binding the contract method 0xcdd72253.
//
// Solidity: function getVoters() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataSession) GetVoters() ([]common.Address, error) {
	return _BokerNodeData.Contract.GetVoters(&_BokerNodeData.CallOpts)
}

// GetVoters is a free data retrieval call binding the contract method 0xcdd72253.
//
// Solidity: function getVoters() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataCallerSession) GetVoters() ([]common.Address, error) {
	return _BokerNodeData.Contract.GetVoters(&_BokerNodeData.CallOpts)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCaller) GlobalConfigInt(opts *bind.CallOpts, key string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "globalConfigInt", key)
	return *ret0, err
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerNodeData.Contract.GlobalConfigInt(&_BokerNodeData.CallOpts, key)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerNodeData.Contract.GlobalConfigInt(&_BokerNodeData.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNodeData *BokerNodeDataCaller) GlobalConfigString(opts *bind.CallOpts, key string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "globalConfigString", key)
	return *ret0, err
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNodeData *BokerNodeDataSession) GlobalConfigString(key string) (string, error) {
	return _BokerNodeData.Contract.GlobalConfigString(&_BokerNodeData.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNodeData *BokerNodeDataCallerSession) GlobalConfigString(key string) (string, error) {
	return _BokerNodeData.Contract.GlobalConfigString(&_BokerNodeData.CallOpts, key)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) Owner() (common.Address, error) {
	return _BokerNodeData.Contract.Owner(&_BokerNodeData.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) Owner() (common.Address, error) {
	return _BokerNodeData.Contract.Owner(&_BokerNodeData.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNodeData *BokerNodeDataCaller) Version(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNodeData *BokerNodeDataSession) Version() (string, error) {
	return _BokerNodeData.Contract.Version(&_BokerNodeData.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNodeData *BokerNodeDataCallerSession) Version() (string, error) {
	return _BokerNodeData.Contract.Version(&_BokerNodeData.CallOpts)
}

// VoteCycleBegin is a free data retrieval call binding the contract method 0xb9c25a6d.
//
// Solidity: function voteCycleBegin() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCaller) VoteCycleBegin(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "voteCycleBegin")
	return *ret0, err
}

// VoteCycleBegin is a free data retrieval call binding the contract method 0xb9c25a6d.
//
// Solidity: function voteCycleBegin() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) VoteCycleBegin() (*big.Int, error) {
	return _BokerNodeData.Contract.VoteCycleBegin(&_BokerNodeData.CallOpts)
}

// VoteCycleBegin is a free data retrieval call binding the contract method 0xb9c25a6d.
//
// Solidity: function voteCycleBegin() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) VoteCycleBegin() (*big.Int, error) {
	return _BokerNodeData.Contract.VoteCycleBegin(&_BokerNodeData.CallOpts)
}

// VoteCycleRound is a free data retrieval call binding the contract method 0x65fc42ce.
//
// Solidity: function voteCycleRound() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCaller) VoteCycleRound(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "voteCycleRound")
	return *ret0, err
}

// VoteCycleRound is a free data retrieval call binding the contract method 0x65fc42ce.
//
// Solidity: function voteCycleRound() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) VoteCycleRound() (*big.Int, error) {
	return _BokerNodeData.Contract.VoteCycleRound(&_BokerNodeData.CallOpts)
}

// VoteCycleRound is a free data retrieval call binding the contract method 0x65fc42ce.
//
// Solidity: function voteCycleRound() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) VoteCycleRound() (*big.Int, error) {
	return _BokerNodeData.Contract.VoteCycleRound(&_BokerNodeData.CallOpts)
}

// VoterArray is a free data retrieval call binding the contract method 0xc279919f.
//
// Solidity: function voterArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) VoterArray(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "voterArray", arg0)
	return *ret0, err
}

// VoterArray is a free data retrieval call binding the contract method 0xc279919f.
//
// Solidity: function voterArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) VoterArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.VoterArray(&_BokerNodeData.CallOpts, arg0)
}

// VoterArray is a free data retrieval call binding the contract method 0xc279919f.
//
// Solidity: function voterArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) VoterArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.VoterArray(&_BokerNodeData.CallOpts, arg0)
}

// Voters is a free data retrieval call binding the contract method 0xa3ec138d.
//
// Solidity: function voters( address) constant returns(addr address, index uint256, deposit uint256, unlockTime uint256)
func (_BokerNodeData *BokerNodeDataCaller) Voters(opts *bind.CallOpts, arg0 common.Address) (struct {
	Addr       common.Address
	Index      *big.Int
	Deposit    *big.Int
	UnlockTime *big.Int
}, error) {
	ret := new(struct {
		Addr       common.Address
		Index      *big.Int
		Deposit    *big.Int
		UnlockTime *big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "voters", arg0)
	return *ret, err
}

// Voters is a free data retrieval call binding the contract method 0xa3ec138d.
//
// Solidity: function voters( address) constant returns(addr address, index uint256, deposit uint256, unlockTime uint256)
func (_BokerNodeData *BokerNodeDataSession) Voters(arg0 common.Address) (struct {
	Addr       common.Address
	Index      *big.Int
	Deposit    *big.Int
	UnlockTime *big.Int
}, error) {
	return _BokerNodeData.Contract.Voters(&_BokerNodeData.CallOpts, arg0)
}

// Voters is a free data retrieval call binding the contract method 0xa3ec138d.
//
// Solidity: function voters( address) constant returns(addr address, index uint256, deposit uint256, unlockTime uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) Voters(arg0 common.Address) (struct {
	Addr       common.Address
	Index      *big.Int
	Deposit    *big.Int
	UnlockTime *big.Int
}, error) {
	return _BokerNodeData.Contract.Voters(&_BokerNodeData.CallOpts, arg0)
}

// AddCandidate is a paid mutator transaction binding the contract method 0x0df7afab.
//
// Solidity: function addCandidate(addrCandidate address, description string, team string, name string) returns()
func (_BokerNodeData *BokerNodeDataTransactor) AddCandidate(opts *bind.TransactOpts, addrCandidate common.Address, description string, team string, name string) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "addCandidate", addrCandidate, description, team, name)
}

// AddCandidate is a paid mutator transaction binding the contract method 0x0df7afab.
//
// Solidity: function addCandidate(addrCandidate address, description string, team string, name string) returns()
func (_BokerNodeData *BokerNodeDataSession) AddCandidate(addrCandidate common.Address, description string, team string, name string) (*types.Transaction, error) {
	return _BokerNodeData.Contract.AddCandidate(&_BokerNodeData.TransactOpts, addrCandidate, description, team, name)
}

// AddCandidate is a paid mutator transaction binding the contract method 0x0df7afab.
//
// Solidity: function addCandidate(addrCandidate address, description string, team string, name string) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) AddCandidate(addrCandidate common.Address, description string, team string, name string) (*types.Transaction, error) {
	return _BokerNodeData.Contract.AddCandidate(&_BokerNodeData.TransactOpts, addrCandidate, description, team, name)
}

// ClearBlacks is a paid mutator transaction binding the contract method 0x1c32c9ef.
//
// Solidity: function clearBlacks() returns()
func (_BokerNodeData *BokerNodeDataTransactor) ClearBlacks(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "clearBlacks")
}

// ClearBlacks is a paid mutator transaction binding the contract method 0x1c32c9ef.
//
// Solidity: function clearBlacks() returns()
func (_BokerNodeData *BokerNodeDataSession) ClearBlacks() (*types.Transaction, error) {
	return _BokerNodeData.Contract.ClearBlacks(&_BokerNodeData.TransactOpts)
}

// ClearBlacks is a paid mutator transaction binding the contract method 0x1c32c9ef.
//
// Solidity: function clearBlacks() returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) ClearBlacks() (*types.Transaction, error) {
	return _BokerNodeData.Contract.ClearBlacks(&_BokerNodeData.TransactOpts)
}

// ClearVoterVote is a paid mutator transaction binding the contract method 0xa7a6586a.
//
// Solidity: function clearVoterVote(addrVoter address, addrCandidate address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) ClearVoterVote(opts *bind.TransactOpts, addrVoter common.Address, addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "clearVoterVote", addrVoter, addrCandidate)
}

// ClearVoterVote is a paid mutator transaction binding the contract method 0xa7a6586a.
//
// Solidity: function clearVoterVote(addrVoter address, addrCandidate address) returns()
func (_BokerNodeData *BokerNodeDataSession) ClearVoterVote(addrVoter common.Address, addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.ClearVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate)
}

// ClearVoterVote is a paid mutator transaction binding the contract method 0xa7a6586a.
//
// Solidity: function clearVoterVote(addrVoter address, addrCandidate address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) ClearVoterVote(addrVoter common.Address, addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.ClearVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate)
}

// DecreaseCandidateTicket is a paid mutator transaction binding the contract method 0xe13e6ffe.
//
// Solidity: function decreaseCandidateTicket(addrCandidate address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) DecreaseCandidateTicket(opts *bind.TransactOpts, addrCandidate common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "decreaseCandidateTicket", addrCandidate, amount)
}

// DecreaseCandidateTicket is a paid mutator transaction binding the contract method 0xe13e6ffe.
//
// Solidity: function decreaseCandidateTicket(addrCandidate address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) DecreaseCandidateTicket(addrCandidate common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.DecreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, amount)
}

// DecreaseCandidateTicket is a paid mutator transaction binding the contract method 0xe13e6ffe.
//
// Solidity: function decreaseCandidateTicket(addrCandidate address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) DecreaseCandidateTicket(addrCandidate common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.DecreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, amount)
}

// DeleteBlacks is a paid mutator transaction binding the contract method 0x6207dab0.
//
// Solidity: function deleteBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) DeleteBlacks(opts *bind.TransactOpts, addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "deleteBlacks", addresses)
}

// DeleteBlacks is a paid mutator transaction binding the contract method 0x6207dab0.
//
// Solidity: function deleteBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataSession) DeleteBlacks(addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.DeleteBlacks(&_BokerNodeData.TransactOpts, addresses)
}

// DeleteBlacks is a paid mutator transaction binding the contract method 0x6207dab0.
//
// Solidity: function deleteBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) DeleteBlacks(addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.DeleteBlacks(&_BokerNodeData.TransactOpts, addresses)
}

// IncreaseCandidateTicket is a paid mutator transaction binding the contract method 0x3e26a5a9.
//
// Solidity: function increaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) IncreaseCandidateTicket(opts *bind.TransactOpts, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "increaseCandidateTicket", addrCandidate, tokens)
}

// IncreaseCandidateTicket is a paid mutator transaction binding the contract method 0x3e26a5a9.
//
// Solidity: function increaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) IncreaseCandidateTicket(addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, tokens)
}

// IncreaseCandidateTicket is a paid mutator transaction binding the contract method 0x3e26a5a9.
//
// Solidity: function increaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) IncreaseCandidateTicket(addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, tokens)
}

// IncreaseVoteCycleRound is a paid mutator transaction binding the contract method 0x9a5074a4.
//
// Solidity: function increaseVoteCycleRound(roundAdd uint256) returns(uint256)
func (_BokerNodeData *BokerNodeDataTransactor) IncreaseVoteCycleRound(opts *bind.TransactOpts, roundAdd *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "increaseVoteCycleRound", roundAdd)
}

// IncreaseVoteCycleRound is a paid mutator transaction binding the contract method 0x9a5074a4.
//
// Solidity: function increaseVoteCycleRound(roundAdd uint256) returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) IncreaseVoteCycleRound(roundAdd *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoteCycleRound(&_BokerNodeData.TransactOpts, roundAdd)
}

// IncreaseVoteCycleRound is a paid mutator transaction binding the contract method 0x9a5074a4.
//
// Solidity: function increaseVoteCycleRound(roundAdd uint256) returns(uint256)
func (_BokerNodeData *BokerNodeDataTransactorSession) IncreaseVoteCycleRound(roundAdd *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoteCycleRound(&_BokerNodeData.TransactOpts, roundAdd)
}

// IncreaseVoterDeposit is a paid mutator transaction binding the contract method 0x424b0baf.
//
// Solidity: function increaseVoterDeposit(addrVoter address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) IncreaseVoterDeposit(opts *bind.TransactOpts, addrVoter common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "increaseVoterDeposit", addrVoter, tokens)
}

// IncreaseVoterDeposit is a paid mutator transaction binding the contract method 0x424b0baf.
//
// Solidity: function increaseVoterDeposit(addrVoter address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) IncreaseVoterDeposit(addrVoter common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, tokens)
}

// IncreaseVoterDeposit is a paid mutator transaction binding the contract method 0x424b0baf.
//
// Solidity: function increaseVoterDeposit(addrVoter address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) IncreaseVoterDeposit(addrVoter common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, tokens)
}

// IncreaseVoterVote is a paid mutator transaction binding the contract method 0x0c9f5108.
//
// Solidity: function increaseVoterVote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) IncreaseVoterVote(opts *bind.TransactOpts, addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "increaseVoterVote", addrVoter, addrCandidate, tokens)
}

// IncreaseVoterVote is a paid mutator transaction binding the contract method 0x0c9f5108.
//
// Solidity: function increaseVoterVote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) IncreaseVoterVote(addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate, tokens)
}

// IncreaseVoterVote is a paid mutator transaction binding the contract method 0x0c9f5108.
//
// Solidity: function increaseVoterVote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) IncreaseVoterVote(addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate, tokens)
}

// InsertBlacks is a paid mutator transaction binding the contract method 0x937c7041.
//
// Solidity: function insertBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) InsertBlacks(opts *bind.TransactOpts, addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "insertBlacks", addresses)
}

// InsertBlacks is a paid mutator transaction binding the contract method 0x937c7041.
//
// Solidity: function insertBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataSession) InsertBlacks(addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.InsertBlacks(&_BokerNodeData.TransactOpts, addresses)
}

// InsertBlacks is a paid mutator transaction binding the contract method 0x937c7041.
//
// Solidity: function insertBlacks(addresses address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) InsertBlacks(addresses common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.InsertBlacks(&_BokerNodeData.TransactOpts, addresses)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) SetManager(opts *bind.TransactOpts, addrManager common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "setManager", addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNodeData *BokerNodeDataSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetManager(&_BokerNodeData.TransactOpts, addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetManager(&_BokerNodeData.TransactOpts, addrManager)
}

// SetVoteCycleBegin is a paid mutator transaction binding the contract method 0xe107f9ec.
//
// Solidity: function setVoteCycleBegin(time uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) SetVoteCycleBegin(opts *bind.TransactOpts, time *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "setVoteCycleBegin", time)
}

// SetVoteCycleBegin is a paid mutator transaction binding the contract method 0xe107f9ec.
//
// Solidity: function setVoteCycleBegin(time uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) SetVoteCycleBegin(time *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetVoteCycleBegin(&_BokerNodeData.TransactOpts, time)
}

// SetVoteCycleBegin is a paid mutator transaction binding the contract method 0xe107f9ec.
//
// Solidity: function setVoteCycleBegin(time uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) SetVoteCycleBegin(time *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetVoteCycleBegin(&_BokerNodeData.TransactOpts, time)
}

// SetVoterDeposit is a paid mutator transaction binding the contract method 0xc90f008a.
//
// Solidity: function setVoterDeposit(addrVoter address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) SetVoterDeposit(opts *bind.TransactOpts, addrVoter common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "setVoterDeposit", addrVoter, amount)
}

// SetVoterDeposit is a paid mutator transaction binding the contract method 0xc90f008a.
//
// Solidity: function setVoterDeposit(addrVoter address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) SetVoterDeposit(addrVoter common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, amount)
}

// SetVoterDeposit is a paid mutator transaction binding the contract method 0xc90f008a.
//
// Solidity: function setVoterDeposit(addrVoter address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) SetVoterDeposit(addrVoter common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, amount)
}

// TickTimeout is a paid mutator transaction binding the contract method 0x156bf9ba.
//
// Solidity: function tickTimeout() returns()
func (_BokerNodeData *BokerNodeDataTransactor) TickTimeout(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "tickTimeout")
}

// TickTimeout is a paid mutator transaction binding the contract method 0x156bf9ba.
//
// Solidity: function tickTimeout() returns()
func (_BokerNodeData *BokerNodeDataSession) TickTimeout() (*types.Transaction, error) {
	return _BokerNodeData.Contract.TickTimeout(&_BokerNodeData.TransactOpts)
}

// TickTimeout is a paid mutator transaction binding the contract method 0x156bf9ba.
//
// Solidity: function tickTimeout() returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) TickTimeout() (*types.Transaction, error) {
	return _BokerNodeData.Contract.TickTimeout(&_BokerNodeData.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) TransferOwnership(opts *bind.TransactOpts, _newOwner common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "transferOwnership", _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNodeData *BokerNodeDataSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.TransferOwnership(&_BokerNodeData.TransactOpts, _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.TransferOwnership(&_BokerNodeData.TransactOpts, _newOwner)
}

// UpdateVoterUnlockTime is a paid mutator transaction binding the contract method 0x9814be53.
//
// Solidity: function updateVoterUnlockTime(addrVoter address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) UpdateVoterUnlockTime(opts *bind.TransactOpts, addrVoter common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "updateVoterUnlockTime", addrVoter)
}

// UpdateVoterUnlockTime is a paid mutator transaction binding the contract method 0x9814be53.
//
// Solidity: function updateVoterUnlockTime(addrVoter address) returns()
func (_BokerNodeData *BokerNodeDataSession) UpdateVoterUnlockTime(addrVoter common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.UpdateVoterUnlockTime(&_BokerNodeData.TransactOpts, addrVoter)
}

// UpdateVoterUnlockTime is a paid mutator transaction binding the contract method 0x9814be53.
//
// Solidity: function updateVoterUnlockTime(addrVoter address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) UpdateVoterUnlockTime(addrVoter common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.UpdateVoterUnlockTime(&_BokerNodeData.TransactOpts, addrVoter)
}
