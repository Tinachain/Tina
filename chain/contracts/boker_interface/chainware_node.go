// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package boker_contract

import (
	"math/big"
	"strings"

	"github.com/Tinachain/Tina/chain/accounts/abi"
	"github.com/Tinachain/Tina/chain/accounts/abi/bind"
	"github.com/Tinachain/Tina/chain/common"
	"github.com/Tinachain/Tina/chain/core/types"
)

// BokerNodeABI is the input ABI used to generate the binding from.
const BokerNodeABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getCandidates\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"tickets\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"rotateVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"tickTimeout\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cName\",\"type\":\"string\"}],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"registerCandidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"}],\"name\":\"cancelAllVotes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bokerManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"checkVote\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"getCandidate\",\"outputs\":[{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"tickets\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBlacks\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigInt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVoteRound\",\"outputs\":[{\"name\":\"round\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// BokerNodeBin is the compiled bytecode used for deploying new contracts.
const BokerNodeBin = `60806040526040805190810160405280600581526020017f312e302e3100000000000000000000000000000000000000000000000000000081525060019080519060200190620000519291906200024b565b50426002553480156200006357600080fd5b506040516020806200376e8339810180604052810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000e281620000ea640100000000026401000000009004565b5050620002fa565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200015457600080fd5b505af115801562000169573d6000803e3d6000fd5b505050506040513d60208110156200018057600080fd5b8101908080519060200190929190505050151562000206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028e57805160ff1916838001178555620002bf565b82800160010185558215620002bf579182015b82811115620002be578251825591602001919060010190620002a1565b5b509050620002ce9190620002d2565b5090565b620002f791905b80821115620002f3576000816000905550600101620002d9565b5090565b90565b613464806200030a6000396000f300608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306a49fce1461010c57806311070fcd146101c0578063156bf9ba146101d75780631eb726af146101ee57806321b3f52814610297578063281c231b14610322578063378298bc1461036557806354fd4d501461044757806361dcd7ab146104d757806366ebc1c6146105025780638da5cb5b14610559578063b0417e98146105b0578063b7adcf1d146105df578063d0ebdbe71461077a578063d38ff7a1146107bd578063d43c802114610829578063efa5d431146108a6578063f050757314610913578063f2fde38b1461093e575b600080fd5b34801561011857600080fd5b50610121610981565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561016857808201518184015260208101905061014d565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156101aa57808201518184015260208101905061018f565b5050505090500194505050505060405180910390f35b3480156101cc57600080fd5b506101d5610b0d565b005b3480156101e357600080fd5b506101ec610cde565b005b3480156101fa57600080fd5b50610255600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610d99565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102a357600080fd5b50610320600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001919091929391929390803590602001908201803590602001919091929391929390803590602001908201803590602001919091929391929390505050611047565b005b34801561032e57600080fd5b50610363600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061124b565b005b34801561037157600080fd5b506103cc600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061163d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561040c5780820151818401526020810190506103f1565b50505050905090810190601f1680156104395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045357600080fd5b5061045c6117cd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561049c578082015181840152602081019050610481565b50505050905090810190601f1680156104c95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104e357600080fd5b506104ec61186b565b6040518082815260200191505060405180910390f35b34801561050e57600080fd5b50610517611871565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561056557600080fd5b5061056e611897565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105bc57600080fd5b506105c56118bc565b604051808215151515815260200191505060405180910390f35b3480156105eb57600080fd5b50610620600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118dd565b60405180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b8381101561066e578082015181840152602081019050610653565b50505050905090810190601f16801561069b5780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156106d45780820151818401526020810190506106b9565b50505050905090810190601f1680156107015780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b8381101561073a57808201518184015260208101905061071f565b50505050905090810190601f1680156107675780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561078657600080fd5b506107bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b07565b005b3480156107c957600080fd5b506107d2611b6e565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108155780820151818401526020810190506107fa565b505050509050019250505060405180910390f35b34801561083557600080fd5b50610890600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611ca7565b6040518082815260200191505060405180910390f35b3480156108b257600080fd5b50610911600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611de1565b005b34801561091f57600080fd5b50610928612443565b6040518082815260200191505060405180910390f35b34801561094a57600080fd5b5061097f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612526565b005b6060806109c26040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b73ffffffffffffffffffffffffffffffffffffffff166306a49fce6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610a2557600080fd5b505af1158015610a39573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506040811015610a6357600080fd5b810190808051640100000000811115610a7b57600080fd5b82810190506020810184811115610a9157600080fd5b8151856020820283011164010000000082111715610aae57600080fd5b50509291906020018051640100000000811115610aca57600080fd5b82810190506020810184811115610ae057600080fd5b8151856020820283011164010000000082111715610afd57600080fd5b5050929190505050915091509091565b600080610b1861258d565b1515610b2357610cda565b610b2b6126c8565b610b696040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b91508173ffffffffffffffffffffffffffffffffffffffff166365fc42ce6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610bcf57600080fd5b505af1158015610be3573d6000803e3d6000fd5b505050506040513d6020811015610bf957600080fd5b81019080805190602001909291905050509050610c14612c4b565b50610c536040805190810160405280600881526020017f426f6b65724c6f67000000000000000000000000000000000000000000000000815250610d99565b73ffffffffffffffffffffffffffffffffffffffff1663c7de6c91826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015610cc157600080fd5b505af1158015610cd5573d6000803e3d6000fd5b505050505b5050565b610d1c6040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b73ffffffffffffffffffffffffffffffffffffffff1663156bf9ba6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610d7f57600080fd5b505af1158015610d93573d6000803e3d6000fd5b50505050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fca1f3c1846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e46578082015181840152602081019050610e2b565b50505050905090810190601f168015610e735780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b158015610e9257600080fd5b505af1158015610ea6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060a0811015610ed057600080fd5b81019080805190602001909291908051640100000000811115610ef257600080fd5b82810190506020810184811115610f0857600080fd5b8151856001820283011164010000000082111715610f2557600080fd5b5050929190602001805190602001909291908051640100000000811115610f4b57600080fd5b82810190506020810184811115610f6157600080fd5b8151856001820283011164010000000082111715610f7e57600080fd5b505092919060200180519060200190929190505050505092505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561103e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f616464722069732030210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16141515156110ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6164647243616e6469646174652069732030000000000000000000000000000081525060200191505060405180910390fd5b61112a6040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b73ffffffffffffffffffffffffffffffffffffffff16630df7afab888888888888886040518863ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018060200184810384528a8a82818152602001925080828437820191505084810383528888828181526020019250808284378201915050848103825286868281815260200192508082843782019150509a5050505050505050505050600060405180830381600087803b15801561122a57600080fd5b505af115801561123e573d6000803e3d6000fd5b5050505050505050505050565b60006060806000806112916040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b94508473ffffffffffffffffffffffffffffffffffffffff1663dc1e30da876040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561132e57600080fd5b505af1158015611342573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250608081101561136c57600080fd5b81019080805164010000000081111561138457600080fd5b8281019050602081018481111561139a57600080fd5b81518560208202830111640100000000821117156113b757600080fd5b505092919060200180516401000000008111156113d357600080fd5b828101905060208101848111156113e957600080fd5b815185602082028301116401000000008211171561140657600080fd5b505092919060200180519060200190929190805190602001909291905050509350935093509350611438868585612ef9565b8473ffffffffffffffffffffffffffffffffffffffff1663c90f008a8760006040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156114dc57600080fd5b505af11580156114f0573d6000803e3d6000fd5b505050506115326040805190810160405280600881526020017f426f6b65724c6f67000000000000000000000000000000000000000000000000815250610d99565b73ffffffffffffffffffffffffffffffffffffffff1663e7f218f28760006001600281111561155d57fe5b856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001945050505050600060405180830381600087803b15801561161d57600080fd5b505af1158015611631573d6000803e3d6000fd5b50505050505050505050565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634a189f35836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116e95780820151818401526020810190506116ce565b50505050905090810190601f1680156117165780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561173557600080fd5b505af1158015611749573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561177357600080fd5b81019080805164010000000081111561178b57600080fd5b828101905060208101848111156117a157600080fd5b81518560018202830111640100000000821117156117be57600080fd5b50509291905050509050919050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118635780601f1061183857610100808354040283529160200191611863565b820191906000526020600020905b81548152906001019060200180831161184657829003601f168201915b505050505081565b60025481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006118c661258d565b15156118d557600090506118da565b600190505b90565b606080606060006119226040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b73ffffffffffffffffffffffffffffffffffffffff1663b7adcf1d866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156119bc57600080fd5b505af11580156119d0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060808110156119fa57600080fd5b810190808051640100000000811115611a1257600080fd5b82810190506020810184811115611a2857600080fd5b8151856001820283011164010000000082111715611a4557600080fd5b50509291906020018051640100000000811115611a6157600080fd5b82810190506020810184811115611a7757600080fd5b8151856001820283011164010000000082111715611a9457600080fd5b50509291906020018051640100000000811115611ab057600080fd5b82810190506020810184811115611ac657600080fd5b8151856001820283011164010000000082111715611ae357600080fd5b50509291906020018051906020019092919050505093509350935093509193509193565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b6257600080fd5b611b6b81613139565b50565b6060611bae6040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b73ffffffffffffffffffffffffffffffffffffffff1663d38ff7a16040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015611c1157600080fd5b505af1158015611c25573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015611c4f57600080fd5b810190808051640100000000811115611c6757600080fd5b82810190506020810184811115611c7d57600080fd5b8151856020820283011164010000000082111715611c9a57600080fd5b5050929190505050905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633230b078836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d53578082015181840152602081019050611d38565b50505050905090810190601f168015611d805780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015611d9f57600080fd5b505af1158015611db3573d6000803e3d6000fd5b505050506040513d6020811015611dc957600080fd5b81019080805190602001909291905050509050919050565b6000611e216040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b90508073ffffffffffffffffffffffffffffffffffffffff166317132a0f846040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015611ebe57600080fd5b505af1158015611ed2573d6000803e3d6000fd5b505050506040513d6020811015611ee857600080fd5b81019080805190602001909291905050501515611f6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6164647243616e646964617465206e6f7420666f756e6421000000000000000081525060200191505060405180910390fd5b600082111515611fe5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f746f6b656e73203c3d203021000000000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663424b0baf85846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561208857600080fd5b505af115801561209c573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16630c9f51088585856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561217757600080fd5b505af115801561218b573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16639814be53856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561222a57600080fd5b505af115801561223e573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16633e26a5a984846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156122e557600080fd5b505af11580156122f9573d6000803e3d6000fd5b5050505061233b6040805190810160405280600881526020017f426f6b65724c6f67000000000000000000000000000000000000000000000000815250610d99565b73ffffffffffffffffffffffffffffffffffffffff1663e7f218f285856000600281111561236557fe5b866040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001945050505050600060405180830381600087803b15801561242557600080fd5b505af1158015612439573d6000803e3d6000fd5b5050505050505050565b60006124836040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b73ffffffffffffffffffffffffffffffffffffffff166365fc42ce6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156124e657600080fd5b505af11580156124fa573d6000803e3d6000fd5b505050506040513d602081101561251057600080fd5b8101908080519060200190929190505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561258157600080fd5b61258a81613296565b50565b6000806125ce6040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b90504261260f6040805190810160405280600f81526020017f566f74654379636c65506572696f640000000000000000000000000000000000815250611ca7565b8273ffffffffffffffffffffffffffffffffffffffff1663b9c25a6d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561267357600080fd5b505af1158015612687573d6000803e3d6000fd5b505050506040513d602081101561269d57600080fd5b8101908080519060200190929190505050011115156126bf57600191506126c4565b600091505b5090565b6000606060008060006060806000806127156040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b98508873ffffffffffffffffffffffffffffffffffffffff1663cdd722536040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561277b57600080fd5b505af115801561278f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156127b957600080fd5b8101908080516401000000008111156127d157600080fd5b828101905060208101848111156127e757600080fd5b815185602082028301116401000000008211171561280457600080fd5b5050929190505050975087519650600095505b86861015612c4057878681518110151561282d57fe5b9060200190602002015194508873ffffffffffffffffffffffffffffffffffffffff1663dc1e30da866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156128d457600080fd5b505af11580156128e8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250608081101561291257600080fd5b81019080805164010000000081111561292a57600080fd5b8281019050602081018481111561294057600080fd5b815185602082028301116401000000008211171561295d57600080fd5b5050929190602001805164010000000081111561297957600080fd5b8281019050602081018481111561298f57600080fd5b81518560208202830111640100000000821117156129ac57600080fd5b505092919060200180519060200190929190805190602001909291905050509350935093509350612a116040805190810160405280601381526020017f566f7465556e6c6f636b507265636973696f6e00000000000000000000000000815250611ca7565b612a24428461339090919063ffffffff16565b111515612c3357612a36858585612ef9565b8873ffffffffffffffffffffffffffffffffffffffff1663c90f008a8660006040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015612ada57600080fd5b505af1158015612aee573d6000803e3d6000fd5b50505050612b306040805190810160405280600881526020017f426f6b65724c6f67000000000000000000000000000000000000000000000000815250610d99565b73ffffffffffffffffffffffffffffffffffffffff1663e7f218f2866000600280811115612b5a57fe5b856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001945050505050600060405180830381600087803b158015612c1a57600080fd5b505af1158015612c2e573d6000803e3d6000fd5b505050505b8580600101965050612817565b505050505050505050565b6000806000806000612c916040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b93508373ffffffffffffffffffffffffffffffffffffffff1663b9c25a6d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612cf757600080fd5b505af1158015612d0b573d6000803e3d6000fd5b505050506040513d6020811015612d2157600080fd5b81019080805190602001909291905050509250612d726040805190810160405280600f81526020017f566f74654379636c65506572696f640000000000000000000000000000000000815250611ca7565b9150612d9982612d8b85426133b090919063ffffffff16565b6133c990919063ffffffff16565b90508373ffffffffffffffffffffffffffffffffffffffff1663e107f9ec612ddc612dcd85856133df90919063ffffffff16565b8661341a90919063ffffffff16565b6040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015612e2e57600080fd5b505af1158015612e42573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16639a5074a4826040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015612eb557600080fd5b505af1158015612ec9573d6000803e3d6000fd5b505050506040513d6020811015612edf57600080fd5b810190808051906020019092919050505094505050505090565b600080600080612f3d6040805190810160405280600d81526020017f426f6b65724e6f64654461746100000000000000000000000000000000000000815250610d99565b9350600092505b8551831015613130578583815181101515612f5b57fe5b9060200190602002015191508483815181101515612f7557fe5b9060200190602002015190508373ffffffffffffffffffffffffffffffffffffffff1663a7a6586a88846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561305057600080fd5b505af1158015613064573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663e13e6ffe83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561310b57600080fd5b505af115801561311f573d6000803e3d6000fd5b505050508280600101935050612f44565b50505050505050565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156131a257600080fd5b505af11580156131b6573d6000803e3d6000fd5b505050506040513d60208110156131cc57600080fd5b81019080805190602001909291905050501515613251576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156132d257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000818311156133a45781830390506133aa565b82820390505b92915050565b60008282111515156133be57fe5b818303905092915050565b600081838115156133d657fe5b04905092915050565b60008060008414156133f45760009150613413565b828402905082848281151561340557fe5b0414151561340f57fe5b8091505b5092915050565b600080828401905083811015151561342e57fe5b80915050929150505600a165627a7a723058207c638bbd7fb4d618af0fe5d839b322a0e1a995823fa6f8aff03fb53aa5d74c760029`

// DeployBokerNode deploys a new Ethereum contract, binding an instance of BokerNode to it.
func DeployBokerNode(auth *bind.TransactOpts, backend bind.ContractBackend, addrManager common.Address) (common.Address, *types.Transaction, *BokerNode, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerNodeABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BokerNodeBin), backend, addrManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BokerNode{BokerNodeCaller: BokerNodeCaller{contract: contract}, BokerNodeTransactor: BokerNodeTransactor{contract: contract}}, nil
}

// BokerNode is an auto generated Go binding around an Ethereum contract.
type BokerNode struct {
	BokerNodeCaller     // Read-only binding to the contract
	BokerNodeTransactor // Write-only binding to the contract
}

// BokerNodeCaller is an auto generated read-only Go binding around an Ethereum contract.
type BokerNodeCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerNodeTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BokerNodeTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerNodeSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BokerNodeSession struct {
	Contract     *BokerNode        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BokerNodeCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BokerNodeCallerSession struct {
	Contract *BokerNodeCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// BokerNodeTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BokerNodeTransactorSession struct {
	Contract     *BokerNodeTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// BokerNodeRaw is an auto generated low-level Go binding around an Ethereum contract.
type BokerNodeRaw struct {
	Contract *BokerNode // Generic contract binding to access the raw methods on
}

// BokerNodeCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BokerNodeCallerRaw struct {
	Contract *BokerNodeCaller // Generic read-only contract binding to access the raw methods on
}

// BokerNodeTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BokerNodeTransactorRaw struct {
	Contract *BokerNodeTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBokerNode creates a new instance of BokerNode, bound to a specific deployed contract.
func NewBokerNode(address common.Address, backend bind.ContractBackend) (*BokerNode, error) {
	contract, err := bindBokerNode(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BokerNode{BokerNodeCaller: BokerNodeCaller{contract: contract}, BokerNodeTransactor: BokerNodeTransactor{contract: contract}}, nil
}

// NewBokerNodeCaller creates a new read-only instance of BokerNode, bound to a specific deployed contract.
func NewBokerNodeCaller(address common.Address, caller bind.ContractCaller) (*BokerNodeCaller, error) {
	contract, err := bindBokerNode(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &BokerNodeCaller{contract: contract}, nil
}

// NewBokerNodeTransactor creates a new write-only instance of BokerNode, bound to a specific deployed contract.
func NewBokerNodeTransactor(address common.Address, transactor bind.ContractTransactor) (*BokerNodeTransactor, error) {
	contract, err := bindBokerNode(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &BokerNodeTransactor{contract: contract}, nil
}

// bindBokerNode binds a generic wrapper to an already deployed contract.
func bindBokerNode(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerNodeABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerNode *BokerNodeRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerNode.Contract.BokerNodeCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerNode *BokerNodeRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNode.Contract.BokerNodeTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerNode *BokerNodeRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerNode.Contract.BokerNodeTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerNode *BokerNodeCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerNode.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerNode *BokerNodeTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNode.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerNode *BokerNodeTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerNode.Contract.contract.Transact(opts, method, params...)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNode *BokerNodeCaller) BokerManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNode.contract.Call(opts, out, "bokerManager")
	return *ret0, err
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNode *BokerNodeSession) BokerManager() (common.Address, error) {
	return _BokerNode.Contract.BokerManager(&_BokerNode.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNode *BokerNodeCallerSession) BokerManager() (common.Address, error) {
	return _BokerNode.Contract.BokerManager(&_BokerNode.CallOpts)
}

// CheckVote is a free data retrieval call binding the contract method 0xb0417e98.
//
// Solidity: function checkVote() constant returns(bool)
func (_BokerNode *BokerNodeCaller) CheckVote(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BokerNode.contract.Call(opts, out, "checkVote")
	return *ret0, err
}

// CheckVote is a free data retrieval call binding the contract method 0xb0417e98.
//
// Solidity: function checkVote() constant returns(bool)
func (_BokerNode *BokerNodeSession) CheckVote() (bool, error) {
	return _BokerNode.Contract.CheckVote(&_BokerNode.CallOpts)
}

// CheckVote is a free data retrieval call binding the contract method 0xb0417e98.
//
// Solidity: function checkVote() constant returns(bool)
func (_BokerNode *BokerNodeCallerSession) CheckVote() (bool, error) {
	return _BokerNode.Contract.CheckVote(&_BokerNode.CallOpts)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNode *BokerNodeCaller) ContractAddress(opts *bind.CallOpts, cName string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNode.contract.Call(opts, out, "contractAddress", cName)
	return *ret0, err
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNode *BokerNodeSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerNode.Contract.ContractAddress(&_BokerNode.CallOpts, cName)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNode *BokerNodeCallerSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerNode.Contract.ContractAddress(&_BokerNode.CallOpts, cName)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNode *BokerNodeCaller) CreateTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNode.contract.Call(opts, out, "createTime")
	return *ret0, err
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNode *BokerNodeSession) CreateTime() (*big.Int, error) {
	return _BokerNode.Contract.CreateTime(&_BokerNode.CallOpts)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNode *BokerNodeCallerSession) CreateTime() (*big.Int, error) {
	return _BokerNode.Contract.CreateTime(&_BokerNode.CallOpts)
}

// GetBlacks is a free data retrieval call binding the contract method 0xd38ff7a1.
//
// Solidity: function getBlacks() constant returns(addresses address[])
func (_BokerNode *BokerNodeCaller) GetBlacks(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _BokerNode.contract.Call(opts, out, "getBlacks")
	return *ret0, err
}

// GetBlacks is a free data retrieval call binding the contract method 0xd38ff7a1.
//
// Solidity: function getBlacks() constant returns(addresses address[])
func (_BokerNode *BokerNodeSession) GetBlacks() ([]common.Address, error) {
	return _BokerNode.Contract.GetBlacks(&_BokerNode.CallOpts)
}

// GetBlacks is a free data retrieval call binding the contract method 0xd38ff7a1.
//
// Solidity: function getBlacks() constant returns(addresses address[])
func (_BokerNode *BokerNodeCallerSession) GetBlacks() ([]common.Address, error) {
	return _BokerNode.Contract.GetBlacks(&_BokerNode.CallOpts)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNode *BokerNodeCaller) GetCandidate(opts *bind.CallOpts, addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	ret := new(struct {
		Description string
		Team        string
		Name        string
		Tickets     *big.Int
	})
	out := ret
	err := _BokerNode.contract.Call(opts, out, "getCandidate", addrCandidate)
	return *ret, err
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNode *BokerNodeSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerNode.Contract.GetCandidate(&_BokerNode.CallOpts, addrCandidate)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNode *BokerNodeCallerSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerNode.Contract.GetCandidate(&_BokerNode.CallOpts, addrCandidate)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNode *BokerNodeCaller) GetCandidates(opts *bind.CallOpts) (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	ret := new(struct {
		Addresses []common.Address
		Tickets   []*big.Int
	})
	out := ret
	err := _BokerNode.contract.Call(opts, out, "getCandidates")
	return *ret, err
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNode *BokerNodeSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerNode.Contract.GetCandidates(&_BokerNode.CallOpts)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNode *BokerNodeCallerSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerNode.Contract.GetCandidates(&_BokerNode.CallOpts)
}

// GetVoteRound is a free data retrieval call binding the contract method 0xf0507573.
//
// Solidity: function getVoteRound() constant returns(round uint256)
func (_BokerNode *BokerNodeCaller) GetVoteRound(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNode.contract.Call(opts, out, "getVoteRound")
	return *ret0, err
}

// GetVoteRound is a free data retrieval call binding the contract method 0xf0507573.
//
// Solidity: function getVoteRound() constant returns(round uint256)
func (_BokerNode *BokerNodeSession) GetVoteRound() (*big.Int, error) {
	return _BokerNode.Contract.GetVoteRound(&_BokerNode.CallOpts)
}

// GetVoteRound is a free data retrieval call binding the contract method 0xf0507573.
//
// Solidity: function getVoteRound() constant returns(round uint256)
func (_BokerNode *BokerNodeCallerSession) GetVoteRound() (*big.Int, error) {
	return _BokerNode.Contract.GetVoteRound(&_BokerNode.CallOpts)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNode *BokerNodeCaller) GlobalConfigInt(opts *bind.CallOpts, key string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNode.contract.Call(opts, out, "globalConfigInt", key)
	return *ret0, err
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNode *BokerNodeSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerNode.Contract.GlobalConfigInt(&_BokerNode.CallOpts, key)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNode *BokerNodeCallerSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerNode.Contract.GlobalConfigInt(&_BokerNode.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNode *BokerNodeCaller) GlobalConfigString(opts *bind.CallOpts, key string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerNode.contract.Call(opts, out, "globalConfigString", key)
	return *ret0, err
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNode *BokerNodeSession) GlobalConfigString(key string) (string, error) {
	return _BokerNode.Contract.GlobalConfigString(&_BokerNode.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNode *BokerNodeCallerSession) GlobalConfigString(key string) (string, error) {
	return _BokerNode.Contract.GlobalConfigString(&_BokerNode.CallOpts, key)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNode *BokerNodeCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNode.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNode *BokerNodeSession) Owner() (common.Address, error) {
	return _BokerNode.Contract.Owner(&_BokerNode.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNode *BokerNodeCallerSession) Owner() (common.Address, error) {
	return _BokerNode.Contract.Owner(&_BokerNode.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNode *BokerNodeCaller) Version(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerNode.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNode *BokerNodeSession) Version() (string, error) {
	return _BokerNode.Contract.Version(&_BokerNode.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNode *BokerNodeCallerSession) Version() (string, error) {
	return _BokerNode.Contract.Version(&_BokerNode.CallOpts)
}

// CancelAllVotes is a paid mutator transaction binding the contract method 0x281c231b.
//
// Solidity: function cancelAllVotes(addrVoter address) returns()
func (_BokerNode *BokerNodeTransactor) CancelAllVotes(opts *bind.TransactOpts, addrVoter common.Address) (*types.Transaction, error) {
	return _BokerNode.contract.Transact(opts, "cancelAllVotes", addrVoter)
}

// CancelAllVotes is a paid mutator transaction binding the contract method 0x281c231b.
//
// Solidity: function cancelAllVotes(addrVoter address) returns()
func (_BokerNode *BokerNodeSession) CancelAllVotes(addrVoter common.Address) (*types.Transaction, error) {
	return _BokerNode.Contract.CancelAllVotes(&_BokerNode.TransactOpts, addrVoter)
}

// CancelAllVotes is a paid mutator transaction binding the contract method 0x281c231b.
//
// Solidity: function cancelAllVotes(addrVoter address) returns()
func (_BokerNode *BokerNodeTransactorSession) CancelAllVotes(addrVoter common.Address) (*types.Transaction, error) {
	return _BokerNode.Contract.CancelAllVotes(&_BokerNode.TransactOpts, addrVoter)
}

// RegisterCandidate is a paid mutator transaction binding the contract method 0x21b3f528.
//
// Solidity: function registerCandidate(addrCandidate address, description string, team string, name string) returns()
func (_BokerNode *BokerNodeTransactor) RegisterCandidate(opts *bind.TransactOpts, addrCandidate common.Address, description string, team string, name string) (*types.Transaction, error) {
	return _BokerNode.contract.Transact(opts, "registerCandidate", addrCandidate, description, team, name)
}

// RegisterCandidate is a paid mutator transaction binding the contract method 0x21b3f528.
//
// Solidity: function registerCandidate(addrCandidate address, description string, team string, name string) returns()
func (_BokerNode *BokerNodeSession) RegisterCandidate(addrCandidate common.Address, description string, team string, name string) (*types.Transaction, error) {
	return _BokerNode.Contract.RegisterCandidate(&_BokerNode.TransactOpts, addrCandidate, description, team, name)
}

// RegisterCandidate is a paid mutator transaction binding the contract method 0x21b3f528.
//
// Solidity: function registerCandidate(addrCandidate address, description string, team string, name string) returns()
func (_BokerNode *BokerNodeTransactorSession) RegisterCandidate(addrCandidate common.Address, description string, team string, name string) (*types.Transaction, error) {
	return _BokerNode.Contract.RegisterCandidate(&_BokerNode.TransactOpts, addrCandidate, description, team, name)
}

// RotateVote is a paid mutator transaction binding the contract method 0x11070fcd.
//
// Solidity: function rotateVote() returns()
func (_BokerNode *BokerNodeTransactor) RotateVote(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNode.contract.Transact(opts, "rotateVote")
}

// RotateVote is a paid mutator transaction binding the contract method 0x11070fcd.
//
// Solidity: function rotateVote() returns()
func (_BokerNode *BokerNodeSession) RotateVote() (*types.Transaction, error) {
	return _BokerNode.Contract.RotateVote(&_BokerNode.TransactOpts)
}

// RotateVote is a paid mutator transaction binding the contract method 0x11070fcd.
//
// Solidity: function rotateVote() returns()
func (_BokerNode *BokerNodeTransactorSession) RotateVote() (*types.Transaction, error) {
	return _BokerNode.Contract.RotateVote(&_BokerNode.TransactOpts)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNode *BokerNodeTransactor) SetManager(opts *bind.TransactOpts, addrManager common.Address) (*types.Transaction, error) {
	return _BokerNode.contract.Transact(opts, "setManager", addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNode *BokerNodeSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerNode.Contract.SetManager(&_BokerNode.TransactOpts, addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNode *BokerNodeTransactorSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerNode.Contract.SetManager(&_BokerNode.TransactOpts, addrManager)
}

// TickTimeout is a paid mutator transaction binding the contract method 0x156bf9ba.
//
// Solidity: function tickTimeout() returns()
func (_BokerNode *BokerNodeTransactor) TickTimeout(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNode.contract.Transact(opts, "tickTimeout")
}

// TickTimeout is a paid mutator transaction binding the contract method 0x156bf9ba.
//
// Solidity: function tickTimeout() returns()
func (_BokerNode *BokerNodeSession) TickTimeout() (*types.Transaction, error) {
	return _BokerNode.Contract.TickTimeout(&_BokerNode.TransactOpts)
}

// TickTimeout is a paid mutator transaction binding the contract method 0x156bf9ba.
//
// Solidity: function tickTimeout() returns()
func (_BokerNode *BokerNodeTransactorSession) TickTimeout() (*types.Transaction, error) {
	return _BokerNode.Contract.TickTimeout(&_BokerNode.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNode *BokerNodeTransactor) TransferOwnership(opts *bind.TransactOpts, _newOwner common.Address) (*types.Transaction, error) {
	return _BokerNode.contract.Transact(opts, "transferOwnership", _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNode *BokerNodeSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerNode.Contract.TransferOwnership(&_BokerNode.TransactOpts, _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNode *BokerNodeTransactorSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerNode.Contract.TransferOwnership(&_BokerNode.TransactOpts, _newOwner)
}

// Vote is a paid mutator transaction binding the contract method 0xefa5d431.
//
// Solidity: function vote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNode *BokerNodeTransactor) Vote(opts *bind.TransactOpts, addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNode.contract.Transact(opts, "vote", addrVoter, addrCandidate, tokens)
}

// Vote is a paid mutator transaction binding the contract method 0xefa5d431.
//
// Solidity: function vote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNode *BokerNodeSession) Vote(addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNode.Contract.Vote(&_BokerNode.TransactOpts, addrVoter, addrCandidate, tokens)
}

// Vote is a paid mutator transaction binding the contract method 0xefa5d431.
//
// Solidity: function vote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNode *BokerNodeTransactorSession) Vote(addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNode.Contract.Vote(&_BokerNode.TransactOpts, addrVoter, addrCandidate, tokens)
}
