// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package boker_contract

import (
	"math/big"
	"strings"

	"github.com/Tinachain/Tina/chain/accounts/abi"
	"github.com/Tinachain/Tina/chain/accounts/abi/bind"
	"github.com/Tinachain/Tina/chain/common"
	"github.com/Tinachain/Tina/chain/core/types"
)

// BokerNodeDataABI is the input ABI used to generate the binding from.
const BokerNodeDataABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getCandidates\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"tickets\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"increaseVoterVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"addCandidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"existCandidate\",\"outputs\":[{\"name\":\"exist\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cName\",\"type\":\"string\"}],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidateArray\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"increaseCandidateTicket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"increaseVoterDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"voteCycleRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bokerManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"candidates\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"tickets\",\"type\":\"uint256\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"}],\"name\":\"updateVoterUnlockTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"roundAdd\",\"type\":\"uint256\"}],\"name\":\"increaseVoteCycleRound\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"deposit\",\"type\":\"uint256\"},{\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"clearVoterVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"getCandidate\",\"outputs\":[{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"tickets\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"voteCycleBegin\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voterArray\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setVoterDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVoters\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigInt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrVoter\",\"type\":\"address\"}],\"name\":\"getVoteInfo\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"tickets\",\"type\":\"uint256[]\"},{\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"name\":\"deposit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setVoteCycleBegin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseCandidateTicket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// BokerNodeDataBin is the compiled bytecode used for deploying new contracts.
const BokerNodeDataBin = ``

// DeployBokerNodeData deploys a new Ethereum contract, binding an instance of BokerNodeData to it.
func DeployBokerNodeData(auth *bind.TransactOpts, backend bind.ContractBackend, addrManager common.Address) (common.Address, *types.Transaction, *BokerNodeData, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerNodeDataABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BokerNodeDataBin), backend, addrManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BokerNodeData{BokerNodeDataCaller: BokerNodeDataCaller{contract: contract}, BokerNodeDataTransactor: BokerNodeDataTransactor{contract: contract}}, nil
}

// BokerNodeData is an auto generated Go binding around an Ethereum contract.
type BokerNodeData struct {
	BokerNodeDataCaller     // Read-only binding to the contract
	BokerNodeDataTransactor // Write-only binding to the contract
}

// BokerNodeDataCaller is an auto generated read-only Go binding around an Ethereum contract.
type BokerNodeDataCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerNodeDataTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BokerNodeDataTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerNodeDataSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BokerNodeDataSession struct {
	Contract     *BokerNodeData    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BokerNodeDataCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BokerNodeDataCallerSession struct {
	Contract *BokerNodeDataCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// BokerNodeDataTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BokerNodeDataTransactorSession struct {
	Contract     *BokerNodeDataTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// BokerNodeDataRaw is an auto generated low-level Go binding around an Ethereum contract.
type BokerNodeDataRaw struct {
	Contract *BokerNodeData // Generic contract binding to access the raw methods on
}

// BokerNodeDataCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BokerNodeDataCallerRaw struct {
	Contract *BokerNodeDataCaller // Generic read-only contract binding to access the raw methods on
}

// BokerNodeDataTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BokerNodeDataTransactorRaw struct {
	Contract *BokerNodeDataTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBokerNodeData creates a new instance of BokerNodeData, bound to a specific deployed contract.
func NewBokerNodeData(address common.Address, backend bind.ContractBackend) (*BokerNodeData, error) {
	contract, err := bindBokerNodeData(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BokerNodeData{BokerNodeDataCaller: BokerNodeDataCaller{contract: contract}, BokerNodeDataTransactor: BokerNodeDataTransactor{contract: contract}}, nil
}

// NewBokerNodeDataCaller creates a new read-only instance of BokerNodeData, bound to a specific deployed contract.
func NewBokerNodeDataCaller(address common.Address, caller bind.ContractCaller) (*BokerNodeDataCaller, error) {
	contract, err := bindBokerNodeData(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &BokerNodeDataCaller{contract: contract}, nil
}

// NewBokerNodeDataTransactor creates a new write-only instance of BokerNodeData, bound to a specific deployed contract.
func NewBokerNodeDataTransactor(address common.Address, transactor bind.ContractTransactor) (*BokerNodeDataTransactor, error) {
	contract, err := bindBokerNodeData(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &BokerNodeDataTransactor{contract: contract}, nil
}

// bindBokerNodeData binds a generic wrapper to an already deployed contract.
func bindBokerNodeData(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerNodeDataABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerNodeData *BokerNodeDataRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerNodeData.Contract.BokerNodeDataCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerNodeData *BokerNodeDataRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNodeData.Contract.BokerNodeDataTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerNodeData *BokerNodeDataRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerNodeData.Contract.BokerNodeDataTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerNodeData *BokerNodeDataCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerNodeData.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerNodeData *BokerNodeDataTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerNodeData.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerNodeData *BokerNodeDataTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerNodeData.Contract.contract.Transact(opts, method, params...)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) BokerManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "bokerManager")
	return *ret0, err
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) BokerManager() (common.Address, error) {
	return _BokerNodeData.Contract.BokerManager(&_BokerNodeData.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) BokerManager() (common.Address, error) {
	return _BokerNodeData.Contract.BokerManager(&_BokerNodeData.CallOpts)
}

// CandidateArray is a free data retrieval call binding the contract method 0x35a893a1.
//
// Solidity: function candidateArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) CandidateArray(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "candidateArray", arg0)
	return *ret0, err
}

// CandidateArray is a free data retrieval call binding the contract method 0x35a893a1.
//
// Solidity: function candidateArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) CandidateArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.CandidateArray(&_BokerNodeData.CallOpts, arg0)
}

// CandidateArray is a free data retrieval call binding the contract method 0x35a893a1.
//
// Solidity: function candidateArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) CandidateArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.CandidateArray(&_BokerNodeData.CallOpts, arg0)
}

// Candidates is a free data retrieval call binding the contract method 0x8ab66a90.
//
// Solidity: function candidates( address) constant returns(addr address, index uint256, tickets uint256, description string, team string, name string)
func (_BokerNodeData *BokerNodeDataCaller) Candidates(opts *bind.CallOpts, arg0 common.Address) (struct {
	Addr        common.Address
	Index       *big.Int
	Tickets     *big.Int
	Description string
	Team        string
	Name        string
}, error) {
	ret := new(struct {
		Addr        common.Address
		Index       *big.Int
		Tickets     *big.Int
		Description string
		Team        string
		Name        string
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "candidates", arg0)
	return *ret, err
}

// Candidates is a free data retrieval call binding the contract method 0x8ab66a90.
//
// Solidity: function candidates( address) constant returns(addr address, index uint256, tickets uint256, description string, team string, name string)
func (_BokerNodeData *BokerNodeDataSession) Candidates(arg0 common.Address) (struct {
	Addr        common.Address
	Index       *big.Int
	Tickets     *big.Int
	Description string
	Team        string
	Name        string
}, error) {
	return _BokerNodeData.Contract.Candidates(&_BokerNodeData.CallOpts, arg0)
}

// Candidates is a free data retrieval call binding the contract method 0x8ab66a90.
//
// Solidity: function candidates( address) constant returns(addr address, index uint256, tickets uint256, description string, team string, name string)
func (_BokerNodeData *BokerNodeDataCallerSession) Candidates(arg0 common.Address) (struct {
	Addr        common.Address
	Index       *big.Int
	Tickets     *big.Int
	Description string
	Team        string
	Name        string
}, error) {
	return _BokerNodeData.Contract.Candidates(&_BokerNodeData.CallOpts, arg0)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) ContractAddress(opts *bind.CallOpts, cName string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "contractAddress", cName)
	return *ret0, err
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerNodeData.Contract.ContractAddress(&_BokerNodeData.CallOpts, cName)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerNodeData.Contract.ContractAddress(&_BokerNodeData.CallOpts, cName)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCaller) CreateTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "createTime")
	return *ret0, err
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) CreateTime() (*big.Int, error) {
	return _BokerNodeData.Contract.CreateTime(&_BokerNodeData.CallOpts)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) CreateTime() (*big.Int, error) {
	return _BokerNodeData.Contract.CreateTime(&_BokerNodeData.CallOpts)
}

// ExistCandidate is a free data retrieval call binding the contract method 0x17132a0f.
//
// Solidity: function existCandidate(addrCandidate address) constant returns(exist bool)
func (_BokerNodeData *BokerNodeDataCaller) ExistCandidate(opts *bind.CallOpts, addrCandidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "existCandidate", addrCandidate)
	return *ret0, err
}

// ExistCandidate is a free data retrieval call binding the contract method 0x17132a0f.
//
// Solidity: function existCandidate(addrCandidate address) constant returns(exist bool)
func (_BokerNodeData *BokerNodeDataSession) ExistCandidate(addrCandidate common.Address) (bool, error) {
	return _BokerNodeData.Contract.ExistCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// ExistCandidate is a free data retrieval call binding the contract method 0x17132a0f.
//
// Solidity: function existCandidate(addrCandidate address) constant returns(exist bool)
func (_BokerNodeData *BokerNodeDataCallerSession) ExistCandidate(addrCandidate common.Address) (bool, error) {
	return _BokerNodeData.Contract.ExistCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNodeData *BokerNodeDataCaller) GetCandidate(opts *bind.CallOpts, addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	ret := new(struct {
		Description string
		Team        string
		Name        string
		Tickets     *big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "getCandidate", addrCandidate)
	return *ret, err
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNodeData *BokerNodeDataSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidate(&_BokerNodeData.CallOpts, addrCandidate)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNodeData *BokerNodeDataCaller) GetCandidates(opts *bind.CallOpts) (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	ret := new(struct {
		Addresses []common.Address
		Tickets   []*big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "getCandidates")
	return *ret, err
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNodeData *BokerNodeDataSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidates(&_BokerNodeData.CallOpts)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerNodeData *BokerNodeDataCallerSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerNodeData.Contract.GetCandidates(&_BokerNodeData.CallOpts)
}

// GetVoteInfo is a free data retrieval call binding the contract method 0xdc1e30da.
//
// Solidity: function getVoteInfo(addrVoter address) constant returns(addresses address[], tickets uint256[], unlockTime uint256, deposit uint256)
func (_BokerNodeData *BokerNodeDataCaller) GetVoteInfo(opts *bind.CallOpts, addrVoter common.Address) (struct {
	Addresses  []common.Address
	Tickets    []*big.Int
	UnlockTime *big.Int
	Deposit    *big.Int
}, error) {
	ret := new(struct {
		Addresses  []common.Address
		Tickets    []*big.Int
		UnlockTime *big.Int
		Deposit    *big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "getVoteInfo", addrVoter)
	return *ret, err
}

// GetVoteInfo is a free data retrieval call binding the contract method 0xdc1e30da.
//
// Solidity: function getVoteInfo(addrVoter address) constant returns(addresses address[], tickets uint256[], unlockTime uint256, deposit uint256)
func (_BokerNodeData *BokerNodeDataSession) GetVoteInfo(addrVoter common.Address) (struct {
	Addresses  []common.Address
	Tickets    []*big.Int
	UnlockTime *big.Int
	Deposit    *big.Int
}, error) {
	return _BokerNodeData.Contract.GetVoteInfo(&_BokerNodeData.CallOpts, addrVoter)
}

// GetVoteInfo is a free data retrieval call binding the contract method 0xdc1e30da.
//
// Solidity: function getVoteInfo(addrVoter address) constant returns(addresses address[], tickets uint256[], unlockTime uint256, deposit uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) GetVoteInfo(addrVoter common.Address) (struct {
	Addresses  []common.Address
	Tickets    []*big.Int
	UnlockTime *big.Int
	Deposit    *big.Int
}, error) {
	return _BokerNodeData.Contract.GetVoteInfo(&_BokerNodeData.CallOpts, addrVoter)
}

// GetVoters is a free data retrieval call binding the contract method 0xcdd72253.
//
// Solidity: function getVoters() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataCaller) GetVoters(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "getVoters")
	return *ret0, err
}

// GetVoters is a free data retrieval call binding the contract method 0xcdd72253.
//
// Solidity: function getVoters() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataSession) GetVoters() ([]common.Address, error) {
	return _BokerNodeData.Contract.GetVoters(&_BokerNodeData.CallOpts)
}

// GetVoters is a free data retrieval call binding the contract method 0xcdd72253.
//
// Solidity: function getVoters() constant returns(addresses address[])
func (_BokerNodeData *BokerNodeDataCallerSession) GetVoters() ([]common.Address, error) {
	return _BokerNodeData.Contract.GetVoters(&_BokerNodeData.CallOpts)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCaller) GlobalConfigInt(opts *bind.CallOpts, key string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "globalConfigInt", key)
	return *ret0, err
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerNodeData.Contract.GlobalConfigInt(&_BokerNodeData.CallOpts, key)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerNodeData.Contract.GlobalConfigInt(&_BokerNodeData.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNodeData *BokerNodeDataCaller) GlobalConfigString(opts *bind.CallOpts, key string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "globalConfigString", key)
	return *ret0, err
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNodeData *BokerNodeDataSession) GlobalConfigString(key string) (string, error) {
	return _BokerNodeData.Contract.GlobalConfigString(&_BokerNodeData.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerNodeData *BokerNodeDataCallerSession) GlobalConfigString(key string) (string, error) {
	return _BokerNodeData.Contract.GlobalConfigString(&_BokerNodeData.CallOpts, key)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) Owner() (common.Address, error) {
	return _BokerNodeData.Contract.Owner(&_BokerNodeData.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) Owner() (common.Address, error) {
	return _BokerNodeData.Contract.Owner(&_BokerNodeData.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNodeData *BokerNodeDataCaller) Version(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNodeData *BokerNodeDataSession) Version() (string, error) {
	return _BokerNodeData.Contract.Version(&_BokerNodeData.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerNodeData *BokerNodeDataCallerSession) Version() (string, error) {
	return _BokerNodeData.Contract.Version(&_BokerNodeData.CallOpts)
}

// VoteCycleBegin is a free data retrieval call binding the contract method 0xb9c25a6d.
//
// Solidity: function voteCycleBegin() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCaller) VoteCycleBegin(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "voteCycleBegin")
	return *ret0, err
}

// VoteCycleBegin is a free data retrieval call binding the contract method 0xb9c25a6d.
//
// Solidity: function voteCycleBegin() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) VoteCycleBegin() (*big.Int, error) {
	return _BokerNodeData.Contract.VoteCycleBegin(&_BokerNodeData.CallOpts)
}

// VoteCycleBegin is a free data retrieval call binding the contract method 0xb9c25a6d.
//
// Solidity: function voteCycleBegin() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) VoteCycleBegin() (*big.Int, error) {
	return _BokerNodeData.Contract.VoteCycleBegin(&_BokerNodeData.CallOpts)
}

// VoteCycleRound is a free data retrieval call binding the contract method 0x65fc42ce.
//
// Solidity: function voteCycleRound() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCaller) VoteCycleRound(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "voteCycleRound")
	return *ret0, err
}

// VoteCycleRound is a free data retrieval call binding the contract method 0x65fc42ce.
//
// Solidity: function voteCycleRound() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) VoteCycleRound() (*big.Int, error) {
	return _BokerNodeData.Contract.VoteCycleRound(&_BokerNodeData.CallOpts)
}

// VoteCycleRound is a free data retrieval call binding the contract method 0x65fc42ce.
//
// Solidity: function voteCycleRound() constant returns(uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) VoteCycleRound() (*big.Int, error) {
	return _BokerNodeData.Contract.VoteCycleRound(&_BokerNodeData.CallOpts)
}

// VoterArray is a free data retrieval call binding the contract method 0xc279919f.
//
// Solidity: function voterArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCaller) VoterArray(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerNodeData.contract.Call(opts, out, "voterArray", arg0)
	return *ret0, err
}

// VoterArray is a free data retrieval call binding the contract method 0xc279919f.
//
// Solidity: function voterArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataSession) VoterArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.VoterArray(&_BokerNodeData.CallOpts, arg0)
}

// VoterArray is a free data retrieval call binding the contract method 0xc279919f.
//
// Solidity: function voterArray( uint256) constant returns(address)
func (_BokerNodeData *BokerNodeDataCallerSession) VoterArray(arg0 *big.Int) (common.Address, error) {
	return _BokerNodeData.Contract.VoterArray(&_BokerNodeData.CallOpts, arg0)
}

// Voters is a free data retrieval call binding the contract method 0xa3ec138d.
//
// Solidity: function voters( address) constant returns(addr address, index uint256, deposit uint256, unlockTime uint256)
func (_BokerNodeData *BokerNodeDataCaller) Voters(opts *bind.CallOpts, arg0 common.Address) (struct {
	Addr       common.Address
	Index      *big.Int
	Deposit    *big.Int
	UnlockTime *big.Int
}, error) {
	ret := new(struct {
		Addr       common.Address
		Index      *big.Int
		Deposit    *big.Int
		UnlockTime *big.Int
	})
	out := ret
	err := _BokerNodeData.contract.Call(opts, out, "voters", arg0)
	return *ret, err
}

// Voters is a free data retrieval call binding the contract method 0xa3ec138d.
//
// Solidity: function voters( address) constant returns(addr address, index uint256, deposit uint256, unlockTime uint256)
func (_BokerNodeData *BokerNodeDataSession) Voters(arg0 common.Address) (struct {
	Addr       common.Address
	Index      *big.Int
	Deposit    *big.Int
	UnlockTime *big.Int
}, error) {
	return _BokerNodeData.Contract.Voters(&_BokerNodeData.CallOpts, arg0)
}

// Voters is a free data retrieval call binding the contract method 0xa3ec138d.
//
// Solidity: function voters( address) constant returns(addr address, index uint256, deposit uint256, unlockTime uint256)
func (_BokerNodeData *BokerNodeDataCallerSession) Voters(arg0 common.Address) (struct {
	Addr       common.Address
	Index      *big.Int
	Deposit    *big.Int
	UnlockTime *big.Int
}, error) {
	return _BokerNodeData.Contract.Voters(&_BokerNodeData.CallOpts, arg0)
}

// AddCandidate is a paid mutator transaction binding the contract method 0x0df7afab.
//
// Solidity: function addCandidate(addrCandidate address, description string, team string, name string) returns()
func (_BokerNodeData *BokerNodeDataTransactor) AddCandidate(opts *bind.TransactOpts, addrCandidate common.Address, description string, team string, name string) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "addCandidate", addrCandidate, description, team, name)
}

// AddCandidate is a paid mutator transaction binding the contract method 0x0df7afab.
//
// Solidity: function addCandidate(addrCandidate address, description string, team string, name string) returns()
func (_BokerNodeData *BokerNodeDataSession) AddCandidate(addrCandidate common.Address, description string, team string, name string) (*types.Transaction, error) {
	return _BokerNodeData.Contract.AddCandidate(&_BokerNodeData.TransactOpts, addrCandidate, description, team, name)
}

// AddCandidate is a paid mutator transaction binding the contract method 0x0df7afab.
//
// Solidity: function addCandidate(addrCandidate address, description string, team string, name string) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) AddCandidate(addrCandidate common.Address, description string, team string, name string) (*types.Transaction, error) {
	return _BokerNodeData.Contract.AddCandidate(&_BokerNodeData.TransactOpts, addrCandidate, description, team, name)
}

// ClearVoterVote is a paid mutator transaction binding the contract method 0xa7a6586a.
//
// Solidity: function clearVoterVote(addrVoter address, addrCandidate address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) ClearVoterVote(opts *bind.TransactOpts, addrVoter common.Address, addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "clearVoterVote", addrVoter, addrCandidate)
}

// ClearVoterVote is a paid mutator transaction binding the contract method 0xa7a6586a.
//
// Solidity: function clearVoterVote(addrVoter address, addrCandidate address) returns()
func (_BokerNodeData *BokerNodeDataSession) ClearVoterVote(addrVoter common.Address, addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.ClearVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate)
}

// ClearVoterVote is a paid mutator transaction binding the contract method 0xa7a6586a.
//
// Solidity: function clearVoterVote(addrVoter address, addrCandidate address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) ClearVoterVote(addrVoter common.Address, addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.ClearVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate)
}

// DecreaseCandidateTicket is a paid mutator transaction binding the contract method 0xe13e6ffe.
//
// Solidity: function decreaseCandidateTicket(addrCandidate address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) DecreaseCandidateTicket(opts *bind.TransactOpts, addrCandidate common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "decreaseCandidateTicket", addrCandidate, amount)
}

// DecreaseCandidateTicket is a paid mutator transaction binding the contract method 0xe13e6ffe.
//
// Solidity: function decreaseCandidateTicket(addrCandidate address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) DecreaseCandidateTicket(addrCandidate common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.DecreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, amount)
}

// DecreaseCandidateTicket is a paid mutator transaction binding the contract method 0xe13e6ffe.
//
// Solidity: function decreaseCandidateTicket(addrCandidate address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) DecreaseCandidateTicket(addrCandidate common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.DecreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, amount)
}

// IncreaseCandidateTicket is a paid mutator transaction binding the contract method 0x3e26a5a9.
//
// Solidity: function increaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) IncreaseCandidateTicket(opts *bind.TransactOpts, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "increaseCandidateTicket", addrCandidate, tokens)
}

// IncreaseCandidateTicket is a paid mutator transaction binding the contract method 0x3e26a5a9.
//
// Solidity: function increaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) IncreaseCandidateTicket(addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, tokens)
}

// IncreaseCandidateTicket is a paid mutator transaction binding the contract method 0x3e26a5a9.
//
// Solidity: function increaseCandidateTicket(addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) IncreaseCandidateTicket(addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseCandidateTicket(&_BokerNodeData.TransactOpts, addrCandidate, tokens)
}

// IncreaseVoteCycleRound is a paid mutator transaction binding the contract method 0x9a5074a4.
//
// Solidity: function increaseVoteCycleRound(roundAdd uint256) returns(uint256)
func (_BokerNodeData *BokerNodeDataTransactor) IncreaseVoteCycleRound(opts *bind.TransactOpts, roundAdd *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "increaseVoteCycleRound", roundAdd)
}

// IncreaseVoteCycleRound is a paid mutator transaction binding the contract method 0x9a5074a4.
//
// Solidity: function increaseVoteCycleRound(roundAdd uint256) returns(uint256)
func (_BokerNodeData *BokerNodeDataSession) IncreaseVoteCycleRound(roundAdd *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoteCycleRound(&_BokerNodeData.TransactOpts, roundAdd)
}

// IncreaseVoteCycleRound is a paid mutator transaction binding the contract method 0x9a5074a4.
//
// Solidity: function increaseVoteCycleRound(roundAdd uint256) returns(uint256)
func (_BokerNodeData *BokerNodeDataTransactorSession) IncreaseVoteCycleRound(roundAdd *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoteCycleRound(&_BokerNodeData.TransactOpts, roundAdd)
}

// IncreaseVoterDeposit is a paid mutator transaction binding the contract method 0x424b0baf.
//
// Solidity: function increaseVoterDeposit(addrVoter address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) IncreaseVoterDeposit(opts *bind.TransactOpts, addrVoter common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "increaseVoterDeposit", addrVoter, tokens)
}

// IncreaseVoterDeposit is a paid mutator transaction binding the contract method 0x424b0baf.
//
// Solidity: function increaseVoterDeposit(addrVoter address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) IncreaseVoterDeposit(addrVoter common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, tokens)
}

// IncreaseVoterDeposit is a paid mutator transaction binding the contract method 0x424b0baf.
//
// Solidity: function increaseVoterDeposit(addrVoter address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) IncreaseVoterDeposit(addrVoter common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, tokens)
}

// IncreaseVoterVote is a paid mutator transaction binding the contract method 0x0c9f5108.
//
// Solidity: function increaseVoterVote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) IncreaseVoterVote(opts *bind.TransactOpts, addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "increaseVoterVote", addrVoter, addrCandidate, tokens)
}

// IncreaseVoterVote is a paid mutator transaction binding the contract method 0x0c9f5108.
//
// Solidity: function increaseVoterVote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) IncreaseVoterVote(addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate, tokens)
}

// IncreaseVoterVote is a paid mutator transaction binding the contract method 0x0c9f5108.
//
// Solidity: function increaseVoterVote(addrVoter address, addrCandidate address, tokens uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) IncreaseVoterVote(addrVoter common.Address, addrCandidate common.Address, tokens *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.IncreaseVoterVote(&_BokerNodeData.TransactOpts, addrVoter, addrCandidate, tokens)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) SetManager(opts *bind.TransactOpts, addrManager common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "setManager", addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNodeData *BokerNodeDataSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetManager(&_BokerNodeData.TransactOpts, addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetManager(&_BokerNodeData.TransactOpts, addrManager)
}

// SetVoteCycleBegin is a paid mutator transaction binding the contract method 0xe107f9ec.
//
// Solidity: function setVoteCycleBegin(time uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) SetVoteCycleBegin(opts *bind.TransactOpts, time *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "setVoteCycleBegin", time)
}

// SetVoteCycleBegin is a paid mutator transaction binding the contract method 0xe107f9ec.
//
// Solidity: function setVoteCycleBegin(time uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) SetVoteCycleBegin(time *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetVoteCycleBegin(&_BokerNodeData.TransactOpts, time)
}

// SetVoteCycleBegin is a paid mutator transaction binding the contract method 0xe107f9ec.
//
// Solidity: function setVoteCycleBegin(time uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) SetVoteCycleBegin(time *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetVoteCycleBegin(&_BokerNodeData.TransactOpts, time)
}

// SetVoterDeposit is a paid mutator transaction binding the contract method 0xc90f008a.
//
// Solidity: function setVoterDeposit(addrVoter address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactor) SetVoterDeposit(opts *bind.TransactOpts, addrVoter common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "setVoterDeposit", addrVoter, amount)
}

// SetVoterDeposit is a paid mutator transaction binding the contract method 0xc90f008a.
//
// Solidity: function setVoterDeposit(addrVoter address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataSession) SetVoterDeposit(addrVoter common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, amount)
}

// SetVoterDeposit is a paid mutator transaction binding the contract method 0xc90f008a.
//
// Solidity: function setVoterDeposit(addrVoter address, amount uint256) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) SetVoterDeposit(addrVoter common.Address, amount *big.Int) (*types.Transaction, error) {
	return _BokerNodeData.Contract.SetVoterDeposit(&_BokerNodeData.TransactOpts, addrVoter, amount)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) TransferOwnership(opts *bind.TransactOpts, _newOwner common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "transferOwnership", _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNodeData *BokerNodeDataSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.TransferOwnership(&_BokerNodeData.TransactOpts, _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.TransferOwnership(&_BokerNodeData.TransactOpts, _newOwner)
}

// UpdateVoterUnlockTime is a paid mutator transaction binding the contract method 0x9814be53.
//
// Solidity: function updateVoterUnlockTime(addrVoter address) returns()
func (_BokerNodeData *BokerNodeDataTransactor) UpdateVoterUnlockTime(opts *bind.TransactOpts, addrVoter common.Address) (*types.Transaction, error) {
	return _BokerNodeData.contract.Transact(opts, "updateVoterUnlockTime", addrVoter)
}

// UpdateVoterUnlockTime is a paid mutator transaction binding the contract method 0x9814be53.
//
// Solidity: function updateVoterUnlockTime(addrVoter address) returns()
func (_BokerNodeData *BokerNodeDataSession) UpdateVoterUnlockTime(addrVoter common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.UpdateVoterUnlockTime(&_BokerNodeData.TransactOpts, addrVoter)
}

// UpdateVoterUnlockTime is a paid mutator transaction binding the contract method 0x9814be53.
//
// Solidity: function updateVoterUnlockTime(addrVoter address) returns()
func (_BokerNodeData *BokerNodeDataTransactorSession) UpdateVoterUnlockTime(addrVoter common.Address) (*types.Transaction, error) {
	return _BokerNodeData.Contract.UpdateVoterUnlockTime(&_BokerNodeData.TransactOpts, addrVoter)
}
