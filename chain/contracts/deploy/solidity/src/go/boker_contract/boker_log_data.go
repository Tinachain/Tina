// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package boker_contract

import (
	"math/big"
	"strings"

	"github.com/Tinachain/Tina/chain/accounts/abi"
	"github.com/Tinachain/Tina/chain/accounts/abi/bind"
	"github.com/Tinachain/Tina/chain/common"
	"github.com/Tinachain/Tina/chain/core/types"
)

// BokerLogDataABI is the input ABI used to generate the binding from.
const BokerLogDataABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"longtermTokens\",\"type\":\"uint256\"},{\"name\":\"shorttermTokens\",\"type\":\"uint256\"},{\"name\":\"longtermPowerTotal\",\"type\":\"uint256\"},{\"name\":\"shorttermPowerTotal\",\"type\":\"uint256\"}],\"name\":\"assignTokenLogAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cName\",\"type\":\"string\"}],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data\",\"type\":\"string\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"commonLogAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"financeLogs\",\"outputs\":[{\"name\":\"addrFrom\",\"type\":\"address\"},{\"name\":\"addrTo\",\"type\":\"address\"},{\"name\":\"tokensChange\",\"type\":\"uint256\"},{\"name\":\"tokensFrom\",\"type\":\"uint256\"},{\"name\":\"tokensTo\",\"type\":\"uint256\"},{\"name\":\"reason\",\"type\":\"uint256\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"page\",\"type\":\"uint256\"},{\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"voteRotateLogGet\",\"outputs\":[{\"name\":\"rounds\",\"type\":\"uint256[]\"},{\"name\":\"times\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bokerManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"idx\",\"type\":\"int256\"}],\"name\":\"commonLogGet\",\"outputs\":[{\"name\":\"data\",\"type\":\"string\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrFrom\",\"type\":\"address\"},{\"name\":\"addrTo\",\"type\":\"address\"},{\"name\":\"tokensChange\",\"type\":\"uint256\"},{\"name\":\"tokensFrom\",\"type\":\"uint256\"},{\"name\":\"tokensTo\",\"type\":\"uint256\"},{\"name\":\"reason\",\"type\":\"uint256\"}],\"name\":\"financeLogAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"page\",\"type\":\"uint256\"},{\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"assignTokenLogGet\",\"outputs\":[{\"name\":\"longtermTokenses\",\"type\":\"uint256[]\"},{\"name\":\"shorttermTokenses\",\"type\":\"uint256[]\"},{\"name\":\"longtermPowerTotals\",\"type\":\"uint256[]\"},{\"name\":\"shorttermPowerTotals\",\"type\":\"uint256[]\"},{\"name\":\"times\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"assignTokenLogGetIndex\",\"outputs\":[{\"name\":\"longtermTokens\",\"type\":\"uint256\"},{\"name\":\"shorttermTokens\",\"type\":\"uint256\"},{\"name\":\"longtermPowerTotal\",\"type\":\"uint256\"},{\"name\":\"shorttermPowerTotal\",\"type\":\"uint256\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"page\",\"type\":\"uint256\"},{\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"userTipLogGet\",\"outputs\":[{\"name\":\"addrUsers\",\"type\":\"address[]\"},{\"name\":\"tokensChanges\",\"type\":\"int256[]\"},{\"name\":\"tokensAfters\",\"type\":\"uint256[]\"},{\"name\":\"times\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"page\",\"type\":\"uint256\"},{\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"voteLogGet\",\"outputs\":[{\"name\":\"voteTypes\",\"type\":\"uint256[]\"},{\"name\":\"tokenses\",\"type\":\"uint256[]\"},{\"name\":\"addrCandidates\",\"type\":\"address[]\"},{\"name\":\"times\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"voteRotateLogGetIndex\",\"outputs\":[{\"name\":\"round\",\"type\":\"uint256\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"round\",\"type\":\"uint256\"}],\"name\":\"voteRotateLogAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"page\",\"type\":\"uint256\"},{\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"userFinanceLogGet\",\"outputs\":[{\"name\":\"tokensChanges\",\"type\":\"int256[]\"},{\"name\":\"tokensAfters\",\"type\":\"uint256[]\"},{\"name\":\"reasons\",\"type\":\"uint256[]\"},{\"name\":\"times\",\"type\":\"uint256[]\"},{\"name\":\"indexes\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrDapp\",\"type\":\"address\"},{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"powerType\",\"type\":\"uint256\"},{\"name\":\"powerChange\",\"type\":\"int256\"},{\"name\":\"powerNew\",\"type\":\"uint256\"},{\"name\":\"reason\",\"type\":\"uint256\"},{\"name\":\"param1\",\"type\":\"uint256\"}],\"name\":\"userPowerLogAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"page\",\"type\":\"uint256\"},{\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"userPowerLogGet\",\"outputs\":[{\"name\":\"addrDapps\",\"type\":\"address[]\"},{\"name\":\"powerTypes\",\"type\":\"uint256[]\"},{\"name\":\"powerChanges\",\"type\":\"int256[]\"},{\"name\":\"reasons\",\"type\":\"uint256[]\"},{\"name\":\"param1s\",\"type\":\"uint256[]\"},{\"name\":\"times\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigInt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"addrCandidate\",\"type\":\"address\"},{\"name\":\"voteType\",\"type\":\"uint256\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"voteLogAdd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// BokerLogDataBin is the compiled bytecode used for deploying new contracts.
const BokerLogDataBin = ``

// DeployBokerLogData deploys a new Ethereum contract, binding an instance of BokerLogData to it.
func DeployBokerLogData(auth *bind.TransactOpts, backend bind.ContractBackend, addrManager common.Address) (common.Address, *types.Transaction, *BokerLogData, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerLogDataABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BokerLogDataBin), backend, addrManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BokerLogData{BokerLogDataCaller: BokerLogDataCaller{contract: contract}, BokerLogDataTransactor: BokerLogDataTransactor{contract: contract}}, nil
}

// BokerLogData is an auto generated Go binding around an Ethereum contract.
type BokerLogData struct {
	BokerLogDataCaller     // Read-only binding to the contract
	BokerLogDataTransactor // Write-only binding to the contract
}

// BokerLogDataCaller is an auto generated read-only Go binding around an Ethereum contract.
type BokerLogDataCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerLogDataTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BokerLogDataTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerLogDataSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BokerLogDataSession struct {
	Contract     *BokerLogData     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BokerLogDataCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BokerLogDataCallerSession struct {
	Contract *BokerLogDataCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// BokerLogDataTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BokerLogDataTransactorSession struct {
	Contract     *BokerLogDataTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// BokerLogDataRaw is an auto generated low-level Go binding around an Ethereum contract.
type BokerLogDataRaw struct {
	Contract *BokerLogData // Generic contract binding to access the raw methods on
}

// BokerLogDataCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BokerLogDataCallerRaw struct {
	Contract *BokerLogDataCaller // Generic read-only contract binding to access the raw methods on
}

// BokerLogDataTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BokerLogDataTransactorRaw struct {
	Contract *BokerLogDataTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBokerLogData creates a new instance of BokerLogData, bound to a specific deployed contract.
func NewBokerLogData(address common.Address, backend bind.ContractBackend) (*BokerLogData, error) {
	contract, err := bindBokerLogData(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BokerLogData{BokerLogDataCaller: BokerLogDataCaller{contract: contract}, BokerLogDataTransactor: BokerLogDataTransactor{contract: contract}}, nil
}

// NewBokerLogDataCaller creates a new read-only instance of BokerLogData, bound to a specific deployed contract.
func NewBokerLogDataCaller(address common.Address, caller bind.ContractCaller) (*BokerLogDataCaller, error) {
	contract, err := bindBokerLogData(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &BokerLogDataCaller{contract: contract}, nil
}

// NewBokerLogDataTransactor creates a new write-only instance of BokerLogData, bound to a specific deployed contract.
func NewBokerLogDataTransactor(address common.Address, transactor bind.ContractTransactor) (*BokerLogDataTransactor, error) {
	contract, err := bindBokerLogData(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &BokerLogDataTransactor{contract: contract}, nil
}

// bindBokerLogData binds a generic wrapper to an already deployed contract.
func bindBokerLogData(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerLogDataABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerLogData *BokerLogDataRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerLogData.Contract.BokerLogDataCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerLogData *BokerLogDataRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerLogData.Contract.BokerLogDataTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerLogData *BokerLogDataRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerLogData.Contract.BokerLogDataTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerLogData *BokerLogDataCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerLogData.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerLogData *BokerLogDataTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerLogData.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerLogData *BokerLogDataTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerLogData.Contract.contract.Transact(opts, method, params...)
}

// AssignTokenLogGet is a free data retrieval call binding the contract method 0x89b72dcf.
//
// Solidity: function assignTokenLogGet(page uint256, pageSize uint256) constant returns(longtermTokenses uint256[], shorttermTokenses uint256[], longtermPowerTotals uint256[], shorttermPowerTotals uint256[], times uint256[])
func (_BokerLogData *BokerLogDataCaller) AssignTokenLogGet(opts *bind.CallOpts, page *big.Int, pageSize *big.Int) (struct {
	LongtermTokenses     []*big.Int
	ShorttermTokenses    []*big.Int
	LongtermPowerTotals  []*big.Int
	ShorttermPowerTotals []*big.Int
	Times                []*big.Int
}, error) {
	ret := new(struct {
		LongtermTokenses     []*big.Int
		ShorttermTokenses    []*big.Int
		LongtermPowerTotals  []*big.Int
		ShorttermPowerTotals []*big.Int
		Times                []*big.Int
	})
	out := ret
	err := _BokerLogData.contract.Call(opts, out, "assignTokenLogGet", page, pageSize)
	return *ret, err
}

// AssignTokenLogGet is a free data retrieval call binding the contract method 0x89b72dcf.
//
// Solidity: function assignTokenLogGet(page uint256, pageSize uint256) constant returns(longtermTokenses uint256[], shorttermTokenses uint256[], longtermPowerTotals uint256[], shorttermPowerTotals uint256[], times uint256[])
func (_BokerLogData *BokerLogDataSession) AssignTokenLogGet(page *big.Int, pageSize *big.Int) (struct {
	LongtermTokenses     []*big.Int
	ShorttermTokenses    []*big.Int
	LongtermPowerTotals  []*big.Int
	ShorttermPowerTotals []*big.Int
	Times                []*big.Int
}, error) {
	return _BokerLogData.Contract.AssignTokenLogGet(&_BokerLogData.CallOpts, page, pageSize)
}

// AssignTokenLogGet is a free data retrieval call binding the contract method 0x89b72dcf.
//
// Solidity: function assignTokenLogGet(page uint256, pageSize uint256) constant returns(longtermTokenses uint256[], shorttermTokenses uint256[], longtermPowerTotals uint256[], shorttermPowerTotals uint256[], times uint256[])
func (_BokerLogData *BokerLogDataCallerSession) AssignTokenLogGet(page *big.Int, pageSize *big.Int) (struct {
	LongtermTokenses     []*big.Int
	ShorttermTokenses    []*big.Int
	LongtermPowerTotals  []*big.Int
	ShorttermPowerTotals []*big.Int
	Times                []*big.Int
}, error) {
	return _BokerLogData.Contract.AssignTokenLogGet(&_BokerLogData.CallOpts, page, pageSize)
}

// AssignTokenLogGetIndex is a free data retrieval call binding the contract method 0x9ea9db51.
//
// Solidity: function assignTokenLogGetIndex(index uint256) constant returns(longtermTokens uint256, shorttermTokens uint256, longtermPowerTotal uint256, shorttermPowerTotal uint256, time uint256)
func (_BokerLogData *BokerLogDataCaller) AssignTokenLogGetIndex(opts *bind.CallOpts, index *big.Int) (struct {
	LongtermTokens      *big.Int
	ShorttermTokens     *big.Int
	LongtermPowerTotal  *big.Int
	ShorttermPowerTotal *big.Int
	Time                *big.Int
}, error) {
	ret := new(struct {
		LongtermTokens      *big.Int
		ShorttermTokens     *big.Int
		LongtermPowerTotal  *big.Int
		ShorttermPowerTotal *big.Int
		Time                *big.Int
	})
	out := ret
	err := _BokerLogData.contract.Call(opts, out, "assignTokenLogGetIndex", index)
	return *ret, err
}

// AssignTokenLogGetIndex is a free data retrieval call binding the contract method 0x9ea9db51.
//
// Solidity: function assignTokenLogGetIndex(index uint256) constant returns(longtermTokens uint256, shorttermTokens uint256, longtermPowerTotal uint256, shorttermPowerTotal uint256, time uint256)
func (_BokerLogData *BokerLogDataSession) AssignTokenLogGetIndex(index *big.Int) (struct {
	LongtermTokens      *big.Int
	ShorttermTokens     *big.Int
	LongtermPowerTotal  *big.Int
	ShorttermPowerTotal *big.Int
	Time                *big.Int
}, error) {
	return _BokerLogData.Contract.AssignTokenLogGetIndex(&_BokerLogData.CallOpts, index)
}

// AssignTokenLogGetIndex is a free data retrieval call binding the contract method 0x9ea9db51.
//
// Solidity: function assignTokenLogGetIndex(index uint256) constant returns(longtermTokens uint256, shorttermTokens uint256, longtermPowerTotal uint256, shorttermPowerTotal uint256, time uint256)
func (_BokerLogData *BokerLogDataCallerSession) AssignTokenLogGetIndex(index *big.Int) (struct {
	LongtermTokens      *big.Int
	ShorttermTokens     *big.Int
	LongtermPowerTotal  *big.Int
	ShorttermPowerTotal *big.Int
	Time                *big.Int
}, error) {
	return _BokerLogData.Contract.AssignTokenLogGetIndex(&_BokerLogData.CallOpts, index)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerLogData *BokerLogDataCaller) BokerManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerLogData.contract.Call(opts, out, "bokerManager")
	return *ret0, err
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerLogData *BokerLogDataSession) BokerManager() (common.Address, error) {
	return _BokerLogData.Contract.BokerManager(&_BokerLogData.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerLogData *BokerLogDataCallerSession) BokerManager() (common.Address, error) {
	return _BokerLogData.Contract.BokerManager(&_BokerLogData.CallOpts)
}

// CommonLogGet is a free data retrieval call binding the contract method 0x6844bc94.
//
// Solidity: function commonLogGet(idx int256) constant returns(data string, time uint256)
func (_BokerLogData *BokerLogDataCaller) CommonLogGet(opts *bind.CallOpts, idx *big.Int) (struct {
	Data string
	Time *big.Int
}, error) {
	ret := new(struct {
		Data string
		Time *big.Int
	})
	out := ret
	err := _BokerLogData.contract.Call(opts, out, "commonLogGet", idx)
	return *ret, err
}

// CommonLogGet is a free data retrieval call binding the contract method 0x6844bc94.
//
// Solidity: function commonLogGet(idx int256) constant returns(data string, time uint256)
func (_BokerLogData *BokerLogDataSession) CommonLogGet(idx *big.Int) (struct {
	Data string
	Time *big.Int
}, error) {
	return _BokerLogData.Contract.CommonLogGet(&_BokerLogData.CallOpts, idx)
}

// CommonLogGet is a free data retrieval call binding the contract method 0x6844bc94.
//
// Solidity: function commonLogGet(idx int256) constant returns(data string, time uint256)
func (_BokerLogData *BokerLogDataCallerSession) CommonLogGet(idx *big.Int) (struct {
	Data string
	Time *big.Int
}, error) {
	return _BokerLogData.Contract.CommonLogGet(&_BokerLogData.CallOpts, idx)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerLogData *BokerLogDataCaller) ContractAddress(opts *bind.CallOpts, cName string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerLogData.contract.Call(opts, out, "contractAddress", cName)
	return *ret0, err
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerLogData *BokerLogDataSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerLogData.Contract.ContractAddress(&_BokerLogData.CallOpts, cName)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerLogData *BokerLogDataCallerSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerLogData.Contract.ContractAddress(&_BokerLogData.CallOpts, cName)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerLogData *BokerLogDataCaller) CreateTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerLogData.contract.Call(opts, out, "createTime")
	return *ret0, err
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerLogData *BokerLogDataSession) CreateTime() (*big.Int, error) {
	return _BokerLogData.Contract.CreateTime(&_BokerLogData.CallOpts)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerLogData *BokerLogDataCallerSession) CreateTime() (*big.Int, error) {
	return _BokerLogData.Contract.CreateTime(&_BokerLogData.CallOpts)
}

// FinanceLogs is a free data retrieval call binding the contract method 0x3a8f9ad7.
//
// Solidity: function financeLogs( uint256) constant returns(addrFrom address, addrTo address, tokensChange uint256, tokensFrom uint256, tokensTo uint256, reason uint256, time uint256)
func (_BokerLogData *BokerLogDataCaller) FinanceLogs(opts *bind.CallOpts, arg0 *big.Int) (struct {
	AddrFrom     common.Address
	AddrTo       common.Address
	TokensChange *big.Int
	TokensFrom   *big.Int
	TokensTo     *big.Int
	Reason       *big.Int
	Time         *big.Int
}, error) {
	ret := new(struct {
		AddrFrom     common.Address
		AddrTo       common.Address
		TokensChange *big.Int
		TokensFrom   *big.Int
		TokensTo     *big.Int
		Reason       *big.Int
		Time         *big.Int
	})
	out := ret
	err := _BokerLogData.contract.Call(opts, out, "financeLogs", arg0)
	return *ret, err
}

// FinanceLogs is a free data retrieval call binding the contract method 0x3a8f9ad7.
//
// Solidity: function financeLogs( uint256) constant returns(addrFrom address, addrTo address, tokensChange uint256, tokensFrom uint256, tokensTo uint256, reason uint256, time uint256)
func (_BokerLogData *BokerLogDataSession) FinanceLogs(arg0 *big.Int) (struct {
	AddrFrom     common.Address
	AddrTo       common.Address
	TokensChange *big.Int
	TokensFrom   *big.Int
	TokensTo     *big.Int
	Reason       *big.Int
	Time         *big.Int
}, error) {
	return _BokerLogData.Contract.FinanceLogs(&_BokerLogData.CallOpts, arg0)
}

// FinanceLogs is a free data retrieval call binding the contract method 0x3a8f9ad7.
//
// Solidity: function financeLogs( uint256) constant returns(addrFrom address, addrTo address, tokensChange uint256, tokensFrom uint256, tokensTo uint256, reason uint256, time uint256)
func (_BokerLogData *BokerLogDataCallerSession) FinanceLogs(arg0 *big.Int) (struct {
	AddrFrom     common.Address
	AddrTo       common.Address
	TokensChange *big.Int
	TokensFrom   *big.Int
	TokensTo     *big.Int
	Reason       *big.Int
	Time         *big.Int
}, error) {
	return _BokerLogData.Contract.FinanceLogs(&_BokerLogData.CallOpts, arg0)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerLogData *BokerLogDataCaller) GlobalConfigInt(opts *bind.CallOpts, key string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerLogData.contract.Call(opts, out, "globalConfigInt", key)
	return *ret0, err
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerLogData *BokerLogDataSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerLogData.Contract.GlobalConfigInt(&_BokerLogData.CallOpts, key)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerLogData *BokerLogDataCallerSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerLogData.Contract.GlobalConfigInt(&_BokerLogData.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerLogData *BokerLogDataCaller) GlobalConfigString(opts *bind.CallOpts, key string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerLogData.contract.Call(opts, out, "globalConfigString", key)
	return *ret0, err
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerLogData *BokerLogDataSession) GlobalConfigString(key string) (string, error) {
	return _BokerLogData.Contract.GlobalConfigString(&_BokerLogData.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerLogData *BokerLogDataCallerSession) GlobalConfigString(key string) (string, error) {
	return _BokerLogData.Contract.GlobalConfigString(&_BokerLogData.CallOpts, key)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerLogData *BokerLogDataCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerLogData.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerLogData *BokerLogDataSession) Owner() (common.Address, error) {
	return _BokerLogData.Contract.Owner(&_BokerLogData.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerLogData *BokerLogDataCallerSession) Owner() (common.Address, error) {
	return _BokerLogData.Contract.Owner(&_BokerLogData.CallOpts)
}

// UserFinanceLogGet is a free data retrieval call binding the contract method 0xc7e552a8.
//
// Solidity: function userFinanceLogGet(addrUser address, page uint256, pageSize uint256) constant returns(tokensChanges int256[], tokensAfters uint256[], reasons uint256[], times uint256[], indexes uint256[])
func (_BokerLogData *BokerLogDataCaller) UserFinanceLogGet(opts *bind.CallOpts, addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Reasons       []*big.Int
	Times         []*big.Int
	Indexes       []*big.Int
}, error) {
	ret := new(struct {
		TokensChanges []*big.Int
		TokensAfters  []*big.Int
		Reasons       []*big.Int
		Times         []*big.Int
		Indexes       []*big.Int
	})
	out := ret
	err := _BokerLogData.contract.Call(opts, out, "userFinanceLogGet", addrUser, page, pageSize)
	return *ret, err
}

// UserFinanceLogGet is a free data retrieval call binding the contract method 0xc7e552a8.
//
// Solidity: function userFinanceLogGet(addrUser address, page uint256, pageSize uint256) constant returns(tokensChanges int256[], tokensAfters uint256[], reasons uint256[], times uint256[], indexes uint256[])
func (_BokerLogData *BokerLogDataSession) UserFinanceLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Reasons       []*big.Int
	Times         []*big.Int
	Indexes       []*big.Int
}, error) {
	return _BokerLogData.Contract.UserFinanceLogGet(&_BokerLogData.CallOpts, addrUser, page, pageSize)
}

// UserFinanceLogGet is a free data retrieval call binding the contract method 0xc7e552a8.
//
// Solidity: function userFinanceLogGet(addrUser address, page uint256, pageSize uint256) constant returns(tokensChanges int256[], tokensAfters uint256[], reasons uint256[], times uint256[], indexes uint256[])
func (_BokerLogData *BokerLogDataCallerSession) UserFinanceLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Reasons       []*big.Int
	Times         []*big.Int
	Indexes       []*big.Int
}, error) {
	return _BokerLogData.Contract.UserFinanceLogGet(&_BokerLogData.CallOpts, addrUser, page, pageSize)
}

// UserPowerLogGet is a free data retrieval call binding the contract method 0xd226fcab.
//
// Solidity: function userPowerLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrDapps address[], powerTypes uint256[], powerChanges int256[], reasons uint256[], param1s uint256[], times uint256[])
func (_BokerLogData *BokerLogDataCaller) UserPowerLogGet(opts *bind.CallOpts, addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrDapps    []common.Address
	PowerTypes   []*big.Int
	PowerChanges []*big.Int
	Reasons      []*big.Int
	Param1s      []*big.Int
	Times        []*big.Int
}, error) {
	ret := new(struct {
		AddrDapps    []common.Address
		PowerTypes   []*big.Int
		PowerChanges []*big.Int
		Reasons      []*big.Int
		Param1s      []*big.Int
		Times        []*big.Int
	})
	out := ret
	err := _BokerLogData.contract.Call(opts, out, "userPowerLogGet", addrUser, page, pageSize)
	return *ret, err
}

// UserPowerLogGet is a free data retrieval call binding the contract method 0xd226fcab.
//
// Solidity: function userPowerLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrDapps address[], powerTypes uint256[], powerChanges int256[], reasons uint256[], param1s uint256[], times uint256[])
func (_BokerLogData *BokerLogDataSession) UserPowerLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrDapps    []common.Address
	PowerTypes   []*big.Int
	PowerChanges []*big.Int
	Reasons      []*big.Int
	Param1s      []*big.Int
	Times        []*big.Int
}, error) {
	return _BokerLogData.Contract.UserPowerLogGet(&_BokerLogData.CallOpts, addrUser, page, pageSize)
}

// UserPowerLogGet is a free data retrieval call binding the contract method 0xd226fcab.
//
// Solidity: function userPowerLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrDapps address[], powerTypes uint256[], powerChanges int256[], reasons uint256[], param1s uint256[], times uint256[])
func (_BokerLogData *BokerLogDataCallerSession) UserPowerLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrDapps    []common.Address
	PowerTypes   []*big.Int
	PowerChanges []*big.Int
	Reasons      []*big.Int
	Param1s      []*big.Int
	Times        []*big.Int
}, error) {
	return _BokerLogData.Contract.UserPowerLogGet(&_BokerLogData.CallOpts, addrUser, page, pageSize)
}

// UserTipLogGet is a free data retrieval call binding the contract method 0xa98215fb.
//
// Solidity: function userTipLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrUsers address[], tokensChanges int256[], tokensAfters uint256[], times uint256[])
func (_BokerLogData *BokerLogDataCaller) UserTipLogGet(opts *bind.CallOpts, addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrUsers     []common.Address
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Times         []*big.Int
}, error) {
	ret := new(struct {
		AddrUsers     []common.Address
		TokensChanges []*big.Int
		TokensAfters  []*big.Int
		Times         []*big.Int
	})
	out := ret
	err := _BokerLogData.contract.Call(opts, out, "userTipLogGet", addrUser, page, pageSize)
	return *ret, err
}

// UserTipLogGet is a free data retrieval call binding the contract method 0xa98215fb.
//
// Solidity: function userTipLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrUsers address[], tokensChanges int256[], tokensAfters uint256[], times uint256[])
func (_BokerLogData *BokerLogDataSession) UserTipLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrUsers     []common.Address
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Times         []*big.Int
}, error) {
	return _BokerLogData.Contract.UserTipLogGet(&_BokerLogData.CallOpts, addrUser, page, pageSize)
}

// UserTipLogGet is a free data retrieval call binding the contract method 0xa98215fb.
//
// Solidity: function userTipLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrUsers address[], tokensChanges int256[], tokensAfters uint256[], times uint256[])
func (_BokerLogData *BokerLogDataCallerSession) UserTipLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrUsers     []common.Address
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Times         []*big.Int
}, error) {
	return _BokerLogData.Contract.UserTipLogGet(&_BokerLogData.CallOpts, addrUser, page, pageSize)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerLogData *BokerLogDataCaller) Version(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerLogData.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerLogData *BokerLogDataSession) Version() (string, error) {
	return _BokerLogData.Contract.Version(&_BokerLogData.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerLogData *BokerLogDataCallerSession) Version() (string, error) {
	return _BokerLogData.Contract.Version(&_BokerLogData.CallOpts)
}

// VoteLogGet is a free data retrieval call binding the contract method 0xb25532e0.
//
// Solidity: function voteLogGet(addrUser address, page uint256, pageSize uint256) constant returns(voteTypes uint256[], tokenses uint256[], addrCandidates address[], times uint256[])
func (_BokerLogData *BokerLogDataCaller) VoteLogGet(opts *bind.CallOpts, addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	VoteTypes      []*big.Int
	Tokenses       []*big.Int
	AddrCandidates []common.Address
	Times          []*big.Int
}, error) {
	ret := new(struct {
		VoteTypes      []*big.Int
		Tokenses       []*big.Int
		AddrCandidates []common.Address
		Times          []*big.Int
	})
	out := ret
	err := _BokerLogData.contract.Call(opts, out, "voteLogGet", addrUser, page, pageSize)
	return *ret, err
}

// VoteLogGet is a free data retrieval call binding the contract method 0xb25532e0.
//
// Solidity: function voteLogGet(addrUser address, page uint256, pageSize uint256) constant returns(voteTypes uint256[], tokenses uint256[], addrCandidates address[], times uint256[])
func (_BokerLogData *BokerLogDataSession) VoteLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	VoteTypes      []*big.Int
	Tokenses       []*big.Int
	AddrCandidates []common.Address
	Times          []*big.Int
}, error) {
	return _BokerLogData.Contract.VoteLogGet(&_BokerLogData.CallOpts, addrUser, page, pageSize)
}

// VoteLogGet is a free data retrieval call binding the contract method 0xb25532e0.
//
// Solidity: function voteLogGet(addrUser address, page uint256, pageSize uint256) constant returns(voteTypes uint256[], tokenses uint256[], addrCandidates address[], times uint256[])
func (_BokerLogData *BokerLogDataCallerSession) VoteLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	VoteTypes      []*big.Int
	Tokenses       []*big.Int
	AddrCandidates []common.Address
	Times          []*big.Int
}, error) {
	return _BokerLogData.Contract.VoteLogGet(&_BokerLogData.CallOpts, addrUser, page, pageSize)
}

// VoteRotateLogGet is a free data retrieval call binding the contract method 0x6069c8f4.
//
// Solidity: function voteRotateLogGet(page uint256, pageSize uint256) constant returns(rounds uint256[], times uint256[])
func (_BokerLogData *BokerLogDataCaller) VoteRotateLogGet(opts *bind.CallOpts, page *big.Int, pageSize *big.Int) (struct {
	Rounds []*big.Int
	Times  []*big.Int
}, error) {
	ret := new(struct {
		Rounds []*big.Int
		Times  []*big.Int
	})
	out := ret
	err := _BokerLogData.contract.Call(opts, out, "voteRotateLogGet", page, pageSize)
	return *ret, err
}

// VoteRotateLogGet is a free data retrieval call binding the contract method 0x6069c8f4.
//
// Solidity: function voteRotateLogGet(page uint256, pageSize uint256) constant returns(rounds uint256[], times uint256[])
func (_BokerLogData *BokerLogDataSession) VoteRotateLogGet(page *big.Int, pageSize *big.Int) (struct {
	Rounds []*big.Int
	Times  []*big.Int
}, error) {
	return _BokerLogData.Contract.VoteRotateLogGet(&_BokerLogData.CallOpts, page, pageSize)
}

// VoteRotateLogGet is a free data retrieval call binding the contract method 0x6069c8f4.
//
// Solidity: function voteRotateLogGet(page uint256, pageSize uint256) constant returns(rounds uint256[], times uint256[])
func (_BokerLogData *BokerLogDataCallerSession) VoteRotateLogGet(page *big.Int, pageSize *big.Int) (struct {
	Rounds []*big.Int
	Times  []*big.Int
}, error) {
	return _BokerLogData.Contract.VoteRotateLogGet(&_BokerLogData.CallOpts, page, pageSize)
}

// VoteRotateLogGetIndex is a free data retrieval call binding the contract method 0xbef80e44.
//
// Solidity: function voteRotateLogGetIndex(index uint256) constant returns(round uint256, time uint256)
func (_BokerLogData *BokerLogDataCaller) VoteRotateLogGetIndex(opts *bind.CallOpts, index *big.Int) (struct {
	Round *big.Int
	Time  *big.Int
}, error) {
	ret := new(struct {
		Round *big.Int
		Time  *big.Int
	})
	out := ret
	err := _BokerLogData.contract.Call(opts, out, "voteRotateLogGetIndex", index)
	return *ret, err
}

// VoteRotateLogGetIndex is a free data retrieval call binding the contract method 0xbef80e44.
//
// Solidity: function voteRotateLogGetIndex(index uint256) constant returns(round uint256, time uint256)
func (_BokerLogData *BokerLogDataSession) VoteRotateLogGetIndex(index *big.Int) (struct {
	Round *big.Int
	Time  *big.Int
}, error) {
	return _BokerLogData.Contract.VoteRotateLogGetIndex(&_BokerLogData.CallOpts, index)
}

// VoteRotateLogGetIndex is a free data retrieval call binding the contract method 0xbef80e44.
//
// Solidity: function voteRotateLogGetIndex(index uint256) constant returns(round uint256, time uint256)
func (_BokerLogData *BokerLogDataCallerSession) VoteRotateLogGetIndex(index *big.Int) (struct {
	Round *big.Int
	Time  *big.Int
}, error) {
	return _BokerLogData.Contract.VoteRotateLogGetIndex(&_BokerLogData.CallOpts, index)
}

// AssignTokenLogAdd is a paid mutator transaction binding the contract method 0x102b3c14.
//
// Solidity: function assignTokenLogAdd(longtermTokens uint256, shorttermTokens uint256, longtermPowerTotal uint256, shorttermPowerTotal uint256) returns()
func (_BokerLogData *BokerLogDataTransactor) AssignTokenLogAdd(opts *bind.TransactOpts, longtermTokens *big.Int, shorttermTokens *big.Int, longtermPowerTotal *big.Int, shorttermPowerTotal *big.Int) (*types.Transaction, error) {
	return _BokerLogData.contract.Transact(opts, "assignTokenLogAdd", longtermTokens, shorttermTokens, longtermPowerTotal, shorttermPowerTotal)
}

// AssignTokenLogAdd is a paid mutator transaction binding the contract method 0x102b3c14.
//
// Solidity: function assignTokenLogAdd(longtermTokens uint256, shorttermTokens uint256, longtermPowerTotal uint256, shorttermPowerTotal uint256) returns()
func (_BokerLogData *BokerLogDataSession) AssignTokenLogAdd(longtermTokens *big.Int, shorttermTokens *big.Int, longtermPowerTotal *big.Int, shorttermPowerTotal *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.AssignTokenLogAdd(&_BokerLogData.TransactOpts, longtermTokens, shorttermTokens, longtermPowerTotal, shorttermPowerTotal)
}

// AssignTokenLogAdd is a paid mutator transaction binding the contract method 0x102b3c14.
//
// Solidity: function assignTokenLogAdd(longtermTokens uint256, shorttermTokens uint256, longtermPowerTotal uint256, shorttermPowerTotal uint256) returns()
func (_BokerLogData *BokerLogDataTransactorSession) AssignTokenLogAdd(longtermTokens *big.Int, shorttermTokens *big.Int, longtermPowerTotal *big.Int, shorttermPowerTotal *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.AssignTokenLogAdd(&_BokerLogData.TransactOpts, longtermTokens, shorttermTokens, longtermPowerTotal, shorttermPowerTotal)
}

// CommonLogAdd is a paid mutator transaction binding the contract method 0x22df4114.
//
// Solidity: function commonLogAdd(data string, time uint256) returns()
func (_BokerLogData *BokerLogDataTransactor) CommonLogAdd(opts *bind.TransactOpts, data string, time *big.Int) (*types.Transaction, error) {
	return _BokerLogData.contract.Transact(opts, "commonLogAdd", data, time)
}

// CommonLogAdd is a paid mutator transaction binding the contract method 0x22df4114.
//
// Solidity: function commonLogAdd(data string, time uint256) returns()
func (_BokerLogData *BokerLogDataSession) CommonLogAdd(data string, time *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.CommonLogAdd(&_BokerLogData.TransactOpts, data, time)
}

// CommonLogAdd is a paid mutator transaction binding the contract method 0x22df4114.
//
// Solidity: function commonLogAdd(data string, time uint256) returns()
func (_BokerLogData *BokerLogDataTransactorSession) CommonLogAdd(data string, time *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.CommonLogAdd(&_BokerLogData.TransactOpts, data, time)
}

// FinanceLogAdd is a paid mutator transaction binding the contract method 0x854bb322.
//
// Solidity: function financeLogAdd(addrFrom address, addrTo address, tokensChange uint256, tokensFrom uint256, tokensTo uint256, reason uint256) returns()
func (_BokerLogData *BokerLogDataTransactor) FinanceLogAdd(opts *bind.TransactOpts, addrFrom common.Address, addrTo common.Address, tokensChange *big.Int, tokensFrom *big.Int, tokensTo *big.Int, reason *big.Int) (*types.Transaction, error) {
	return _BokerLogData.contract.Transact(opts, "financeLogAdd", addrFrom, addrTo, tokensChange, tokensFrom, tokensTo, reason)
}

// FinanceLogAdd is a paid mutator transaction binding the contract method 0x854bb322.
//
// Solidity: function financeLogAdd(addrFrom address, addrTo address, tokensChange uint256, tokensFrom uint256, tokensTo uint256, reason uint256) returns()
func (_BokerLogData *BokerLogDataSession) FinanceLogAdd(addrFrom common.Address, addrTo common.Address, tokensChange *big.Int, tokensFrom *big.Int, tokensTo *big.Int, reason *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.FinanceLogAdd(&_BokerLogData.TransactOpts, addrFrom, addrTo, tokensChange, tokensFrom, tokensTo, reason)
}

// FinanceLogAdd is a paid mutator transaction binding the contract method 0x854bb322.
//
// Solidity: function financeLogAdd(addrFrom address, addrTo address, tokensChange uint256, tokensFrom uint256, tokensTo uint256, reason uint256) returns()
func (_BokerLogData *BokerLogDataTransactorSession) FinanceLogAdd(addrFrom common.Address, addrTo common.Address, tokensChange *big.Int, tokensFrom *big.Int, tokensTo *big.Int, reason *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.FinanceLogAdd(&_BokerLogData.TransactOpts, addrFrom, addrTo, tokensChange, tokensFrom, tokensTo, reason)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerLogData *BokerLogDataTransactor) SetManager(opts *bind.TransactOpts, addrManager common.Address) (*types.Transaction, error) {
	return _BokerLogData.contract.Transact(opts, "setManager", addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerLogData *BokerLogDataSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerLogData.Contract.SetManager(&_BokerLogData.TransactOpts, addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerLogData *BokerLogDataTransactorSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerLogData.Contract.SetManager(&_BokerLogData.TransactOpts, addrManager)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerLogData *BokerLogDataTransactor) TransferOwnership(opts *bind.TransactOpts, _newOwner common.Address) (*types.Transaction, error) {
	return _BokerLogData.contract.Transact(opts, "transferOwnership", _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerLogData *BokerLogDataSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerLogData.Contract.TransferOwnership(&_BokerLogData.TransactOpts, _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerLogData *BokerLogDataTransactorSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerLogData.Contract.TransferOwnership(&_BokerLogData.TransactOpts, _newOwner)
}

// UserPowerLogAdd is a paid mutator transaction binding the contract method 0xcffc35f6.
//
// Solidity: function userPowerLogAdd(addrDapp address, addrUser address, powerType uint256, powerChange int256, powerNew uint256, reason uint256, param1 uint256) returns()
func (_BokerLogData *BokerLogDataTransactor) UserPowerLogAdd(opts *bind.TransactOpts, addrDapp common.Address, addrUser common.Address, powerType *big.Int, powerChange *big.Int, powerNew *big.Int, reason *big.Int, param1 *big.Int) (*types.Transaction, error) {
	return _BokerLogData.contract.Transact(opts, "userPowerLogAdd", addrDapp, addrUser, powerType, powerChange, powerNew, reason, param1)
}

// UserPowerLogAdd is a paid mutator transaction binding the contract method 0xcffc35f6.
//
// Solidity: function userPowerLogAdd(addrDapp address, addrUser address, powerType uint256, powerChange int256, powerNew uint256, reason uint256, param1 uint256) returns()
func (_BokerLogData *BokerLogDataSession) UserPowerLogAdd(addrDapp common.Address, addrUser common.Address, powerType *big.Int, powerChange *big.Int, powerNew *big.Int, reason *big.Int, param1 *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.UserPowerLogAdd(&_BokerLogData.TransactOpts, addrDapp, addrUser, powerType, powerChange, powerNew, reason, param1)
}

// UserPowerLogAdd is a paid mutator transaction binding the contract method 0xcffc35f6.
//
// Solidity: function userPowerLogAdd(addrDapp address, addrUser address, powerType uint256, powerChange int256, powerNew uint256, reason uint256, param1 uint256) returns()
func (_BokerLogData *BokerLogDataTransactorSession) UserPowerLogAdd(addrDapp common.Address, addrUser common.Address, powerType *big.Int, powerChange *big.Int, powerNew *big.Int, reason *big.Int, param1 *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.UserPowerLogAdd(&_BokerLogData.TransactOpts, addrDapp, addrUser, powerType, powerChange, powerNew, reason, param1)
}

// VoteLogAdd is a paid mutator transaction binding the contract method 0xe7f218f2.
//
// Solidity: function voteLogAdd(addrUser address, addrCandidate address, voteType uint256, tokens uint256) returns()
func (_BokerLogData *BokerLogDataTransactor) VoteLogAdd(opts *bind.TransactOpts, addrUser common.Address, addrCandidate common.Address, voteType *big.Int, tokens *big.Int) (*types.Transaction, error) {
	return _BokerLogData.contract.Transact(opts, "voteLogAdd", addrUser, addrCandidate, voteType, tokens)
}

// VoteLogAdd is a paid mutator transaction binding the contract method 0xe7f218f2.
//
// Solidity: function voteLogAdd(addrUser address, addrCandidate address, voteType uint256, tokens uint256) returns()
func (_BokerLogData *BokerLogDataSession) VoteLogAdd(addrUser common.Address, addrCandidate common.Address, voteType *big.Int, tokens *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.VoteLogAdd(&_BokerLogData.TransactOpts, addrUser, addrCandidate, voteType, tokens)
}

// VoteLogAdd is a paid mutator transaction binding the contract method 0xe7f218f2.
//
// Solidity: function voteLogAdd(addrUser address, addrCandidate address, voteType uint256, tokens uint256) returns()
func (_BokerLogData *BokerLogDataTransactorSession) VoteLogAdd(addrUser common.Address, addrCandidate common.Address, voteType *big.Int, tokens *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.VoteLogAdd(&_BokerLogData.TransactOpts, addrUser, addrCandidate, voteType, tokens)
}

// VoteRotateLogAdd is a paid mutator transaction binding the contract method 0xc7de6c91.
//
// Solidity: function voteRotateLogAdd(round uint256) returns()
func (_BokerLogData *BokerLogDataTransactor) VoteRotateLogAdd(opts *bind.TransactOpts, round *big.Int) (*types.Transaction, error) {
	return _BokerLogData.contract.Transact(opts, "voteRotateLogAdd", round)
}

// VoteRotateLogAdd is a paid mutator transaction binding the contract method 0xc7de6c91.
//
// Solidity: function voteRotateLogAdd(round uint256) returns()
func (_BokerLogData *BokerLogDataSession) VoteRotateLogAdd(round *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.VoteRotateLogAdd(&_BokerLogData.TransactOpts, round)
}

// VoteRotateLogAdd is a paid mutator transaction binding the contract method 0xc7de6c91.
//
// Solidity: function voteRotateLogAdd(round uint256) returns()
func (_BokerLogData *BokerLogDataTransactorSession) VoteRotateLogAdd(round *big.Int) (*types.Transaction, error) {
	return _BokerLogData.Contract.VoteRotateLogAdd(&_BokerLogData.TransactOpts, round)
}
