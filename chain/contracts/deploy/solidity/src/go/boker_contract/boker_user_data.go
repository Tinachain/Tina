// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package boker_contract

import (
	"math/big"
	"strings"

	"github.com/Tinachain/Tina/chain/accounts/abi"
	"github.com/Tinachain/Tina/chain/accounts/abi/bind"
	"github.com/Tinachain/Tina/chain/common"
	"github.com/Tinachain/Tina/chain/core/types"
)

// BokerUserDataABI is the input ABI used to generate the binding from.
const BokerUserDataABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getUserPower\",\"outputs\":[{\"name\":\"longtermPower\",\"type\":\"uint256\"},{\"name\":\"shorttermPower\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getUserUploadCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"addrDapp\",\"type\":\"address\"}],\"name\":\"addDappBind\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getUserRegisterTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cName\",\"type\":\"string\"}],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getUserCertificationTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"clearUserWatchTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setUserShorttermPower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userArray\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"clearUserUploadCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bokerManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getLastLoginTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"loginTime\",\"type\":\"uint256\"}],\"name\":\"setUserLastLoginTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"registerTime\",\"type\":\"uint256\"},{\"name\":\"invitedFriendsCount\",\"type\":\"uint256\"},{\"name\":\"bindedDappAddresses\",\"type\":\"address[]\"},{\"name\":\"bindedDappTimes\",\"type\":\"uint256[]\"},{\"name\":\"longtermPower\",\"type\":\"uint256\"},{\"name\":\"shorttermPower\",\"type\":\"uint256\"}],\"name\":\"setUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"certificationTime\",\"type\":\"uint256\"}],\"name\":\"setUserCertificationTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUserAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"registerTime\",\"type\":\"uint256\"},{\"name\":\"certificationTime\",\"type\":\"uint256\"},{\"name\":\"lastLoginTime\",\"type\":\"uint256\"},{\"name\":\"invitedFriendsCount\",\"type\":\"uint256\"},{\"name\":\"watchEntryTotal\",\"type\":\"uint256\"},{\"name\":\"uploadCount\",\"type\":\"uint256\"},{\"name\":\"longtermPower\",\"type\":\"uint256\"},{\"name\":\"shorttermPower\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"addrDapp\",\"type\":\"address\"}],\"name\":\"getDappBind\",\"outputs\":[{\"name\":\"bindTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"uploadCount\",\"type\":\"uint256\"}],\"name\":\"addUserUploadCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getInvitedFriendsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigInt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrDapp\",\"type\":\"address\"},{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"fileId\",\"type\":\"uint256\"},{\"name\":\"watchTime\",\"type\":\"uint256\"}],\"name\":\"addUserWatchTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setUserLongtermPower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getUserWatchTime\",\"outputs\":[{\"name\":\"watchTotal\",\"type\":\"uint256\"},{\"name\":\"addrDapps\",\"type\":\"address[]\"},{\"name\":\"fileIds\",\"type\":\"uint256[]\"},{\"name\":\"watchTimes\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"registerTime\",\"type\":\"uint256\"}],\"name\":\"setUserRegisterTime\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"addInvitedFriends\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// BokerUserDataBin is the compiled bytecode used for deploying new contracts.
const BokerUserDataBin = `60806040526040805190810160405280600581526020017f312e302e310000000000000000000000000000000000000000000000000000008152506001908051906020019062000051929190620002b2565b50426002553480156200006357600080fd5b50604051602080620058fd8339810180604052810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000e28162000151640100000000026401000000009004565b506005600090806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000361565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620001bb57600080fd5b505af1158015620001d0573d6000803e3d6000fd5b505050506040513d6020811015620001e757600080fd5b810190808051906020019092919050505015156200026d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002f557805160ff191683800117855562000326565b8280016001018555821562000326579182015b828111156200032557825182559160200191906001019062000308565b5b50905062000335919062000339565b5090565b6200035e91905b808211156200035a57600081600090555060010162000340565b5090565b90565b61558c80620003716000396000f3006080604052600436106101a1576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806302931e59146101a657806302f0823414610204578063055a7f321461025b57806307973ccf146102be5780630b0099c9146102e95780631eb726af146103405780631ec622d3146103e95780632ad04f7a146104405780632e0bfcdf14610483578063378298bc146104d057806341209af1146105b257806354fd4d501461061f5780635be3c4bd146106af57806361dcd7ab146106f257806366ebc1c61461071d578063831e09b7146107745780638c9db12b146107cb5780638d3ba203146108185780638da5cb5b146109095780639bf6a20814610960578063a591efde146109ad578063a87430ba14610a19578063c1ffc01b14610adb578063cb0d723114610b52578063cff8662214610b9f578063d0ebdbe714610bf6578063d43c802114610c39578063da34ee7214610cb6578063da4f630614610d2d578063e83c056414610d7a578063ec3ead4814610ea9578063f010bb2c14610ef6578063f2fde38b14610f39575b600080fd5b3480156101b257600080fd5b506101e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7c565b604051808381526020018281526020019250505060405180910390f35b34801561021057600080fd5b50610245600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fd6565b6040518082815260200191505060405180910390f35b34801561026757600080fd5b506102bc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611027565b005b3480156102ca57600080fd5b506102d3611458565b6040518082815260200191505060405180910390f35b3480156102f557600080fd5b5061032a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611468565b6040518082815260200191505060405180910390f35b34801561034c57600080fd5b506103a7600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506114b9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103f557600080fd5b5061042a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611767565b6040518082815260200191505060405180910390f35b34801561044c57600080fd5b50610481600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117b8565b005b34801561048f57600080fd5b506104ce600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d23565b005b3480156104dc57600080fd5b50610537600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612117565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561057757808201518184015260208101905061055c565b50505050905090810190601f1680156105a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105be57600080fd5b506105dd600480360381019080803590602001909291905050506122a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561062b57600080fd5b506106346122e5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610674578082015181840152602081019050610659565b50505050905090810190601f1680156106a15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106bb57600080fd5b506106f0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612383565b005b3480156106fe57600080fd5b5061070761274d565b6040518082815260200191505060405180910390f35b34801561072957600080fd5b50610732612753565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561078057600080fd5b506107b5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612779565b6040518082815260200191505060405180910390f35b3480156107d757600080fd5b50610816600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506127ca565b005b34801561082457600080fd5b50610907600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290803590602001908201803590602001908080602002602001604051908101604052809392919081815260200183836020028082843782019150505050505091929192908035906020019092919080359060200190929190505050612bbe565b005b34801561091557600080fd5b5061091e613063565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561096c57600080fd5b506109ab600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613088565b005b3480156109b957600080fd5b506109c261347c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610a055780820151818401526020810190506109ea565b505050509050019250505060405180910390f35b348015610a2557600080fd5b50610a5a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061356b565b604051808b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390f35b348015610ae757600080fd5b50610b3c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506135df565b6040518082815260200191505060405180910390f35b348015610b5e57600080fd5b50610b9d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061366e565b005b348015610bab57600080fd5b50610be0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613a78565b6040518082815260200191505060405180910390f35b348015610c0257600080fd5b50610c37600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613ac9565b005b348015610c4557600080fd5b50610ca0600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050613b30565b6040518082815260200191505060405180910390f35b348015610cc257600080fd5b50610d2b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050613c6a565b005b348015610d3957600080fd5b50610d78600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050614250565b005b348015610d8657600080fd5b50610dbb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614644565b60405180858152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015610e0c578082015181840152602081019050610df1565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015610e4e578082015181840152602081019050610e33565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610e90578082015181840152602081019050610e75565b5050505090500197505050505050505060405180910390f35b348015610eb557600080fd5b50610ef4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506148fb565b005b348015610f0257600080fd5b50610f37600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050614cef565b005b348015610f4557600080fd5b50610f7a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506150f9565b005b6000806000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600c0154925080600d0154915050915091565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600b0154915050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101561113b578082015181840152602081019050611120565b50505050905090810190601f1680156111685780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561118857600080fd5b505af115801561119c573d6000803e3d6000fd5b505050506040513d60208110156111b257600080fd5b8101908080519060200190929190505050806113645750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b838110156112db5780820151818401526020810190506112c0565b50505050905090810190601f1680156113085780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561132857600080fd5b505af115801561133c573d6000803e3d6000fd5b505050506040513d602081101561135257600080fd5b81019080805190602001909291905050505b15156113d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b6113f78373ffffffffffffffffffffffffffffffffffffffff16615160565b1561140157611453565b61140a83615173565b9050428160060160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505050565b6000600160058054905003905090565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060020154915050919050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fca1f3c1846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561156657808201518184015260208101905061154b565b50505050905090810190601f1680156115935780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b1580156115b257600080fd5b505af11580156115c6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060a08110156115f057600080fd5b8101908080519060200190929190805164010000000081111561161257600080fd5b8281019050602081018481111561162857600080fd5b815185600182028301116401000000008211171561164557600080fd5b505092919060200180519060200190929190805164010000000081111561166b57600080fd5b8281019050602081018481111561168157600080fd5b815185600182028301116401000000008211171561169e57600080fd5b505092919060200180519060200190929190505050505092505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561175e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f616464722069732030210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80915050919050565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030154915050919050565b600080600080600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b838110156118d35780820151818401526020810190506118b8565b50505050905090810190601f1680156119005780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561192057600080fd5b505af1158015611934573d6000803e3d6000fd5b505050506040513d602081101561194a57600080fd5b810190808051906020019092919050505080611afc5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015611a73578082015181840152602081019050611a58565b50505050905090810190601f168015611aa05780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015611ac057600080fd5b505af1158015611ad4573d6000803e3d6000fd5b505050506040513d6020811015611aea57600080fd5b81019080805190602001909291905050505b1515611b70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b611b7987615173565b9550600094505b8560090180549050851015611d00578560090185815481101515611ba057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508560080160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209250600091505b8260020180549050821015611c68578260020182815481101515611c3557fe5b90600052602060002001549050826001016000828152602001908152602001600020600090558180600101925050611c15565b826002016000611c7891906154f9565b8560080160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000611cf191906154f9565b50508480600101955050611b80565b856009016000611d10919061551a565b600086600a018190555050505050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015611e37578082015181840152602081019050611e1c565b50505050905090810190601f168015611e645780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015611e8457600080fd5b505af1158015611e98573d6000803e3d6000fd5b505050506040513d6020811015611eae57600080fd5b8101908080519060200190929190505050806120605750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015611fd7578082015181840152602081019050611fbc565b50505050905090810190601f1680156120045780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561202457600080fd5b505af1158015612038573d6000803e3d6000fd5b505050506040513d602081101561204e57600080fd5b81019080805190602001909291905050505b15156120d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b6120f38373ffffffffffffffffffffffffffffffffffffffff16615160565b156120fd57612112565b61210683615173565b90508181600d01819055505b505050565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634a189f35836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156121c35780820151818401526020810190506121a8565b50505050905090810190601f1680156121f05780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561220f57600080fd5b505af1158015612223573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561224d57600080fd5b81019080805164010000000081111561226557600080fd5b8281019050602081018481111561227b57600080fd5b815185600182028301116401000000008211171561229857600080fd5b50509291905050509050919050565b6005818154811015156122b657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561237b5780601f106123505761010080835404028352916020019161237b565b820191906000526020600020905b81548152906001019060200180831161235e57829003601f168201915b505050505081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101561249757808201518184015260208101905061247c565b50505050905090810190601f1680156124c45780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156124e457600080fd5b505af11580156124f8573d6000803e3d6000fd5b505050506040513d602081101561250e57600080fd5b8101908080519060200190929190505050806126c05750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101561263757808201518184015260208101905061261c565b50505050905090810190601f1680156126645780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561268457600080fd5b505af1158015612698573d6000803e3d6000fd5b505050506040513d60208110156126ae57600080fd5b81019080805190602001909291905050505b1515612734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b61273d82615173565b9050600081600b01819055505050565b60025481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060040154915050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b838110156128de5780820151818401526020810190506128c3565b50505050905090810190601f16801561290b5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561292b57600080fd5b505af115801561293f573d6000803e3d6000fd5b505050506040513d602081101561295557600080fd5b810190808051906020019092919050505080612b075750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015612a7e578082015181840152602081019050612a63565b50505050905090810190601f168015612aab5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612acb57600080fd5b505af1158015612adf573d6000803e3d6000fd5b505050506040513d6020811015612af557600080fd5b81019080805190602001909291905050505b1515612b7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b612b9a8373ffffffffffffffffffffffffffffffffffffffff16615160565b15612ba457612bb9565b612bad83615173565b90508181600401819055505b505050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015612cd3578082015181840152602081019050612cb8565b50505050905090810190601f168015612d005780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612d2057600080fd5b505af1158015612d34573d6000803e3d6000fd5b505050506040513d6020811015612d4a57600080fd5b810190808051906020019092919050505080612efc5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015612e73578082015181840152602081019050612e58565b50505050905090810190601f168015612ea05780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612ec057600080fd5b505af1158015612ed4573d6000803e3d6000fd5b505050506040513d6020811015612eea57600080fd5b81019080805190602001909291905050505b1515612f70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b612f8f8973ffffffffffffffffffffffffffffffffffffffff16615160565b15612f9957613058565b612fa289615173565b91508782600201819055508682600501819055508382600c01819055508282600d0181905550600090505b8551811015613057578481815181101515612fe457fe5b90602001906020020151826006016000888481518110151561300257fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080600101915050612fcd565b5b505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101561319c578082015181840152602081019050613181565b50505050905090810190601f1680156131c95780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156131e957600080fd5b505af11580156131fd573d6000803e3d6000fd5b505050506040513d602081101561321357600080fd5b8101908080519060200190929190505050806133c55750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101561333c578082015181840152602081019050613321565b50505050905090810190601f1680156133695780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561338957600080fd5b505af115801561339d573d6000803e3d6000fd5b505050506040513d60208110156133b357600080fd5b81019080805190602001909291905050505b1515613439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b6134588373ffffffffffffffffffffffffffffffffffffffff16615160565b1561346257613477565b61346b83615173565b90508181600301819055505b505050565b60606000606060006005805490509250600183036040519080825280602002602001820160405280156134be5781602001602082028038833980820191505090505b509150600190505b82811015613562576005818154811015156134dd57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826001830381518110151561351957fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806001019150506134c6565b81935050505090565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201549080600301549080600401549080600501549080600a01549080600b01549080600c01549080600d015490508a565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060060160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015613782578082015181840152602081019050613767565b50505050905090810190601f1680156137af5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156137cf57600080fd5b505af11580156137e3573d6000803e3d6000fd5b505050506040513d60208110156137f957600080fd5b8101908080519060200190929190505050806139ab5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015613922578082015181840152602081019050613907565b50505050905090810190601f16801561394f5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561396f57600080fd5b505af1158015613983573d6000803e3d6000fd5b505050506040513d602081101561399957600080fd5b81019080805190602001909291905050505b1515613a1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b613a3e8373ffffffffffffffffffffffffffffffffffffffff16615160565b15613a4857613a73565b613a5183615173565b9050613a6a8282600b015461528490919063ffffffff16565b81600b01819055505b505050565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060050154915050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613b2457600080fd5b613b2d816152a2565b50565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633230b078836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613bdc578082015181840152602081019050613bc1565b50505050905090810190601f168015613c095780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015613c2857600080fd5b505af1158015613c3c573d6000803e3d6000fd5b505050506040513d6020811015613c5257600080fd5b81019080805190602001909291905050509050919050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015613d7f578082015181840152602081019050613d64565b50505050905090810190601f168015613dac5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015613dcc57600080fd5b505af1158015613de0573d6000803e3d6000fd5b505050506040513d6020811015613df657600080fd5b810190808051906020019092919050505080613fa85750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015613f1f578082015181840152602081019050613f04565b50505050905090810190601f168015613f4c5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015613f6c57600080fd5b505af1158015613f80573d6000803e3d6000fd5b505050506040513d6020811015613f9657600080fd5b81019080805190602001909291905050505b151561401c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b61403b8573ffffffffffffffffffffffffffffffffffffffff16615160565b1561404557614248565b61404e85615173565b91508160080160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561419857858160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816009018690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b60008160010160008681526020019081526020016000205411151561420657806002018490806001815401808255809150509060018203906000526020600020016000909192909190915055506141fd600183600a015461528490919063ffffffff16565b82600a01819055505b61422e838260010160008781526020019081526020016000205461528490919063ffffffff16565b816001016000868152602001908152602001600020819055505b505050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015614364578082015181840152602081019050614349565b50505050905090810190601f1680156143915780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156143b157600080fd5b505af11580156143c5573d6000803e3d6000fd5b505050506040513d60208110156143db57600080fd5b81019080805190602001909291905050508061458d5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b838110156145045780820151818401526020810190506144e9565b50505050905090810190601f1680156145315780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561455157600080fd5b505af1158015614565573d6000803e3d6000fd5b505050506040513d602081101561457b57600080fd5b81019080805190602001909291905050505b1515614601576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b6146208373ffffffffffffffffffffffffffffffffffffffff16615160565b1561462a5761463f565b61463383615173565b90508181600c01819055505b505050565b60006060806060600080600080600080600080600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020975087600a01549650866040519080825280602002602001820160405280156146ce5781602001602082028038833980820191505090505b509a50866040519080825280602002602001820160405280156147005781602001602082028038833980820191505090505b509950866040519080825280602002602001820160405280156147325781602001602082028038833980820191505090505b50985060009b5060009550600094505b87600901805490508510156148ec57876009018581548110151561476257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693508760080160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209250600091505b82600201805490508210156148df5782600201868154811015156147f757fe5b90600052602060002001549050838b8781518110151561481357fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808a8781518110151561485e57fe5b906020019060200201818152505082600101600082815260200190815260200160002054898781518110151561489057fe5b90602001906020020181815250506148c889878151811015156148af57fe5b906020019060200201518d61528490919063ffffffff16565b9b50858060010196505081806001019250506147d7565b8480600101955050614742565b50505050505050509193509193565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015614a0f5780820151818401526020810190506149f4565b50505050905090810190601f168015614a3c5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015614a5c57600080fd5b505af1158015614a70573d6000803e3d6000fd5b505050506040513d6020811015614a8657600080fd5b810190808051906020019092919050505080614c385750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015614baf578082015181840152602081019050614b94565b50505050905090810190601f168015614bdc5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015614bfc57600080fd5b505af1158015614c10573d6000803e3d6000fd5b505050506040513d6020811015614c2657600080fd5b81019080805190602001909291905050505b1515614cac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b614ccb8373ffffffffffffffffffffffffffffffffffffffff16615160565b15614cd557614cea565b614cde83615173565b90508181600201819055505b505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015614e03578082015181840152602081019050614de8565b50505050905090810190601f168015614e305780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015614e5057600080fd5b505af1158015614e64573d6000803e3d6000fd5b505050506040513d6020811015614e7a57600080fd5b81019080805190602001909291905050508061502c5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015614fa3578082015181840152602081019050614f88565b50505050905090810190601f168015614fd05780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015614ff057600080fd5b505af1158015615004573d6000803e3d6000fd5b505050506040513d602081101561501a57600080fd5b81019080805190602001909291905050505b15156150a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b6150bf8273ffffffffffffffffffffffffffffffffffffffff16615160565b156150c9576150f5565b6150d282615173565b90506150ec6001826005015461528490919063ffffffff16565b81600501819055505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561515457600080fd5b61515d816153ff565b50565b600080823b905060008111915050919050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816001015411151561527c57818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600580549050816001018190555060058290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b809050919050565b600080828401905083811015151561529857fe5b8091505092915050565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561530b57600080fd5b505af115801561531f573d6000803e3d6000fd5b505050506040513d602081101561533557600080fd5b810190808051906020019092919050505015156153ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561543b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5080546000825590600052602060002090810190615517919061553b565b50565b5080546000825590600052602060002090810190615538919061553b565b50565b61555d91905b80821115615559576000816000905550600101615541565b5090565b905600a165627a7a72305820e03ca2db8d656097d05edaa18456b4ad506027eaca2c84bc98b7b0f6acca34c90029`

// DeployBokerUserData deploys a new Ethereum contract, binding an instance of BokerUserData to it.
func DeployBokerUserData(auth *bind.TransactOpts, backend bind.ContractBackend, addrManager common.Address) (common.Address, *types.Transaction, *BokerUserData, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerUserDataABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BokerUserDataBin), backend, addrManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BokerUserData{BokerUserDataCaller: BokerUserDataCaller{contract: contract}, BokerUserDataTransactor: BokerUserDataTransactor{contract: contract}}, nil
}

// BokerUserData is an auto generated Go binding around an Ethereum contract.
type BokerUserData struct {
	BokerUserDataCaller     // Read-only binding to the contract
	BokerUserDataTransactor // Write-only binding to the contract
}

// BokerUserDataCaller is an auto generated read-only Go binding around an Ethereum contract.
type BokerUserDataCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerUserDataTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BokerUserDataTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerUserDataSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BokerUserDataSession struct {
	Contract     *BokerUserData    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BokerUserDataCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BokerUserDataCallerSession struct {
	Contract *BokerUserDataCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// BokerUserDataTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BokerUserDataTransactorSession struct {
	Contract     *BokerUserDataTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// BokerUserDataRaw is an auto generated low-level Go binding around an Ethereum contract.
type BokerUserDataRaw struct {
	Contract *BokerUserData // Generic contract binding to access the raw methods on
}

// BokerUserDataCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BokerUserDataCallerRaw struct {
	Contract *BokerUserDataCaller // Generic read-only contract binding to access the raw methods on
}

// BokerUserDataTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BokerUserDataTransactorRaw struct {
	Contract *BokerUserDataTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBokerUserData creates a new instance of BokerUserData, bound to a specific deployed contract.
func NewBokerUserData(address common.Address, backend bind.ContractBackend) (*BokerUserData, error) {
	contract, err := bindBokerUserData(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BokerUserData{BokerUserDataCaller: BokerUserDataCaller{contract: contract}, BokerUserDataTransactor: BokerUserDataTransactor{contract: contract}}, nil
}

// NewBokerUserDataCaller creates a new read-only instance of BokerUserData, bound to a specific deployed contract.
func NewBokerUserDataCaller(address common.Address, caller bind.ContractCaller) (*BokerUserDataCaller, error) {
	contract, err := bindBokerUserData(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &BokerUserDataCaller{contract: contract}, nil
}

// NewBokerUserDataTransactor creates a new write-only instance of BokerUserData, bound to a specific deployed contract.
func NewBokerUserDataTransactor(address common.Address, transactor bind.ContractTransactor) (*BokerUserDataTransactor, error) {
	contract, err := bindBokerUserData(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &BokerUserDataTransactor{contract: contract}, nil
}

// bindBokerUserData binds a generic wrapper to an already deployed contract.
func bindBokerUserData(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerUserDataABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerUserData *BokerUserDataRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerUserData.Contract.BokerUserDataCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerUserData *BokerUserDataRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerUserData.Contract.BokerUserDataTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerUserData *BokerUserDataRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerUserData.Contract.BokerUserDataTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerUserData *BokerUserDataCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerUserData.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerUserData *BokerUserDataTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerUserData.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerUserData *BokerUserDataTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerUserData.Contract.contract.Transact(opts, method, params...)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerUserData *BokerUserDataCaller) BokerManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "bokerManager")
	return *ret0, err
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerUserData *BokerUserDataSession) BokerManager() (common.Address, error) {
	return _BokerUserData.Contract.BokerManager(&_BokerUserData.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerUserData *BokerUserDataCallerSession) BokerManager() (common.Address, error) {
	return _BokerUserData.Contract.BokerManager(&_BokerUserData.CallOpts)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerUserData *BokerUserDataCaller) ContractAddress(opts *bind.CallOpts, cName string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "contractAddress", cName)
	return *ret0, err
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerUserData *BokerUserDataSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerUserData.Contract.ContractAddress(&_BokerUserData.CallOpts, cName)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerUserData *BokerUserDataCallerSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerUserData.Contract.ContractAddress(&_BokerUserData.CallOpts, cName)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerUserData *BokerUserDataCaller) CreateTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "createTime")
	return *ret0, err
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerUserData *BokerUserDataSession) CreateTime() (*big.Int, error) {
	return _BokerUserData.Contract.CreateTime(&_BokerUserData.CallOpts)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerUserData *BokerUserDataCallerSession) CreateTime() (*big.Int, error) {
	return _BokerUserData.Contract.CreateTime(&_BokerUserData.CallOpts)
}

// GetDappBind is a free data retrieval call binding the contract method 0xc1ffc01b.
//
// Solidity: function getDappBind(addrUser address, addrDapp address) constant returns(bindTime uint256)
func (_BokerUserData *BokerUserDataCaller) GetDappBind(opts *bind.CallOpts, addrUser common.Address, addrDapp common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "getDappBind", addrUser, addrDapp)
	return *ret0, err
}

// GetDappBind is a free data retrieval call binding the contract method 0xc1ffc01b.
//
// Solidity: function getDappBind(addrUser address, addrDapp address) constant returns(bindTime uint256)
func (_BokerUserData *BokerUserDataSession) GetDappBind(addrUser common.Address, addrDapp common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetDappBind(&_BokerUserData.CallOpts, addrUser, addrDapp)
}

// GetDappBind is a free data retrieval call binding the contract method 0xc1ffc01b.
//
// Solidity: function getDappBind(addrUser address, addrDapp address) constant returns(bindTime uint256)
func (_BokerUserData *BokerUserDataCallerSession) GetDappBind(addrUser common.Address, addrDapp common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetDappBind(&_BokerUserData.CallOpts, addrUser, addrDapp)
}

// GetInvitedFriendsCount is a free data retrieval call binding the contract method 0xcff86622.
//
// Solidity: function getInvitedFriendsCount(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataCaller) GetInvitedFriendsCount(opts *bind.CallOpts, addrUser common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "getInvitedFriendsCount", addrUser)
	return *ret0, err
}

// GetInvitedFriendsCount is a free data retrieval call binding the contract method 0xcff86622.
//
// Solidity: function getInvitedFriendsCount(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataSession) GetInvitedFriendsCount(addrUser common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetInvitedFriendsCount(&_BokerUserData.CallOpts, addrUser)
}

// GetInvitedFriendsCount is a free data retrieval call binding the contract method 0xcff86622.
//
// Solidity: function getInvitedFriendsCount(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataCallerSession) GetInvitedFriendsCount(addrUser common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetInvitedFriendsCount(&_BokerUserData.CallOpts, addrUser)
}

// GetLastLoginTime is a free data retrieval call binding the contract method 0x831e09b7.
//
// Solidity: function getLastLoginTime(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataCaller) GetLastLoginTime(opts *bind.CallOpts, addrUser common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "getLastLoginTime", addrUser)
	return *ret0, err
}

// GetLastLoginTime is a free data retrieval call binding the contract method 0x831e09b7.
//
// Solidity: function getLastLoginTime(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataSession) GetLastLoginTime(addrUser common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetLastLoginTime(&_BokerUserData.CallOpts, addrUser)
}

// GetLastLoginTime is a free data retrieval call binding the contract method 0x831e09b7.
//
// Solidity: function getLastLoginTime(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataCallerSession) GetLastLoginTime(addrUser common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetLastLoginTime(&_BokerUserData.CallOpts, addrUser)
}

// GetUserAddresses is a free data retrieval call binding the contract method 0xa591efde.
//
// Solidity: function getUserAddresses() constant returns(address[])
func (_BokerUserData *BokerUserDataCaller) GetUserAddresses(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "getUserAddresses")
	return *ret0, err
}

// GetUserAddresses is a free data retrieval call binding the contract method 0xa591efde.
//
// Solidity: function getUserAddresses() constant returns(address[])
func (_BokerUserData *BokerUserDataSession) GetUserAddresses() ([]common.Address, error) {
	return _BokerUserData.Contract.GetUserAddresses(&_BokerUserData.CallOpts)
}

// GetUserAddresses is a free data retrieval call binding the contract method 0xa591efde.
//
// Solidity: function getUserAddresses() constant returns(address[])
func (_BokerUserData *BokerUserDataCallerSession) GetUserAddresses() ([]common.Address, error) {
	return _BokerUserData.Contract.GetUserAddresses(&_BokerUserData.CallOpts)
}

// GetUserCertificationTime is a free data retrieval call binding the contract method 0x1ec622d3.
//
// Solidity: function getUserCertificationTime(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataCaller) GetUserCertificationTime(opts *bind.CallOpts, addrUser common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "getUserCertificationTime", addrUser)
	return *ret0, err
}

// GetUserCertificationTime is a free data retrieval call binding the contract method 0x1ec622d3.
//
// Solidity: function getUserCertificationTime(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataSession) GetUserCertificationTime(addrUser common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetUserCertificationTime(&_BokerUserData.CallOpts, addrUser)
}

// GetUserCertificationTime is a free data retrieval call binding the contract method 0x1ec622d3.
//
// Solidity: function getUserCertificationTime(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataCallerSession) GetUserCertificationTime(addrUser common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetUserCertificationTime(&_BokerUserData.CallOpts, addrUser)
}

// GetUserPower is a free data retrieval call binding the contract method 0x02931e59.
//
// Solidity: function getUserPower(addrUser address) constant returns(longtermPower uint256, shorttermPower uint256)
func (_BokerUserData *BokerUserDataCaller) GetUserPower(opts *bind.CallOpts, addrUser common.Address) (struct {
	LongtermPower  *big.Int
	ShorttermPower *big.Int
}, error) {
	ret := new(struct {
		LongtermPower  *big.Int
		ShorttermPower *big.Int
	})
	out := ret
	err := _BokerUserData.contract.Call(opts, out, "getUserPower", addrUser)
	return *ret, err
}

// GetUserPower is a free data retrieval call binding the contract method 0x02931e59.
//
// Solidity: function getUserPower(addrUser address) constant returns(longtermPower uint256, shorttermPower uint256)
func (_BokerUserData *BokerUserDataSession) GetUserPower(addrUser common.Address) (struct {
	LongtermPower  *big.Int
	ShorttermPower *big.Int
}, error) {
	return _BokerUserData.Contract.GetUserPower(&_BokerUserData.CallOpts, addrUser)
}

// GetUserPower is a free data retrieval call binding the contract method 0x02931e59.
//
// Solidity: function getUserPower(addrUser address) constant returns(longtermPower uint256, shorttermPower uint256)
func (_BokerUserData *BokerUserDataCallerSession) GetUserPower(addrUser common.Address) (struct {
	LongtermPower  *big.Int
	ShorttermPower *big.Int
}, error) {
	return _BokerUserData.Contract.GetUserPower(&_BokerUserData.CallOpts, addrUser)
}

// GetUserRegisterTime is a free data retrieval call binding the contract method 0x0b0099c9.
//
// Solidity: function getUserRegisterTime(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataCaller) GetUserRegisterTime(opts *bind.CallOpts, addrUser common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "getUserRegisterTime", addrUser)
	return *ret0, err
}

// GetUserRegisterTime is a free data retrieval call binding the contract method 0x0b0099c9.
//
// Solidity: function getUserRegisterTime(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataSession) GetUserRegisterTime(addrUser common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetUserRegisterTime(&_BokerUserData.CallOpts, addrUser)
}

// GetUserRegisterTime is a free data retrieval call binding the contract method 0x0b0099c9.
//
// Solidity: function getUserRegisterTime(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataCallerSession) GetUserRegisterTime(addrUser common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetUserRegisterTime(&_BokerUserData.CallOpts, addrUser)
}

// GetUserUploadCount is a free data retrieval call binding the contract method 0x02f08234.
//
// Solidity: function getUserUploadCount(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataCaller) GetUserUploadCount(opts *bind.CallOpts, addrUser common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "getUserUploadCount", addrUser)
	return *ret0, err
}

// GetUserUploadCount is a free data retrieval call binding the contract method 0x02f08234.
//
// Solidity: function getUserUploadCount(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataSession) GetUserUploadCount(addrUser common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetUserUploadCount(&_BokerUserData.CallOpts, addrUser)
}

// GetUserUploadCount is a free data retrieval call binding the contract method 0x02f08234.
//
// Solidity: function getUserUploadCount(addrUser address) constant returns(uint256)
func (_BokerUserData *BokerUserDataCallerSession) GetUserUploadCount(addrUser common.Address) (*big.Int, error) {
	return _BokerUserData.Contract.GetUserUploadCount(&_BokerUserData.CallOpts, addrUser)
}

// GetUserWatchTime is a free data retrieval call binding the contract method 0xe83c0564.
//
// Solidity: function getUserWatchTime(addrUser address) constant returns(watchTotal uint256, addrDapps address[], fileIds uint256[], watchTimes uint256[])
func (_BokerUserData *BokerUserDataCaller) GetUserWatchTime(opts *bind.CallOpts, addrUser common.Address) (struct {
	WatchTotal *big.Int
	AddrDapps  []common.Address
	FileIds    []*big.Int
	WatchTimes []*big.Int
}, error) {
	ret := new(struct {
		WatchTotal *big.Int
		AddrDapps  []common.Address
		FileIds    []*big.Int
		WatchTimes []*big.Int
	})
	out := ret
	err := _BokerUserData.contract.Call(opts, out, "getUserWatchTime", addrUser)
	return *ret, err
}

// GetUserWatchTime is a free data retrieval call binding the contract method 0xe83c0564.
//
// Solidity: function getUserWatchTime(addrUser address) constant returns(watchTotal uint256, addrDapps address[], fileIds uint256[], watchTimes uint256[])
func (_BokerUserData *BokerUserDataSession) GetUserWatchTime(addrUser common.Address) (struct {
	WatchTotal *big.Int
	AddrDapps  []common.Address
	FileIds    []*big.Int
	WatchTimes []*big.Int
}, error) {
	return _BokerUserData.Contract.GetUserWatchTime(&_BokerUserData.CallOpts, addrUser)
}

// GetUserWatchTime is a free data retrieval call binding the contract method 0xe83c0564.
//
// Solidity: function getUserWatchTime(addrUser address) constant returns(watchTotal uint256, addrDapps address[], fileIds uint256[], watchTimes uint256[])
func (_BokerUserData *BokerUserDataCallerSession) GetUserWatchTime(addrUser common.Address) (struct {
	WatchTotal *big.Int
	AddrDapps  []common.Address
	FileIds    []*big.Int
	WatchTimes []*big.Int
}, error) {
	return _BokerUserData.Contract.GetUserWatchTime(&_BokerUserData.CallOpts, addrUser)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerUserData *BokerUserDataCaller) GlobalConfigInt(opts *bind.CallOpts, key string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "globalConfigInt", key)
	return *ret0, err
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerUserData *BokerUserDataSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerUserData.Contract.GlobalConfigInt(&_BokerUserData.CallOpts, key)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerUserData *BokerUserDataCallerSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerUserData.Contract.GlobalConfigInt(&_BokerUserData.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerUserData *BokerUserDataCaller) GlobalConfigString(opts *bind.CallOpts, key string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "globalConfigString", key)
	return *ret0, err
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerUserData *BokerUserDataSession) GlobalConfigString(key string) (string, error) {
	return _BokerUserData.Contract.GlobalConfigString(&_BokerUserData.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerUserData *BokerUserDataCallerSession) GlobalConfigString(key string) (string, error) {
	return _BokerUserData.Contract.GlobalConfigString(&_BokerUserData.CallOpts, key)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerUserData *BokerUserDataCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerUserData *BokerUserDataSession) Owner() (common.Address, error) {
	return _BokerUserData.Contract.Owner(&_BokerUserData.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerUserData *BokerUserDataCallerSession) Owner() (common.Address, error) {
	return _BokerUserData.Contract.Owner(&_BokerUserData.CallOpts)
}

// UserArray is a free data retrieval call binding the contract method 0x41209af1.
//
// Solidity: function userArray( uint256) constant returns(address)
func (_BokerUserData *BokerUserDataCaller) UserArray(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "userArray", arg0)
	return *ret0, err
}

// UserArray is a free data retrieval call binding the contract method 0x41209af1.
//
// Solidity: function userArray( uint256) constant returns(address)
func (_BokerUserData *BokerUserDataSession) UserArray(arg0 *big.Int) (common.Address, error) {
	return _BokerUserData.Contract.UserArray(&_BokerUserData.CallOpts, arg0)
}

// UserArray is a free data retrieval call binding the contract method 0x41209af1.
//
// Solidity: function userArray( uint256) constant returns(address)
func (_BokerUserData *BokerUserDataCallerSession) UserArray(arg0 *big.Int) (common.Address, error) {
	return _BokerUserData.Contract.UserArray(&_BokerUserData.CallOpts, arg0)
}

// UserCount is a free data retrieval call binding the contract method 0x07973ccf.
//
// Solidity: function userCount() constant returns(uint256)
func (_BokerUserData *BokerUserDataCaller) UserCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "userCount")
	return *ret0, err
}

// UserCount is a free data retrieval call binding the contract method 0x07973ccf.
//
// Solidity: function userCount() constant returns(uint256)
func (_BokerUserData *BokerUserDataSession) UserCount() (*big.Int, error) {
	return _BokerUserData.Contract.UserCount(&_BokerUserData.CallOpts)
}

// UserCount is a free data retrieval call binding the contract method 0x07973ccf.
//
// Solidity: function userCount() constant returns(uint256)
func (_BokerUserData *BokerUserDataCallerSession) UserCount() (*big.Int, error) {
	return _BokerUserData.Contract.UserCount(&_BokerUserData.CallOpts)
}

// Users is a free data retrieval call binding the contract method 0xa87430ba.
//
// Solidity: function users( address) constant returns(addr address, index uint256, registerTime uint256, certificationTime uint256, lastLoginTime uint256, invitedFriendsCount uint256, watchEntryTotal uint256, uploadCount uint256, longtermPower uint256, shorttermPower uint256)
func (_BokerUserData *BokerUserDataCaller) Users(opts *bind.CallOpts, arg0 common.Address) (struct {
	Addr                common.Address
	Index               *big.Int
	RegisterTime        *big.Int
	CertificationTime   *big.Int
	LastLoginTime       *big.Int
	InvitedFriendsCount *big.Int
	WatchEntryTotal     *big.Int
	UploadCount         *big.Int
	LongtermPower       *big.Int
	ShorttermPower      *big.Int
}, error) {
	ret := new(struct {
		Addr                common.Address
		Index               *big.Int
		RegisterTime        *big.Int
		CertificationTime   *big.Int
		LastLoginTime       *big.Int
		InvitedFriendsCount *big.Int
		WatchEntryTotal     *big.Int
		UploadCount         *big.Int
		LongtermPower       *big.Int
		ShorttermPower      *big.Int
	})
	out := ret
	err := _BokerUserData.contract.Call(opts, out, "users", arg0)
	return *ret, err
}

// Users is a free data retrieval call binding the contract method 0xa87430ba.
//
// Solidity: function users( address) constant returns(addr address, index uint256, registerTime uint256, certificationTime uint256, lastLoginTime uint256, invitedFriendsCount uint256, watchEntryTotal uint256, uploadCount uint256, longtermPower uint256, shorttermPower uint256)
func (_BokerUserData *BokerUserDataSession) Users(arg0 common.Address) (struct {
	Addr                common.Address
	Index               *big.Int
	RegisterTime        *big.Int
	CertificationTime   *big.Int
	LastLoginTime       *big.Int
	InvitedFriendsCount *big.Int
	WatchEntryTotal     *big.Int
	UploadCount         *big.Int
	LongtermPower       *big.Int
	ShorttermPower      *big.Int
}, error) {
	return _BokerUserData.Contract.Users(&_BokerUserData.CallOpts, arg0)
}

// Users is a free data retrieval call binding the contract method 0xa87430ba.
//
// Solidity: function users( address) constant returns(addr address, index uint256, registerTime uint256, certificationTime uint256, lastLoginTime uint256, invitedFriendsCount uint256, watchEntryTotal uint256, uploadCount uint256, longtermPower uint256, shorttermPower uint256)
func (_BokerUserData *BokerUserDataCallerSession) Users(arg0 common.Address) (struct {
	Addr                common.Address
	Index               *big.Int
	RegisterTime        *big.Int
	CertificationTime   *big.Int
	LastLoginTime       *big.Int
	InvitedFriendsCount *big.Int
	WatchEntryTotal     *big.Int
	UploadCount         *big.Int
	LongtermPower       *big.Int
	ShorttermPower      *big.Int
}, error) {
	return _BokerUserData.Contract.Users(&_BokerUserData.CallOpts, arg0)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerUserData *BokerUserDataCaller) Version(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerUserData.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerUserData *BokerUserDataSession) Version() (string, error) {
	return _BokerUserData.Contract.Version(&_BokerUserData.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerUserData *BokerUserDataCallerSession) Version() (string, error) {
	return _BokerUserData.Contract.Version(&_BokerUserData.CallOpts)
}

// AddDappBind is a paid mutator transaction binding the contract method 0x055a7f32.
//
// Solidity: function addDappBind(addrUser address, addrDapp address) returns()
func (_BokerUserData *BokerUserDataTransactor) AddDappBind(opts *bind.TransactOpts, addrUser common.Address, addrDapp common.Address) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "addDappBind", addrUser, addrDapp)
}

// AddDappBind is a paid mutator transaction binding the contract method 0x055a7f32.
//
// Solidity: function addDappBind(addrUser address, addrDapp address) returns()
func (_BokerUserData *BokerUserDataSession) AddDappBind(addrUser common.Address, addrDapp common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.AddDappBind(&_BokerUserData.TransactOpts, addrUser, addrDapp)
}

// AddDappBind is a paid mutator transaction binding the contract method 0x055a7f32.
//
// Solidity: function addDappBind(addrUser address, addrDapp address) returns()
func (_BokerUserData *BokerUserDataTransactorSession) AddDappBind(addrUser common.Address, addrDapp common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.AddDappBind(&_BokerUserData.TransactOpts, addrUser, addrDapp)
}

// AddInvitedFriends is a paid mutator transaction binding the contract method 0xf010bb2c.
//
// Solidity: function addInvitedFriends(addrUser address) returns()
func (_BokerUserData *BokerUserDataTransactor) AddInvitedFriends(opts *bind.TransactOpts, addrUser common.Address) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "addInvitedFriends", addrUser)
}

// AddInvitedFriends is a paid mutator transaction binding the contract method 0xf010bb2c.
//
// Solidity: function addInvitedFriends(addrUser address) returns()
func (_BokerUserData *BokerUserDataSession) AddInvitedFriends(addrUser common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.AddInvitedFriends(&_BokerUserData.TransactOpts, addrUser)
}

// AddInvitedFriends is a paid mutator transaction binding the contract method 0xf010bb2c.
//
// Solidity: function addInvitedFriends(addrUser address) returns()
func (_BokerUserData *BokerUserDataTransactorSession) AddInvitedFriends(addrUser common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.AddInvitedFriends(&_BokerUserData.TransactOpts, addrUser)
}

// AddUserUploadCount is a paid mutator transaction binding the contract method 0xcb0d7231.
//
// Solidity: function addUserUploadCount(addrUser address, uploadCount uint256) returns()
func (_BokerUserData *BokerUserDataTransactor) AddUserUploadCount(opts *bind.TransactOpts, addrUser common.Address, uploadCount *big.Int) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "addUserUploadCount", addrUser, uploadCount)
}

// AddUserUploadCount is a paid mutator transaction binding the contract method 0xcb0d7231.
//
// Solidity: function addUserUploadCount(addrUser address, uploadCount uint256) returns()
func (_BokerUserData *BokerUserDataSession) AddUserUploadCount(addrUser common.Address, uploadCount *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.AddUserUploadCount(&_BokerUserData.TransactOpts, addrUser, uploadCount)
}

// AddUserUploadCount is a paid mutator transaction binding the contract method 0xcb0d7231.
//
// Solidity: function addUserUploadCount(addrUser address, uploadCount uint256) returns()
func (_BokerUserData *BokerUserDataTransactorSession) AddUserUploadCount(addrUser common.Address, uploadCount *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.AddUserUploadCount(&_BokerUserData.TransactOpts, addrUser, uploadCount)
}

// AddUserWatchTime is a paid mutator transaction binding the contract method 0xda34ee72.
//
// Solidity: function addUserWatchTime(addrDapp address, addrUser address, fileId uint256, watchTime uint256) returns()
func (_BokerUserData *BokerUserDataTransactor) AddUserWatchTime(opts *bind.TransactOpts, addrDapp common.Address, addrUser common.Address, fileId *big.Int, watchTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "addUserWatchTime", addrDapp, addrUser, fileId, watchTime)
}

// AddUserWatchTime is a paid mutator transaction binding the contract method 0xda34ee72.
//
// Solidity: function addUserWatchTime(addrDapp address, addrUser address, fileId uint256, watchTime uint256) returns()
func (_BokerUserData *BokerUserDataSession) AddUserWatchTime(addrDapp common.Address, addrUser common.Address, fileId *big.Int, watchTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.AddUserWatchTime(&_BokerUserData.TransactOpts, addrDapp, addrUser, fileId, watchTime)
}

// AddUserWatchTime is a paid mutator transaction binding the contract method 0xda34ee72.
//
// Solidity: function addUserWatchTime(addrDapp address, addrUser address, fileId uint256, watchTime uint256) returns()
func (_BokerUserData *BokerUserDataTransactorSession) AddUserWatchTime(addrDapp common.Address, addrUser common.Address, fileId *big.Int, watchTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.AddUserWatchTime(&_BokerUserData.TransactOpts, addrDapp, addrUser, fileId, watchTime)
}

// ClearUserUploadCount is a paid mutator transaction binding the contract method 0x5be3c4bd.
//
// Solidity: function clearUserUploadCount(addrUser address) returns()
func (_BokerUserData *BokerUserDataTransactor) ClearUserUploadCount(opts *bind.TransactOpts, addrUser common.Address) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "clearUserUploadCount", addrUser)
}

// ClearUserUploadCount is a paid mutator transaction binding the contract method 0x5be3c4bd.
//
// Solidity: function clearUserUploadCount(addrUser address) returns()
func (_BokerUserData *BokerUserDataSession) ClearUserUploadCount(addrUser common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.ClearUserUploadCount(&_BokerUserData.TransactOpts, addrUser)
}

// ClearUserUploadCount is a paid mutator transaction binding the contract method 0x5be3c4bd.
//
// Solidity: function clearUserUploadCount(addrUser address) returns()
func (_BokerUserData *BokerUserDataTransactorSession) ClearUserUploadCount(addrUser common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.ClearUserUploadCount(&_BokerUserData.TransactOpts, addrUser)
}

// ClearUserWatchTime is a paid mutator transaction binding the contract method 0x2ad04f7a.
//
// Solidity: function clearUserWatchTime(addrUser address) returns()
func (_BokerUserData *BokerUserDataTransactor) ClearUserWatchTime(opts *bind.TransactOpts, addrUser common.Address) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "clearUserWatchTime", addrUser)
}

// ClearUserWatchTime is a paid mutator transaction binding the contract method 0x2ad04f7a.
//
// Solidity: function clearUserWatchTime(addrUser address) returns()
func (_BokerUserData *BokerUserDataSession) ClearUserWatchTime(addrUser common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.ClearUserWatchTime(&_BokerUserData.TransactOpts, addrUser)
}

// ClearUserWatchTime is a paid mutator transaction binding the contract method 0x2ad04f7a.
//
// Solidity: function clearUserWatchTime(addrUser address) returns()
func (_BokerUserData *BokerUserDataTransactorSession) ClearUserWatchTime(addrUser common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.ClearUserWatchTime(&_BokerUserData.TransactOpts, addrUser)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerUserData *BokerUserDataTransactor) SetManager(opts *bind.TransactOpts, addrManager common.Address) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "setManager", addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerUserData *BokerUserDataSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetManager(&_BokerUserData.TransactOpts, addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerUserData *BokerUserDataTransactorSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetManager(&_BokerUserData.TransactOpts, addrManager)
}

// SetUser is a paid mutator transaction binding the contract method 0x8d3ba203.
//
// Solidity: function setUser(addrUser address, registerTime uint256, invitedFriendsCount uint256, bindedDappAddresses address[], bindedDappTimes uint256[], longtermPower uint256, shorttermPower uint256) returns()
func (_BokerUserData *BokerUserDataTransactor) SetUser(opts *bind.TransactOpts, addrUser common.Address, registerTime *big.Int, invitedFriendsCount *big.Int, bindedDappAddresses []common.Address, bindedDappTimes []*big.Int, longtermPower *big.Int, shorttermPower *big.Int) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "setUser", addrUser, registerTime, invitedFriendsCount, bindedDappAddresses, bindedDappTimes, longtermPower, shorttermPower)
}

// SetUser is a paid mutator transaction binding the contract method 0x8d3ba203.
//
// Solidity: function setUser(addrUser address, registerTime uint256, invitedFriendsCount uint256, bindedDappAddresses address[], bindedDappTimes uint256[], longtermPower uint256, shorttermPower uint256) returns()
func (_BokerUserData *BokerUserDataSession) SetUser(addrUser common.Address, registerTime *big.Int, invitedFriendsCount *big.Int, bindedDappAddresses []common.Address, bindedDappTimes []*big.Int, longtermPower *big.Int, shorttermPower *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUser(&_BokerUserData.TransactOpts, addrUser, registerTime, invitedFriendsCount, bindedDappAddresses, bindedDappTimes, longtermPower, shorttermPower)
}

// SetUser is a paid mutator transaction binding the contract method 0x8d3ba203.
//
// Solidity: function setUser(addrUser address, registerTime uint256, invitedFriendsCount uint256, bindedDappAddresses address[], bindedDappTimes uint256[], longtermPower uint256, shorttermPower uint256) returns()
func (_BokerUserData *BokerUserDataTransactorSession) SetUser(addrUser common.Address, registerTime *big.Int, invitedFriendsCount *big.Int, bindedDappAddresses []common.Address, bindedDappTimes []*big.Int, longtermPower *big.Int, shorttermPower *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUser(&_BokerUserData.TransactOpts, addrUser, registerTime, invitedFriendsCount, bindedDappAddresses, bindedDappTimes, longtermPower, shorttermPower)
}

// SetUserCertificationTime is a paid mutator transaction binding the contract method 0x9bf6a208.
//
// Solidity: function setUserCertificationTime(addrUser address, certificationTime uint256) returns()
func (_BokerUserData *BokerUserDataTransactor) SetUserCertificationTime(opts *bind.TransactOpts, addrUser common.Address, certificationTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "setUserCertificationTime", addrUser, certificationTime)
}

// SetUserCertificationTime is a paid mutator transaction binding the contract method 0x9bf6a208.
//
// Solidity: function setUserCertificationTime(addrUser address, certificationTime uint256) returns()
func (_BokerUserData *BokerUserDataSession) SetUserCertificationTime(addrUser common.Address, certificationTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUserCertificationTime(&_BokerUserData.TransactOpts, addrUser, certificationTime)
}

// SetUserCertificationTime is a paid mutator transaction binding the contract method 0x9bf6a208.
//
// Solidity: function setUserCertificationTime(addrUser address, certificationTime uint256) returns()
func (_BokerUserData *BokerUserDataTransactorSession) SetUserCertificationTime(addrUser common.Address, certificationTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUserCertificationTime(&_BokerUserData.TransactOpts, addrUser, certificationTime)
}

// SetUserLastLoginTime is a paid mutator transaction binding the contract method 0x8c9db12b.
//
// Solidity: function setUserLastLoginTime(addrUser address, loginTime uint256) returns()
func (_BokerUserData *BokerUserDataTransactor) SetUserLastLoginTime(opts *bind.TransactOpts, addrUser common.Address, loginTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "setUserLastLoginTime", addrUser, loginTime)
}

// SetUserLastLoginTime is a paid mutator transaction binding the contract method 0x8c9db12b.
//
// Solidity: function setUserLastLoginTime(addrUser address, loginTime uint256) returns()
func (_BokerUserData *BokerUserDataSession) SetUserLastLoginTime(addrUser common.Address, loginTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUserLastLoginTime(&_BokerUserData.TransactOpts, addrUser, loginTime)
}

// SetUserLastLoginTime is a paid mutator transaction binding the contract method 0x8c9db12b.
//
// Solidity: function setUserLastLoginTime(addrUser address, loginTime uint256) returns()
func (_BokerUserData *BokerUserDataTransactorSession) SetUserLastLoginTime(addrUser common.Address, loginTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUserLastLoginTime(&_BokerUserData.TransactOpts, addrUser, loginTime)
}

// SetUserLongtermPower is a paid mutator transaction binding the contract method 0xda4f6306.
//
// Solidity: function setUserLongtermPower(addrUser address, value uint256) returns()
func (_BokerUserData *BokerUserDataTransactor) SetUserLongtermPower(opts *bind.TransactOpts, addrUser common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "setUserLongtermPower", addrUser, value)
}

// SetUserLongtermPower is a paid mutator transaction binding the contract method 0xda4f6306.
//
// Solidity: function setUserLongtermPower(addrUser address, value uint256) returns()
func (_BokerUserData *BokerUserDataSession) SetUserLongtermPower(addrUser common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUserLongtermPower(&_BokerUserData.TransactOpts, addrUser, value)
}

// SetUserLongtermPower is a paid mutator transaction binding the contract method 0xda4f6306.
//
// Solidity: function setUserLongtermPower(addrUser address, value uint256) returns()
func (_BokerUserData *BokerUserDataTransactorSession) SetUserLongtermPower(addrUser common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUserLongtermPower(&_BokerUserData.TransactOpts, addrUser, value)
}

// SetUserRegisterTime is a paid mutator transaction binding the contract method 0xec3ead48.
//
// Solidity: function setUserRegisterTime(addrUser address, registerTime uint256) returns()
func (_BokerUserData *BokerUserDataTransactor) SetUserRegisterTime(opts *bind.TransactOpts, addrUser common.Address, registerTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "setUserRegisterTime", addrUser, registerTime)
}

// SetUserRegisterTime is a paid mutator transaction binding the contract method 0xec3ead48.
//
// Solidity: function setUserRegisterTime(addrUser address, registerTime uint256) returns()
func (_BokerUserData *BokerUserDataSession) SetUserRegisterTime(addrUser common.Address, registerTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUserRegisterTime(&_BokerUserData.TransactOpts, addrUser, registerTime)
}

// SetUserRegisterTime is a paid mutator transaction binding the contract method 0xec3ead48.
//
// Solidity: function setUserRegisterTime(addrUser address, registerTime uint256) returns()
func (_BokerUserData *BokerUserDataTransactorSession) SetUserRegisterTime(addrUser common.Address, registerTime *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUserRegisterTime(&_BokerUserData.TransactOpts, addrUser, registerTime)
}

// SetUserShorttermPower is a paid mutator transaction binding the contract method 0x2e0bfcdf.
//
// Solidity: function setUserShorttermPower(addrUser address, value uint256) returns()
func (_BokerUserData *BokerUserDataTransactor) SetUserShorttermPower(opts *bind.TransactOpts, addrUser common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "setUserShorttermPower", addrUser, value)
}

// SetUserShorttermPower is a paid mutator transaction binding the contract method 0x2e0bfcdf.
//
// Solidity: function setUserShorttermPower(addrUser address, value uint256) returns()
func (_BokerUserData *BokerUserDataSession) SetUserShorttermPower(addrUser common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUserShorttermPower(&_BokerUserData.TransactOpts, addrUser, value)
}

// SetUserShorttermPower is a paid mutator transaction binding the contract method 0x2e0bfcdf.
//
// Solidity: function setUserShorttermPower(addrUser address, value uint256) returns()
func (_BokerUserData *BokerUserDataTransactorSession) SetUserShorttermPower(addrUser common.Address, value *big.Int) (*types.Transaction, error) {
	return _BokerUserData.Contract.SetUserShorttermPower(&_BokerUserData.TransactOpts, addrUser, value)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerUserData *BokerUserDataTransactor) TransferOwnership(opts *bind.TransactOpts, _newOwner common.Address) (*types.Transaction, error) {
	return _BokerUserData.contract.Transact(opts, "transferOwnership", _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerUserData *BokerUserDataSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.TransferOwnership(&_BokerUserData.TransactOpts, _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerUserData *BokerUserDataTransactorSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerUserData.Contract.TransferOwnership(&_BokerUserData.TransactOpts, _newOwner)
}
