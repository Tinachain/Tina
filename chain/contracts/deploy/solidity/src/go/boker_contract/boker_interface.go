// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package boker_contract

import (
	"math/big"
	"strings"

	"github.com/Tinachain/Tina/chain/accounts/abi"
	"github.com/Tinachain/Tina/chain/accounts/abi/bind"
	"github.com/Tinachain/Tina/chain/common"
	"github.com/Tinachain/Tina/chain/core/types"
)

// BokerInterfaceABI is the input ABI used to generate the binding from.
const BokerInterfaceABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getCandidates\",\"outputs\":[{\"name\":\"addresses\",\"type\":\"address[]\"},{\"name\":\"tickets\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"generalInfoGet\",\"outputs\":[{\"name\":\"userTotal\",\"type\":\"uint256\"},{\"name\":\"tokenAssigned\",\"type\":\"uint256\"},{\"name\":\"tokenToAssign\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uploader\",\"type\":\"address\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"fileId\",\"type\":\"uint256\"},{\"name\":\"ipfsHash\",\"type\":\"string\"},{\"name\":\"ipfsUrl\",\"type\":\"string\"},{\"name\":\"aliDnaFileId\",\"type\":\"string\"}],\"name\":\"addFile\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cName\",\"type\":\"string\"}],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrTo\",\"type\":\"address\"}],\"name\":\"giveTipTo\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"voteCandidate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"registerCandidate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrFrom\",\"type\":\"address\"},{\"name\":\"eventTypes\",\"type\":\"uint256[]\"},{\"name\":\"addrTos\",\"type\":\"address[]\"},{\"name\":\"timestamps\",\"type\":\"uint256[]\"},{\"name\":\"eventValue1s\",\"type\":\"uint256[]\"},{\"name\":\"eventValue2s\",\"type\":\"uint256[]\"}],\"name\":\"fireUserEvents\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bokerManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"longtermPower\",\"type\":\"uint256\"},{\"name\":\"shorttermPower\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"page\",\"type\":\"uint256\"},{\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"userFilesGet\",\"outputs\":[{\"name\":\"fileIds\",\"type\":\"uint256[]\"},{\"name\":\"playCounts\",\"type\":\"uint256[]\"},{\"name\":\"playTimes\",\"type\":\"uint256[]\"},{\"name\":\"userCounts\",\"type\":\"uint256[]\"},{\"name\":\"createTimes\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uploader\",\"type\":\"address\"},{\"name\":\"fileId\",\"type\":\"uint256\"}],\"name\":\"addUserFile\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fileStatisticsDailyGet\",\"outputs\":[{\"name\":\"fileIds\",\"type\":\"uint256[]\"},{\"name\":\"playCounts\",\"type\":\"uint256[]\"},{\"name\":\"playTimes\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dappAddr\",\"type\":\"address\"},{\"name\":\"dappType\",\"type\":\"uint256\"},{\"name\":\"userCount\",\"type\":\"uint256\"},{\"name\":\"monthlySales\",\"type\":\"uint256\"}],\"name\":\"dappSet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"page\",\"type\":\"uint256\"},{\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"userTipLogGet\",\"outputs\":[{\"name\":\"addrUsers\",\"type\":\"address[]\"},{\"name\":\"tokensChanges\",\"type\":\"int256[]\"},{\"name\":\"tokensAfters\",\"type\":\"uint256[]\"},{\"name\":\"times\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrCandidate\",\"type\":\"address\"}],\"name\":\"getCandidate\",\"outputs\":[{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"team\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"tickets\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getUserBindDapp\",\"outputs\":[{\"name\":\"addrDapps\",\"type\":\"address[]\"},{\"name\":\"bindeds\",\"type\":\"bool[]\"},{\"name\":\"powerAdds\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"page\",\"type\":\"uint256\"},{\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"userFinanceLogGet\",\"outputs\":[{\"name\":\"tokensChanges\",\"type\":\"int256[]\"},{\"name\":\"tokensAfters\",\"type\":\"uint256[]\"},{\"name\":\"reasons\",\"type\":\"uint256[]\"},{\"name\":\"times\",\"type\":\"uint256[]\"},{\"name\":\"indexes\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getInvitedFriendsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"fileId\",\"type\":\"uint256\"}],\"name\":\"fileInfoGet\",\"outputs\":[{\"name\":\"uploader\",\"type\":\"address\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"aliDnaFileId\",\"type\":\"string\"},{\"name\":\"ipfsUrl\",\"type\":\"string\"},{\"name\":\"playCount\",\"type\":\"uint256\"},{\"name\":\"playTime\",\"type\":\"uint256\"},{\"name\":\"userCount\",\"type\":\"uint256\"},{\"name\":\"createTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"page\",\"type\":\"uint256\"},{\"name\":\"pageSize\",\"type\":\"uint256\"}],\"name\":\"userPowerLogGet\",\"outputs\":[{\"name\":\"addrDapps\",\"type\":\"address[]\"},{\"name\":\"powerTypes\",\"type\":\"uint256[]\"},{\"name\":\"powerChanges\",\"type\":\"int256[]\"},{\"name\":\"reasons\",\"type\":\"uint256[]\"},{\"name\":\"param1s\",\"type\":\"uint256[]\"},{\"name\":\"times\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isBokerInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigInt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelAllVotes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// BokerInterfaceBin is the compiled bytecode used for deploying new contracts.
const BokerInterfaceBin = ``

// DeployBokerInterface deploys a new Ethereum contract, binding an instance of BokerInterface to it.
func DeployBokerInterface(auth *bind.TransactOpts, backend bind.ContractBackend, addrManager common.Address) (common.Address, *types.Transaction, *BokerInterface, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerInterfaceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BokerInterfaceBin), backend, addrManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BokerInterface{BokerInterfaceCaller: BokerInterfaceCaller{contract: contract}, BokerInterfaceTransactor: BokerInterfaceTransactor{contract: contract}}, nil
}

// BokerInterface is an auto generated Go binding around an Ethereum contract.
type BokerInterface struct {
	BokerInterfaceCaller     // Read-only binding to the contract
	BokerInterfaceTransactor // Write-only binding to the contract
}

// BokerInterfaceCaller is an auto generated read-only Go binding around an Ethereum contract.
type BokerInterfaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerInterfaceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BokerInterfaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerInterfaceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BokerInterfaceSession struct {
	Contract     *BokerInterface   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BokerInterfaceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BokerInterfaceCallerSession struct {
	Contract *BokerInterfaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// BokerInterfaceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BokerInterfaceTransactorSession struct {
	Contract     *BokerInterfaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// BokerInterfaceRaw is an auto generated low-level Go binding around an Ethereum contract.
type BokerInterfaceRaw struct {
	Contract *BokerInterface // Generic contract binding to access the raw methods on
}

// BokerInterfaceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BokerInterfaceCallerRaw struct {
	Contract *BokerInterfaceCaller // Generic read-only contract binding to access the raw methods on
}

// BokerInterfaceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BokerInterfaceTransactorRaw struct {
	Contract *BokerInterfaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBokerInterface creates a new instance of BokerInterface, bound to a specific deployed contract.
func NewBokerInterface(address common.Address, backend bind.ContractBackend) (*BokerInterface, error) {
	contract, err := bindBokerInterface(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BokerInterface{BokerInterfaceCaller: BokerInterfaceCaller{contract: contract}, BokerInterfaceTransactor: BokerInterfaceTransactor{contract: contract}}, nil
}

// NewBokerInterfaceCaller creates a new read-only instance of BokerInterface, bound to a specific deployed contract.
func NewBokerInterfaceCaller(address common.Address, caller bind.ContractCaller) (*BokerInterfaceCaller, error) {
	contract, err := bindBokerInterface(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &BokerInterfaceCaller{contract: contract}, nil
}

// NewBokerInterfaceTransactor creates a new write-only instance of BokerInterface, bound to a specific deployed contract.
func NewBokerInterfaceTransactor(address common.Address, transactor bind.ContractTransactor) (*BokerInterfaceTransactor, error) {
	contract, err := bindBokerInterface(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &BokerInterfaceTransactor{contract: contract}, nil
}

// bindBokerInterface binds a generic wrapper to an already deployed contract.
func bindBokerInterface(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerInterfaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerInterface *BokerInterfaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerInterface.Contract.BokerInterfaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerInterface *BokerInterfaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerInterface.Contract.BokerInterfaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerInterface *BokerInterfaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerInterface.Contract.BokerInterfaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerInterface *BokerInterfaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerInterface.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerInterface *BokerInterfaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerInterface.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerInterface *BokerInterfaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerInterface.Contract.contract.Transact(opts, method, params...)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerInterface *BokerInterfaceCaller) BokerManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "bokerManager")
	return *ret0, err
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerInterface *BokerInterfaceSession) BokerManager() (common.Address, error) {
	return _BokerInterface.Contract.BokerManager(&_BokerInterface.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerInterface *BokerInterfaceCallerSession) BokerManager() (common.Address, error) {
	return _BokerInterface.Contract.BokerManager(&_BokerInterface.CallOpts)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerInterface *BokerInterfaceCaller) ContractAddress(opts *bind.CallOpts, cName string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "contractAddress", cName)
	return *ret0, err
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerInterface *BokerInterfaceSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerInterface.Contract.ContractAddress(&_BokerInterface.CallOpts, cName)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerInterface *BokerInterfaceCallerSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerInterface.Contract.ContractAddress(&_BokerInterface.CallOpts, cName)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerInterface *BokerInterfaceCaller) CreateTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "createTime")
	return *ret0, err
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerInterface *BokerInterfaceSession) CreateTime() (*big.Int, error) {
	return _BokerInterface.Contract.CreateTime(&_BokerInterface.CallOpts)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerInterface *BokerInterfaceCallerSession) CreateTime() (*big.Int, error) {
	return _BokerInterface.Contract.CreateTime(&_BokerInterface.CallOpts)
}

// FileInfoGet is a free data retrieval call binding the contract method 0xd12e1890.
//
// Solidity: function fileInfoGet(fileId uint256) constant returns(uploader address, owner address, aliDnaFileId string, ipfsUrl string, playCount uint256, playTime uint256, userCount uint256, createTime uint256)
func (_BokerInterface *BokerInterfaceCaller) FileInfoGet(opts *bind.CallOpts, fileId *big.Int) (struct {
	Uploader     common.Address
	Owner        common.Address
	AliDnaFileId string
	IpfsUrl      string
	PlayCount    *big.Int
	PlayTime     *big.Int
	UserCount    *big.Int
	CreateTime   *big.Int
}, error) {
	ret := new(struct {
		Uploader     common.Address
		Owner        common.Address
		AliDnaFileId string
		IpfsUrl      string
		PlayCount    *big.Int
		PlayTime     *big.Int
		UserCount    *big.Int
		CreateTime   *big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "fileInfoGet", fileId)
	return *ret, err
}

// FileInfoGet is a free data retrieval call binding the contract method 0xd12e1890.
//
// Solidity: function fileInfoGet(fileId uint256) constant returns(uploader address, owner address, aliDnaFileId string, ipfsUrl string, playCount uint256, playTime uint256, userCount uint256, createTime uint256)
func (_BokerInterface *BokerInterfaceSession) FileInfoGet(fileId *big.Int) (struct {
	Uploader     common.Address
	Owner        common.Address
	AliDnaFileId string
	IpfsUrl      string
	PlayCount    *big.Int
	PlayTime     *big.Int
	UserCount    *big.Int
	CreateTime   *big.Int
}, error) {
	return _BokerInterface.Contract.FileInfoGet(&_BokerInterface.CallOpts, fileId)
}

// FileInfoGet is a free data retrieval call binding the contract method 0xd12e1890.
//
// Solidity: function fileInfoGet(fileId uint256) constant returns(uploader address, owner address, aliDnaFileId string, ipfsUrl string, playCount uint256, playTime uint256, userCount uint256, createTime uint256)
func (_BokerInterface *BokerInterfaceCallerSession) FileInfoGet(fileId *big.Int) (struct {
	Uploader     common.Address
	Owner        common.Address
	AliDnaFileId string
	IpfsUrl      string
	PlayCount    *big.Int
	PlayTime     *big.Int
	UserCount    *big.Int
	CreateTime   *big.Int
}, error) {
	return _BokerInterface.Contract.FileInfoGet(&_BokerInterface.CallOpts, fileId)
}

// FileStatisticsDailyGet is a free data retrieval call binding the contract method 0x80fd797d.
//
// Solidity: function fileStatisticsDailyGet() constant returns(fileIds uint256[], playCounts uint256[], playTimes uint256[])
func (_BokerInterface *BokerInterfaceCaller) FileStatisticsDailyGet(opts *bind.CallOpts) (struct {
	FileIds    []*big.Int
	PlayCounts []*big.Int
	PlayTimes  []*big.Int
}, error) {
	ret := new(struct {
		FileIds    []*big.Int
		PlayCounts []*big.Int
		PlayTimes  []*big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "fileStatisticsDailyGet")
	return *ret, err
}

// FileStatisticsDailyGet is a free data retrieval call binding the contract method 0x80fd797d.
//
// Solidity: function fileStatisticsDailyGet() constant returns(fileIds uint256[], playCounts uint256[], playTimes uint256[])
func (_BokerInterface *BokerInterfaceSession) FileStatisticsDailyGet() (struct {
	FileIds    []*big.Int
	PlayCounts []*big.Int
	PlayTimes  []*big.Int
}, error) {
	return _BokerInterface.Contract.FileStatisticsDailyGet(&_BokerInterface.CallOpts)
}

// FileStatisticsDailyGet is a free data retrieval call binding the contract method 0x80fd797d.
//
// Solidity: function fileStatisticsDailyGet() constant returns(fileIds uint256[], playCounts uint256[], playTimes uint256[])
func (_BokerInterface *BokerInterfaceCallerSession) FileStatisticsDailyGet() (struct {
	FileIds    []*big.Int
	PlayCounts []*big.Int
	PlayTimes  []*big.Int
}, error) {
	return _BokerInterface.Contract.FileStatisticsDailyGet(&_BokerInterface.CallOpts)
}

// GeneralInfoGet is a free data retrieval call binding the contract method 0x076d4af9.
//
// Solidity: function generalInfoGet() constant returns(userTotal uint256, tokenAssigned uint256, tokenToAssign uint256)
func (_BokerInterface *BokerInterfaceCaller) GeneralInfoGet(opts *bind.CallOpts) (struct {
	UserTotal     *big.Int
	TokenAssigned *big.Int
	TokenToAssign *big.Int
}, error) {
	ret := new(struct {
		UserTotal     *big.Int
		TokenAssigned *big.Int
		TokenToAssign *big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "generalInfoGet")
	return *ret, err
}

// GeneralInfoGet is a free data retrieval call binding the contract method 0x076d4af9.
//
// Solidity: function generalInfoGet() constant returns(userTotal uint256, tokenAssigned uint256, tokenToAssign uint256)
func (_BokerInterface *BokerInterfaceSession) GeneralInfoGet() (struct {
	UserTotal     *big.Int
	TokenAssigned *big.Int
	TokenToAssign *big.Int
}, error) {
	return _BokerInterface.Contract.GeneralInfoGet(&_BokerInterface.CallOpts)
}

// GeneralInfoGet is a free data retrieval call binding the contract method 0x076d4af9.
//
// Solidity: function generalInfoGet() constant returns(userTotal uint256, tokenAssigned uint256, tokenToAssign uint256)
func (_BokerInterface *BokerInterfaceCallerSession) GeneralInfoGet() (struct {
	UserTotal     *big.Int
	TokenAssigned *big.Int
	TokenToAssign *big.Int
}, error) {
	return _BokerInterface.Contract.GeneralInfoGet(&_BokerInterface.CallOpts)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerInterface *BokerInterfaceCaller) GetCandidate(opts *bind.CallOpts, addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	ret := new(struct {
		Description string
		Team        string
		Name        string
		Tickets     *big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "getCandidate", addrCandidate)
	return *ret, err
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerInterface *BokerInterfaceSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerInterface.Contract.GetCandidate(&_BokerInterface.CallOpts, addrCandidate)
}

// GetCandidate is a free data retrieval call binding the contract method 0xb7adcf1d.
//
// Solidity: function getCandidate(addrCandidate address) constant returns(description string, team string, name string, tickets uint256)
func (_BokerInterface *BokerInterfaceCallerSession) GetCandidate(addrCandidate common.Address) (struct {
	Description string
	Team        string
	Name        string
	Tickets     *big.Int
}, error) {
	return _BokerInterface.Contract.GetCandidate(&_BokerInterface.CallOpts, addrCandidate)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerInterface *BokerInterfaceCaller) GetCandidates(opts *bind.CallOpts) (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	ret := new(struct {
		Addresses []common.Address
		Tickets   []*big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "getCandidates")
	return *ret, err
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerInterface *BokerInterfaceSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerInterface.Contract.GetCandidates(&_BokerInterface.CallOpts)
}

// GetCandidates is a free data retrieval call binding the contract method 0x06a49fce.
//
// Solidity: function getCandidates() constant returns(addresses address[], tickets uint256[])
func (_BokerInterface *BokerInterfaceCallerSession) GetCandidates() (struct {
	Addresses []common.Address
	Tickets   []*big.Int
}, error) {
	return _BokerInterface.Contract.GetCandidates(&_BokerInterface.CallOpts)
}

// GetInvitedFriendsCount is a free data retrieval call binding the contract method 0xcff86622.
//
// Solidity: function getInvitedFriendsCount(addrUser address) constant returns(uint256)
func (_BokerInterface *BokerInterfaceCaller) GetInvitedFriendsCount(opts *bind.CallOpts, addrUser common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "getInvitedFriendsCount", addrUser)
	return *ret0, err
}

// GetInvitedFriendsCount is a free data retrieval call binding the contract method 0xcff86622.
//
// Solidity: function getInvitedFriendsCount(addrUser address) constant returns(uint256)
func (_BokerInterface *BokerInterfaceSession) GetInvitedFriendsCount(addrUser common.Address) (*big.Int, error) {
	return _BokerInterface.Contract.GetInvitedFriendsCount(&_BokerInterface.CallOpts, addrUser)
}

// GetInvitedFriendsCount is a free data retrieval call binding the contract method 0xcff86622.
//
// Solidity: function getInvitedFriendsCount(addrUser address) constant returns(uint256)
func (_BokerInterface *BokerInterfaceCallerSession) GetInvitedFriendsCount(addrUser common.Address) (*big.Int, error) {
	return _BokerInterface.Contract.GetInvitedFriendsCount(&_BokerInterface.CallOpts, addrUser)
}

// GetUser is a free data retrieval call binding the contract method 0x6f77926b.
//
// Solidity: function getUser(addrUser address) constant returns(balance uint256, longtermPower uint256, shorttermPower uint256)
func (_BokerInterface *BokerInterfaceCaller) GetUser(opts *bind.CallOpts, addrUser common.Address) (struct {
	Balance        *big.Int
	LongtermPower  *big.Int
	ShorttermPower *big.Int
}, error) {
	ret := new(struct {
		Balance        *big.Int
		LongtermPower  *big.Int
		ShorttermPower *big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "getUser", addrUser)
	return *ret, err
}

// GetUser is a free data retrieval call binding the contract method 0x6f77926b.
//
// Solidity: function getUser(addrUser address) constant returns(balance uint256, longtermPower uint256, shorttermPower uint256)
func (_BokerInterface *BokerInterfaceSession) GetUser(addrUser common.Address) (struct {
	Balance        *big.Int
	LongtermPower  *big.Int
	ShorttermPower *big.Int
}, error) {
	return _BokerInterface.Contract.GetUser(&_BokerInterface.CallOpts, addrUser)
}

// GetUser is a free data retrieval call binding the contract method 0x6f77926b.
//
// Solidity: function getUser(addrUser address) constant returns(balance uint256, longtermPower uint256, shorttermPower uint256)
func (_BokerInterface *BokerInterfaceCallerSession) GetUser(addrUser common.Address) (struct {
	Balance        *big.Int
	LongtermPower  *big.Int
	ShorttermPower *big.Int
}, error) {
	return _BokerInterface.Contract.GetUser(&_BokerInterface.CallOpts, addrUser)
}

// GetUserBindDapp is a free data retrieval call binding the contract method 0xb8aa1eb9.
//
// Solidity: function getUserBindDapp(addrUser address) constant returns(addrDapps address[], bindeds bool[], powerAdds uint256[])
func (_BokerInterface *BokerInterfaceCaller) GetUserBindDapp(opts *bind.CallOpts, addrUser common.Address) (struct {
	AddrDapps []common.Address
	Bindeds   []bool
	PowerAdds []*big.Int
}, error) {
	ret := new(struct {
		AddrDapps []common.Address
		Bindeds   []bool
		PowerAdds []*big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "getUserBindDapp", addrUser)
	return *ret, err
}

// GetUserBindDapp is a free data retrieval call binding the contract method 0xb8aa1eb9.
//
// Solidity: function getUserBindDapp(addrUser address) constant returns(addrDapps address[], bindeds bool[], powerAdds uint256[])
func (_BokerInterface *BokerInterfaceSession) GetUserBindDapp(addrUser common.Address) (struct {
	AddrDapps []common.Address
	Bindeds   []bool
	PowerAdds []*big.Int
}, error) {
	return _BokerInterface.Contract.GetUserBindDapp(&_BokerInterface.CallOpts, addrUser)
}

// GetUserBindDapp is a free data retrieval call binding the contract method 0xb8aa1eb9.
//
// Solidity: function getUserBindDapp(addrUser address) constant returns(addrDapps address[], bindeds bool[], powerAdds uint256[])
func (_BokerInterface *BokerInterfaceCallerSession) GetUserBindDapp(addrUser common.Address) (struct {
	AddrDapps []common.Address
	Bindeds   []bool
	PowerAdds []*big.Int
}, error) {
	return _BokerInterface.Contract.GetUserBindDapp(&_BokerInterface.CallOpts, addrUser)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerInterface *BokerInterfaceCaller) GlobalConfigInt(opts *bind.CallOpts, key string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "globalConfigInt", key)
	return *ret0, err
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerInterface *BokerInterfaceSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerInterface.Contract.GlobalConfigInt(&_BokerInterface.CallOpts, key)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerInterface *BokerInterfaceCallerSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerInterface.Contract.GlobalConfigInt(&_BokerInterface.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerInterface *BokerInterfaceCaller) GlobalConfigString(opts *bind.CallOpts, key string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "globalConfigString", key)
	return *ret0, err
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerInterface *BokerInterfaceSession) GlobalConfigString(key string) (string, error) {
	return _BokerInterface.Contract.GlobalConfigString(&_BokerInterface.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerInterface *BokerInterfaceCallerSession) GlobalConfigString(key string) (string, error) {
	return _BokerInterface.Contract.GlobalConfigString(&_BokerInterface.CallOpts, key)
}

// IsBokerInterface is a free data retrieval call binding the contract method 0xd408efb2.
//
// Solidity: function isBokerInterface() constant returns(bool)
func (_BokerInterface *BokerInterfaceCaller) IsBokerInterface(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "isBokerInterface")
	return *ret0, err
}

// IsBokerInterface is a free data retrieval call binding the contract method 0xd408efb2.
//
// Solidity: function isBokerInterface() constant returns(bool)
func (_BokerInterface *BokerInterfaceSession) IsBokerInterface() (bool, error) {
	return _BokerInterface.Contract.IsBokerInterface(&_BokerInterface.CallOpts)
}

// IsBokerInterface is a free data retrieval call binding the contract method 0xd408efb2.
//
// Solidity: function isBokerInterface() constant returns(bool)
func (_BokerInterface *BokerInterfaceCallerSession) IsBokerInterface() (bool, error) {
	return _BokerInterface.Contract.IsBokerInterface(&_BokerInterface.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerInterface *BokerInterfaceCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerInterface *BokerInterfaceSession) Owner() (common.Address, error) {
	return _BokerInterface.Contract.Owner(&_BokerInterface.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerInterface *BokerInterfaceCallerSession) Owner() (common.Address, error) {
	return _BokerInterface.Contract.Owner(&_BokerInterface.CallOpts)
}

// UserFilesGet is a free data retrieval call binding the contract method 0x7244ea32.
//
// Solidity: function userFilesGet(user address, page uint256, pageSize uint256) constant returns(fileIds uint256[], playCounts uint256[], playTimes uint256[], userCounts uint256[], createTimes uint256[])
func (_BokerInterface *BokerInterfaceCaller) UserFilesGet(opts *bind.CallOpts, user common.Address, page *big.Int, pageSize *big.Int) (struct {
	FileIds     []*big.Int
	PlayCounts  []*big.Int
	PlayTimes   []*big.Int
	UserCounts  []*big.Int
	CreateTimes []*big.Int
}, error) {
	ret := new(struct {
		FileIds     []*big.Int
		PlayCounts  []*big.Int
		PlayTimes   []*big.Int
		UserCounts  []*big.Int
		CreateTimes []*big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "userFilesGet", user, page, pageSize)
	return *ret, err
}

// UserFilesGet is a free data retrieval call binding the contract method 0x7244ea32.
//
// Solidity: function userFilesGet(user address, page uint256, pageSize uint256) constant returns(fileIds uint256[], playCounts uint256[], playTimes uint256[], userCounts uint256[], createTimes uint256[])
func (_BokerInterface *BokerInterfaceSession) UserFilesGet(user common.Address, page *big.Int, pageSize *big.Int) (struct {
	FileIds     []*big.Int
	PlayCounts  []*big.Int
	PlayTimes   []*big.Int
	UserCounts  []*big.Int
	CreateTimes []*big.Int
}, error) {
	return _BokerInterface.Contract.UserFilesGet(&_BokerInterface.CallOpts, user, page, pageSize)
}

// UserFilesGet is a free data retrieval call binding the contract method 0x7244ea32.
//
// Solidity: function userFilesGet(user address, page uint256, pageSize uint256) constant returns(fileIds uint256[], playCounts uint256[], playTimes uint256[], userCounts uint256[], createTimes uint256[])
func (_BokerInterface *BokerInterfaceCallerSession) UserFilesGet(user common.Address, page *big.Int, pageSize *big.Int) (struct {
	FileIds     []*big.Int
	PlayCounts  []*big.Int
	PlayTimes   []*big.Int
	UserCounts  []*big.Int
	CreateTimes []*big.Int
}, error) {
	return _BokerInterface.Contract.UserFilesGet(&_BokerInterface.CallOpts, user, page, pageSize)
}

// UserFinanceLogGet is a free data retrieval call binding the contract method 0xc7e552a8.
//
// Solidity: function userFinanceLogGet(addrUser address, page uint256, pageSize uint256) constant returns(tokensChanges int256[], tokensAfters uint256[], reasons uint256[], times uint256[], indexes uint256[])
func (_BokerInterface *BokerInterfaceCaller) UserFinanceLogGet(opts *bind.CallOpts, addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Reasons       []*big.Int
	Times         []*big.Int
	Indexes       []*big.Int
}, error) {
	ret := new(struct {
		TokensChanges []*big.Int
		TokensAfters  []*big.Int
		Reasons       []*big.Int
		Times         []*big.Int
		Indexes       []*big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "userFinanceLogGet", addrUser, page, pageSize)
	return *ret, err
}

// UserFinanceLogGet is a free data retrieval call binding the contract method 0xc7e552a8.
//
// Solidity: function userFinanceLogGet(addrUser address, page uint256, pageSize uint256) constant returns(tokensChanges int256[], tokensAfters uint256[], reasons uint256[], times uint256[], indexes uint256[])
func (_BokerInterface *BokerInterfaceSession) UserFinanceLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Reasons       []*big.Int
	Times         []*big.Int
	Indexes       []*big.Int
}, error) {
	return _BokerInterface.Contract.UserFinanceLogGet(&_BokerInterface.CallOpts, addrUser, page, pageSize)
}

// UserFinanceLogGet is a free data retrieval call binding the contract method 0xc7e552a8.
//
// Solidity: function userFinanceLogGet(addrUser address, page uint256, pageSize uint256) constant returns(tokensChanges int256[], tokensAfters uint256[], reasons uint256[], times uint256[], indexes uint256[])
func (_BokerInterface *BokerInterfaceCallerSession) UserFinanceLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Reasons       []*big.Int
	Times         []*big.Int
	Indexes       []*big.Int
}, error) {
	return _BokerInterface.Contract.UserFinanceLogGet(&_BokerInterface.CallOpts, addrUser, page, pageSize)
}

// UserPowerLogGet is a free data retrieval call binding the contract method 0xd226fcab.
//
// Solidity: function userPowerLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrDapps address[], powerTypes uint256[], powerChanges int256[], reasons uint256[], param1s uint256[], times uint256[])
func (_BokerInterface *BokerInterfaceCaller) UserPowerLogGet(opts *bind.CallOpts, addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrDapps    []common.Address
	PowerTypes   []*big.Int
	PowerChanges []*big.Int
	Reasons      []*big.Int
	Param1s      []*big.Int
	Times        []*big.Int
}, error) {
	ret := new(struct {
		AddrDapps    []common.Address
		PowerTypes   []*big.Int
		PowerChanges []*big.Int
		Reasons      []*big.Int
		Param1s      []*big.Int
		Times        []*big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "userPowerLogGet", addrUser, page, pageSize)
	return *ret, err
}

// UserPowerLogGet is a free data retrieval call binding the contract method 0xd226fcab.
//
// Solidity: function userPowerLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrDapps address[], powerTypes uint256[], powerChanges int256[], reasons uint256[], param1s uint256[], times uint256[])
func (_BokerInterface *BokerInterfaceSession) UserPowerLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrDapps    []common.Address
	PowerTypes   []*big.Int
	PowerChanges []*big.Int
	Reasons      []*big.Int
	Param1s      []*big.Int
	Times        []*big.Int
}, error) {
	return _BokerInterface.Contract.UserPowerLogGet(&_BokerInterface.CallOpts, addrUser, page, pageSize)
}

// UserPowerLogGet is a free data retrieval call binding the contract method 0xd226fcab.
//
// Solidity: function userPowerLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrDapps address[], powerTypes uint256[], powerChanges int256[], reasons uint256[], param1s uint256[], times uint256[])
func (_BokerInterface *BokerInterfaceCallerSession) UserPowerLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrDapps    []common.Address
	PowerTypes   []*big.Int
	PowerChanges []*big.Int
	Reasons      []*big.Int
	Param1s      []*big.Int
	Times        []*big.Int
}, error) {
	return _BokerInterface.Contract.UserPowerLogGet(&_BokerInterface.CallOpts, addrUser, page, pageSize)
}

// UserTipLogGet is a free data retrieval call binding the contract method 0xa98215fb.
//
// Solidity: function userTipLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrUsers address[], tokensChanges int256[], tokensAfters uint256[], times uint256[])
func (_BokerInterface *BokerInterfaceCaller) UserTipLogGet(opts *bind.CallOpts, addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrUsers     []common.Address
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Times         []*big.Int
}, error) {
	ret := new(struct {
		AddrUsers     []common.Address
		TokensChanges []*big.Int
		TokensAfters  []*big.Int
		Times         []*big.Int
	})
	out := ret
	err := _BokerInterface.contract.Call(opts, out, "userTipLogGet", addrUser, page, pageSize)
	return *ret, err
}

// UserTipLogGet is a free data retrieval call binding the contract method 0xa98215fb.
//
// Solidity: function userTipLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrUsers address[], tokensChanges int256[], tokensAfters uint256[], times uint256[])
func (_BokerInterface *BokerInterfaceSession) UserTipLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrUsers     []common.Address
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Times         []*big.Int
}, error) {
	return _BokerInterface.Contract.UserTipLogGet(&_BokerInterface.CallOpts, addrUser, page, pageSize)
}

// UserTipLogGet is a free data retrieval call binding the contract method 0xa98215fb.
//
// Solidity: function userTipLogGet(addrUser address, page uint256, pageSize uint256) constant returns(addrUsers address[], tokensChanges int256[], tokensAfters uint256[], times uint256[])
func (_BokerInterface *BokerInterfaceCallerSession) UserTipLogGet(addrUser common.Address, page *big.Int, pageSize *big.Int) (struct {
	AddrUsers     []common.Address
	TokensChanges []*big.Int
	TokensAfters  []*big.Int
	Times         []*big.Int
}, error) {
	return _BokerInterface.Contract.UserTipLogGet(&_BokerInterface.CallOpts, addrUser, page, pageSize)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerInterface *BokerInterfaceCaller) Version(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerInterface.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerInterface *BokerInterfaceSession) Version() (string, error) {
	return _BokerInterface.Contract.Version(&_BokerInterface.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerInterface *BokerInterfaceCallerSession) Version() (string, error) {
	return _BokerInterface.Contract.Version(&_BokerInterface.CallOpts)
}

// AddFile is a paid mutator transaction binding the contract method 0x13ba0d3b.
//
// Solidity: function addFile(uploader address, owner address, fileId uint256, ipfsHash string, ipfsUrl string, aliDnaFileId string) returns()
func (_BokerInterface *BokerInterfaceTransactor) AddFile(opts *bind.TransactOpts, uploader common.Address, owner common.Address, fileId *big.Int, ipfsHash string, ipfsUrl string, aliDnaFileId string) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "addFile", uploader, owner, fileId, ipfsHash, ipfsUrl, aliDnaFileId)
}

// AddFile is a paid mutator transaction binding the contract method 0x13ba0d3b.
//
// Solidity: function addFile(uploader address, owner address, fileId uint256, ipfsHash string, ipfsUrl string, aliDnaFileId string) returns()
func (_BokerInterface *BokerInterfaceSession) AddFile(uploader common.Address, owner common.Address, fileId *big.Int, ipfsHash string, ipfsUrl string, aliDnaFileId string) (*types.Transaction, error) {
	return _BokerInterface.Contract.AddFile(&_BokerInterface.TransactOpts, uploader, owner, fileId, ipfsHash, ipfsUrl, aliDnaFileId)
}

// AddFile is a paid mutator transaction binding the contract method 0x13ba0d3b.
//
// Solidity: function addFile(uploader address, owner address, fileId uint256, ipfsHash string, ipfsUrl string, aliDnaFileId string) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) AddFile(uploader common.Address, owner common.Address, fileId *big.Int, ipfsHash string, ipfsUrl string, aliDnaFileId string) (*types.Transaction, error) {
	return _BokerInterface.Contract.AddFile(&_BokerInterface.TransactOpts, uploader, owner, fileId, ipfsHash, ipfsUrl, aliDnaFileId)
}

// AddUserFile is a paid mutator transaction binding the contract method 0x7d8f980d.
//
// Solidity: function addUserFile(uploader address, fileId uint256) returns()
func (_BokerInterface *BokerInterfaceTransactor) AddUserFile(opts *bind.TransactOpts, uploader common.Address, fileId *big.Int) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "addUserFile", uploader, fileId)
}

// AddUserFile is a paid mutator transaction binding the contract method 0x7d8f980d.
//
// Solidity: function addUserFile(uploader address, fileId uint256) returns()
func (_BokerInterface *BokerInterfaceSession) AddUserFile(uploader common.Address, fileId *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.AddUserFile(&_BokerInterface.TransactOpts, uploader, fileId)
}

// AddUserFile is a paid mutator transaction binding the contract method 0x7d8f980d.
//
// Solidity: function addUserFile(uploader address, fileId uint256) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) AddUserFile(uploader common.Address, fileId *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.AddUserFile(&_BokerInterface.TransactOpts, uploader, fileId)
}

// CancelAllVotes is a paid mutator transaction binding the contract method 0xf49f9df8.
//
// Solidity: function cancelAllVotes() returns()
func (_BokerInterface *BokerInterfaceTransactor) CancelAllVotes(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "cancelAllVotes")
}

// CancelAllVotes is a paid mutator transaction binding the contract method 0xf49f9df8.
//
// Solidity: function cancelAllVotes() returns()
func (_BokerInterface *BokerInterfaceSession) CancelAllVotes() (*types.Transaction, error) {
	return _BokerInterface.Contract.CancelAllVotes(&_BokerInterface.TransactOpts)
}

// CancelAllVotes is a paid mutator transaction binding the contract method 0xf49f9df8.
//
// Solidity: function cancelAllVotes() returns()
func (_BokerInterface *BokerInterfaceTransactorSession) CancelAllVotes() (*types.Transaction, error) {
	return _BokerInterface.Contract.CancelAllVotes(&_BokerInterface.TransactOpts)
}

// DappSet is a paid mutator transaction binding the contract method 0x8759bde8.
//
// Solidity: function dappSet(dappAddr address, dappType uint256, userCount uint256, monthlySales uint256) returns()
func (_BokerInterface *BokerInterfaceTransactor) DappSet(opts *bind.TransactOpts, dappAddr common.Address, dappType *big.Int, userCount *big.Int, monthlySales *big.Int) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "dappSet", dappAddr, dappType, userCount, monthlySales)
}

// DappSet is a paid mutator transaction binding the contract method 0x8759bde8.
//
// Solidity: function dappSet(dappAddr address, dappType uint256, userCount uint256, monthlySales uint256) returns()
func (_BokerInterface *BokerInterfaceSession) DappSet(dappAddr common.Address, dappType *big.Int, userCount *big.Int, monthlySales *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.DappSet(&_BokerInterface.TransactOpts, dappAddr, dappType, userCount, monthlySales)
}

// DappSet is a paid mutator transaction binding the contract method 0x8759bde8.
//
// Solidity: function dappSet(dappAddr address, dappType uint256, userCount uint256, monthlySales uint256) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) DappSet(dappAddr common.Address, dappType *big.Int, userCount *big.Int, monthlySales *big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.DappSet(&_BokerInterface.TransactOpts, dappAddr, dappType, userCount, monthlySales)
}

// FireUserEvents is a paid mutator transaction binding the contract method 0x6049cdc8.
//
// Solidity: function fireUserEvents(addrFrom address, eventTypes uint256[], addrTos address[], timestamps uint256[], eventValue1s uint256[], eventValue2s uint256[]) returns()
func (_BokerInterface *BokerInterfaceTransactor) FireUserEvents(opts *bind.TransactOpts, addrFrom common.Address, eventTypes []*big.Int, addrTos []common.Address, timestamps []*big.Int, eventValue1s []*big.Int, eventValue2s []*big.Int) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "fireUserEvents", addrFrom, eventTypes, addrTos, timestamps, eventValue1s, eventValue2s)
}

// FireUserEvents is a paid mutator transaction binding the contract method 0x6049cdc8.
//
// Solidity: function fireUserEvents(addrFrom address, eventTypes uint256[], addrTos address[], timestamps uint256[], eventValue1s uint256[], eventValue2s uint256[]) returns()
func (_BokerInterface *BokerInterfaceSession) FireUserEvents(addrFrom common.Address, eventTypes []*big.Int, addrTos []common.Address, timestamps []*big.Int, eventValue1s []*big.Int, eventValue2s []*big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.FireUserEvents(&_BokerInterface.TransactOpts, addrFrom, eventTypes, addrTos, timestamps, eventValue1s, eventValue2s)
}

// FireUserEvents is a paid mutator transaction binding the contract method 0x6049cdc8.
//
// Solidity: function fireUserEvents(addrFrom address, eventTypes uint256[], addrTos address[], timestamps uint256[], eventValue1s uint256[], eventValue2s uint256[]) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) FireUserEvents(addrFrom common.Address, eventTypes []*big.Int, addrTos []common.Address, timestamps []*big.Int, eventValue1s []*big.Int, eventValue2s []*big.Int) (*types.Transaction, error) {
	return _BokerInterface.Contract.FireUserEvents(&_BokerInterface.TransactOpts, addrFrom, eventTypes, addrTos, timestamps, eventValue1s, eventValue2s)
}

// GiveTipTo is a paid mutator transaction binding the contract method 0x20ceb6f2.
//
// Solidity: function giveTipTo(addrTo address) returns()
func (_BokerInterface *BokerInterfaceTransactor) GiveTipTo(opts *bind.TransactOpts, addrTo common.Address) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "giveTipTo", addrTo)
}

// GiveTipTo is a paid mutator transaction binding the contract method 0x20ceb6f2.
//
// Solidity: function giveTipTo(addrTo address) returns()
func (_BokerInterface *BokerInterfaceSession) GiveTipTo(addrTo common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.GiveTipTo(&_BokerInterface.TransactOpts, addrTo)
}

// GiveTipTo is a paid mutator transaction binding the contract method 0x20ceb6f2.
//
// Solidity: function giveTipTo(addrTo address) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) GiveTipTo(addrTo common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.GiveTipTo(&_BokerInterface.TransactOpts, addrTo)
}

// RegisterCandidate is a paid mutator transaction binding the contract method 0x35c3c876.
//
// Solidity: function registerCandidate(description string, team string, name string) returns()
func (_BokerInterface *BokerInterfaceTransactor) RegisterCandidate(opts *bind.TransactOpts, description string, team string, name string) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "registerCandidate", description, team, name)
}

// RegisterCandidate is a paid mutator transaction binding the contract method 0x35c3c876.
//
// Solidity: function registerCandidate(description string, team string, name string) returns()
func (_BokerInterface *BokerInterfaceSession) RegisterCandidate(description string, team string, name string) (*types.Transaction, error) {
	return _BokerInterface.Contract.RegisterCandidate(&_BokerInterface.TransactOpts, description, team, name)
}

// RegisterCandidate is a paid mutator transaction binding the contract method 0x35c3c876.
//
// Solidity: function registerCandidate(description string, team string, name string) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) RegisterCandidate(description string, team string, name string) (*types.Transaction, error) {
	return _BokerInterface.Contract.RegisterCandidate(&_BokerInterface.TransactOpts, description, team, name)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerInterface *BokerInterfaceTransactor) SetManager(opts *bind.TransactOpts, addrManager common.Address) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "setManager", addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerInterface *BokerInterfaceSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.SetManager(&_BokerInterface.TransactOpts, addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.SetManager(&_BokerInterface.TransactOpts, addrManager)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerInterface *BokerInterfaceTransactor) TransferOwnership(opts *bind.TransactOpts, _newOwner common.Address) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "transferOwnership", _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerInterface *BokerInterfaceSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.TransferOwnership(&_BokerInterface.TransactOpts, _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.TransferOwnership(&_BokerInterface.TransactOpts, _newOwner)
}

// VoteCandidate is a paid mutator transaction binding the contract method 0x26bb886d.
//
// Solidity: function voteCandidate(addrCandidate address) returns()
func (_BokerInterface *BokerInterfaceTransactor) VoteCandidate(opts *bind.TransactOpts, addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerInterface.contract.Transact(opts, "voteCandidate", addrCandidate)
}

// VoteCandidate is a paid mutator transaction binding the contract method 0x26bb886d.
//
// Solidity: function voteCandidate(addrCandidate address) returns()
func (_BokerInterface *BokerInterfaceSession) VoteCandidate(addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.VoteCandidate(&_BokerInterface.TransactOpts, addrCandidate)
}

// VoteCandidate is a paid mutator transaction binding the contract method 0x26bb886d.
//
// Solidity: function voteCandidate(addrCandidate address) returns()
func (_BokerInterface *BokerInterfaceTransactorSession) VoteCandidate(addrCandidate common.Address) (*types.Transaction, error) {
	return _BokerInterface.Contract.VoteCandidate(&_BokerInterface.TransactOpts, addrCandidate)
}
