// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package boker_contract

import (
	"math/big"
	"strings"

	"github.com/Tinachain/Tina/chain/accounts/abi"
	"github.com/Tinachain/Tina/chain/accounts/abi/bind"
	"github.com/Tinachain/Tina/chain/common"
	"github.com/Tinachain/Tina/chain/core/types"
)

// BokerUserABI is the input ABI used to generate the binding from.
const BokerUserABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"userCount\",\"outputs\":[{\"name\":\"total\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrDapp\",\"type\":\"address\"},{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"reason\",\"type\":\"uint8\"},{\"name\":\"param1\",\"type\":\"uint256\"}],\"name\":\"clearUserShorttermPower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"cName\",\"type\":\"string\"}],\"name\":\"contractAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrTo\",\"type\":\"address\"}],\"name\":\"giveTipTo\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bokerManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"},{\"name\":\"longtermPower\",\"type\":\"uint256\"},{\"name\":\"shorttermPower\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrTo\",\"type\":\"address\"},{\"name\":\"reason\",\"type\":\"uint256\"}],\"name\":\"transferTokenTo\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrDapp\",\"type\":\"address\"},{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"reason\",\"type\":\"uint8\"},{\"name\":\"param1\",\"type\":\"uint256\"}],\"name\":\"increaseUserShorttermPower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"registerTime\",\"type\":\"uint256\"},{\"name\":\"invitedFriendsCount\",\"type\":\"uint256\"},{\"name\":\"bindedDappAddresses\",\"type\":\"address[]\"},{\"name\":\"bindedDappTimes\",\"type\":\"uint256[]\"},{\"name\":\"longtermPower\",\"type\":\"uint256\"},{\"name\":\"shorttermPower\",\"type\":\"uint256\"}],\"name\":\"setUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrDapp\",\"type\":\"address\"},{\"name\":\"addrFrom\",\"type\":\"address\"},{\"name\":\"eventType\",\"type\":\"uint256\"},{\"name\":\"addrTo\",\"type\":\"address\"},{\"name\":\"timestamp\",\"type\":\"uint256\"},{\"name\":\"eventValue1\",\"type\":\"uint256\"},{\"name\":\"eventValue2\",\"type\":\"uint256\"}],\"name\":\"onUserEvent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getUserBindDapp\",\"outputs\":[{\"name\":\"addrDapps\",\"type\":\"address[]\"},{\"name\":\"bindeds\",\"type\":\"bool[]\"},{\"name\":\"powerAdds\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addrUser\",\"type\":\"address\"}],\"name\":\"getInvitedFriendsCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"string\"}],\"name\":\"globalConfigInt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addrDapp\",\"type\":\"address\"},{\"name\":\"addrUser\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"reason\",\"type\":\"uint8\"},{\"name\":\"param1\",\"type\":\"uint256\"}],\"name\":\"increaseUserLongtermPower\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addrManager\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}]"

// BokerUserBin is the compiled bytecode used for deploying new contracts.
const BokerUserBin = `60806040526040805190810160405280600581526020017f312e302e3100000000000000000000000000000000000000000000000000000081525060019080519060200190620000519291906200024b565b50426002553480156200006357600080fd5b50604051602080620044d38339810180604052810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000e281620000ea640100000000026401000000009004565b5050620002fa565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156200015457600080fd5b505af115801562000169573d6000803e3d6000fd5b505050506040513d60208110156200018057600080fd5b8101908080519060200190929190505050151562000206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028e57805160ff1916838001178555620002bf565b82800160010185558215620002bf579182015b82811115620002be578251825591602001919060010190620002a1565b5b509050620002ce9190620002d2565b5090565b620002f791905b80821115620002f3576000816000905550600101620002d9565b5090565b90565b6141c9806200030a6000396000f300608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307973ccf146101175780630fecd2b9146101425780631eb726af146101bc57806320ceb6f214610265578063378298bc1461029b57806354fd4d501461037d57806361dcd7ab1461040d57806366ebc1c6146104385780636f77926b1461048f5780638144650a146104f457806384424509146105345780638d3ba203146105b85780638da5cb5b146106535780639e1628aa146106aa578063b8aa1eb914610755578063cff866221461087d578063d0ebdbe7146108d4578063d43c802114610917578063f2fde38b14610994578063fe2084ff146109d7575b600080fd5b34801561012357600080fd5b5061012c610a5b565b6040518082815260200191505060405180910390f35b34801561014e57600080fd5b506101ba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff16906020019092919080359060200190929190505050610b3e565b005b3480156101c857600080fd5b50610223600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611293565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610299600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611541565b005b3480156102a757600080fd5b50610302600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061160a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610342578082015181840152602081019050610327565b50505050905090810190601f16801561036f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561038957600080fd5b5061039261179a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103d25780820151818401526020810190506103b7565b50505050905090810190601f1680156103ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561041957600080fd5b50610422611838565b6040518082815260200191505060405180910390f35b34801561044457600080fd5b5061044d61183e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049b57600080fd5b506104d0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611864565b60405180848152602001838152602001828152602001935050505060405180910390f35b610532600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a3b565b005b34801561054057600080fd5b506105b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803560ff16906020019092919080359060200190929190505050611c08565b005b3480156105c457600080fd5b50610651600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019082018035906020019190919293919293908035906020019082018035906020019190919293919293908035906020019092919080359060200190929190505050612352565b005b34801561065f57600080fd5b50610668612866565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106b657600080fd5b50610753600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919050505061288b565b005b34801561076157600080fd5b50610796600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613016565b60405180806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156107e15780820151818401526020810190506107c6565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015610823578082015181840152602081019050610808565b50505050905001848103825285818151815260200191508051906020019060200280838360005b8381101561086557808201518184015260208101905061084a565b50505050905001965050505050505060405180910390f35b34801561088957600080fd5b506108be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506134a6565b6040518082815260200191505060405180910390f35b3480156108e057600080fd5b50610915600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506135c2565b005b34801561092357600080fd5b5061097e600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050613629565b6040518082815260200191505060405180910390f35b3480156109a057600080fd5b506109d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613763565b005b3480156109e357600080fd5b50610a59600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803560ff169060200190929190803590602001909291905050506137ca565b005b6000610a9b6040805190810160405280600d81526020017f426f6b6572557365724461746100000000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff166307973ccf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610afe57600080fd5b505af1158015610b12573d6000803e3d6000fd5b505050506040513d6020811015610b2857600080fd5b8101908080519060200190929190505050905090565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015610c53578082015181840152602081019050610c38565b50505050905090810190601f168015610c805780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015610ca057600080fd5b505af1158015610cb4573d6000803e3d6000fd5b505050506040513d6020811015610cca57600080fd5b810190808051906020019092919050505080610e7c5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015610df3578082015181840152602081019050610dd8565b50505050905090810190601f168015610e205780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015610e4057600080fd5b505af1158015610e54573d6000803e3d6000fd5b505050506040513d6020811015610e6a57600080fd5b81019080805190602001909291905050505b1515610ef0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b610f0f8573ffffffffffffffffffffffffffffffffffffffff16613f15565b15610f195761128b565b610f576040805190810160405280600d81526020017f426f6b6572557365724461746100000000000000000000000000000000000000815250611293565b91508173ffffffffffffffffffffffffffffffffffffffff166302931e59866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506040805180830381600087803b158015610ff357600080fd5b505af1158015611007573d6000803e3d6000fd5b505050506040513d604081101561101d57600080fd5b81019080805190602001909291908051906020019092919050505091505060008114156110495761128b565b8173ffffffffffffffffffffffffffffffffffffffff16632e0bfcdf8660006040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156110ed57600080fd5b505af1158015611101573d6000803e3d6000fd5b505050506111436040805190810160405280600881526020017f426f6b65724c6f67000000000000000000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff1663cffc35f6878760018081111561116c57fe5b857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0260008a600981111561119d57fe5b8a6040518863ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001848152602001838152602001828152602001975050505050505050600060405180830381600087803b15801561127257600080fd5b505af1158015611286573d6000803e3d6000fd5b505050505b505050505050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fca1f3c1846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611340578082015181840152602081019050611325565b50505050905090810190601f16801561136d5780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561138c57600080fd5b505af11580156113a0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060a08110156113ca57600080fd5b810190808051906020019092919080516401000000008111156113ec57600080fd5b8281019050602081018481111561140257600080fd5b815185600182028301116401000000008211171561141f57600080fd5b505092919060200180519060200190929190805164010000000081111561144557600080fd5b8281019050602081018481111561145b57600080fd5b815185600182028301116401000000008211171561147857600080fd5b505092919060200180519060200190929190505050505092505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f616464722069732030210000000000000000000000000000000000000000000081525060200191505060405180910390fd5b80915050919050565b3073ffffffffffffffffffffffffffffffffffffffff16638144650a8260078081111561156a57fe5b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156115ef57600080fd5b505af1158015611603573d6000803e3d6000fd5b5050505050565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634a189f35836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116b657808201518184015260208101905061169b565b50505050905090810190601f1680156116e35780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b15801561170257600080fd5b505af1158015611716573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561174057600080fd5b81019080805164010000000081111561175857600080fd5b8281019050602081018481111561176e57600080fd5b815185600182028301116401000000008211171561178b57600080fd5b50509291905050509050919050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118305780601f1061180557610100808354040283529160200191611830565b820191906000526020600020905b81548152906001019060200180831161181357829003601f168201915b505050505081565b60025481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060006118a76040805190810160405280600d81526020017f426f6b6572557365724461746100000000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff1663a87430ba856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505061014060405180830381600087803b15801561194257600080fd5b505af1158015611956573d6000803e3d6000fd5b505050506040513d61014081101561196d57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915080925081935050508373ffffffffffffffffffffffffffffffffffffffff163182829250925092509193909250565b600034111515611a4a57611c04565b8173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015611a90573d6000803e3d6000fd5b50611acf6040805190810160405280600881526020017f426f6b65724c6f67000000000000000000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff1663854bb3223384343373ffffffffffffffffffffffffffffffffffffffff16318773ffffffffffffffffffffffffffffffffffffffff1631876040518763ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019650505050505050600060405180830381600087803b158015611beb57600080fd5b505af1158015611bff573d6000803e3d6000fd5b505050505b5050565b6000806000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015611d1f578082015181840152602081019050611d04565b50505050905090810190601f168015611d4c5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015611d6c57600080fd5b505af1158015611d80573d6000803e3d6000fd5b505050506040513d6020811015611d9657600080fd5b810190808051906020019092919050505080611f485750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015611ebf578082015181840152602081019050611ea4565b50505050905090810190601f168015611eec5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015611f0c57600080fd5b505af1158015611f20573d6000803e3d6000fd5b505050506040513d6020811015611f3657600080fd5b81019080805190602001909291905050505b1515611fbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b611fdb8773ffffffffffffffffffffffffffffffffffffffff16613f15565b15611fe557612348565b6000861415611ff357612348565b6120316040805190810160405280600d81526020017f426f6b6572557365724461746100000000000000000000000000000000000000815250611293565b92508273ffffffffffffffffffffffffffffffffffffffff166302931e59886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506040805180830381600087803b1580156120cd57600080fd5b505af11580156120e1573d6000803e3d6000fd5b505050506040513d60408110156120f757600080fd5b8101908080519060200190929190805190602001909291905050509250506121288683613f2890919063ffffffff16565b90508273ffffffffffffffffffffffffffffffffffffffff16632e0bfcdf88836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156121cd57600080fd5b505af11580156121e1573d6000803e3d6000fd5b505050506122236040805190810160405280600881526020017f426f6b65724c6f67000000000000000000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff1663cffc35f6898960018081111561224c57fe5b8a868b600981111561225a57fe5b8b6040518863ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001848152602001838152602001828152602001975050505050505050600060405180830381600087803b15801561232f57600080fd5b505af1158015612343573d6000803e3d6000fd5b505050505b5050505050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015612464578082015181840152602081019050612449565b50505050905090810190601f1680156124915780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156124b157600080fd5b505af11580156124c5573d6000803e3d6000fd5b505050506040513d60208110156124db57600080fd5b81019080805190602001909291905050508061268d5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b838110156126045780820151818401526020810190506125e9565b50505050905090810190601f1680156126315780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561265157600080fd5b505af1158015612665573d6000803e3d6000fd5b505050506040513d602081101561267b57600080fd5b81019080805190602001909291905050505b1515612701576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b61273f6040805190810160405280600d81526020017f426f6b6572557365724461746100000000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff16638d3ba2038a8a8a8a8a8a8a8a8a6040518a63ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001898152602001888152602001806020018060200185815260200184815260200183810383528989828181526020019250602002808284378201915050838103825287878281815260200192506020028082843782019150509b505050505050505050505050600060405180830381600087803b15801561284357600080fd5b505af1158015612857573d6000803e3d6000fd5b50505050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101561299d578082015181840152602081019050612982565b50505050905090810190601f1680156129ca5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156129ea57600080fd5b505af11580156129fe573d6000803e3d6000fd5b505050506040513d6020811015612a1457600080fd5b810190808051906020019092919050505080612bc65750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015612b3d578082015181840152602081019050612b22565b50505050905090810190601f168015612b6a5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612b8a57600080fd5b505af1158015612b9e573d6000803e3d6000fd5b505050506040513d6020811015612bb457600080fd5b81019080805190602001909291905050505b1515612c3a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b600680811115612c4657fe5b85101515612c535761300d565b612c728673ffffffffffffffffffffffffffffffffffffffff16613f15565b80612c985750612c978473ffffffffffffffffffffffffffffffffffffffff16613f15565b5b15612ca25761300d565b612ce06040805190810160405280600f81526020017f426f6b6572546f6b656e506f7765720000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff16635d07fe038888886006811115612d0957fe5b888888886040518863ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866006811115612dac57fe5b60ff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001975050505050505050602060405180830381600087803b158015612e1b57600080fd5b505af1158015612e2f573d6000803e3d6000fd5b505050506040513d6020811015612e4557600080fd5b810190808051906020019092919050505050612e956040805190810160405280600981526020017f426f6b657246696c650000000000000000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff16635d07fe038888886006811115612ebe57fe5b888888886040518863ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001866006811115612f6157fe5b60ff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001975050505050505050602060405180830381600087803b158015612fd057600080fd5b505af1158015612fe4573d6000803e3d6000fd5b505050506040513d6020811015612ffa57600080fd5b8101908080519060200190929190505050505b50505050505050565b606080606060008060008061305f6040805190810160405280600981526020017f426f6b6572446170700000000000000000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff1663cdf100556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156130c257600080fd5b505af11580156130d6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561310057600080fd5b81019080805164010000000081111561311857600080fd5b8281019050602081018481111561312e57600080fd5b815185602082028301116401000000008211171561314b57600080fd5b5050929190505050965086519350836040519080825280602002602001820160405280156131885781602001602082028038833980820191505090505b509550836040519080825280602002602001820160405280156131ba5781602001602082028038833980820191505090505b509450600092505b8383101561349b5786838151811015156131d857fe5b9060200190602002015191506000905060006132286040805190810160405280600d81526020017f426f6b6572557365724461746100000000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff1663c1ffc01b8a856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1580156132f657600080fd5b505af115801561330a573d6000803e3d6000fd5b505050506040513d602081101561332057600080fd5b8101908080519060200190929190505050111561333c57600190505b80868481518110151561334b57fe5b906020019060200201901515908115158152505061339d6040805190810160405280601381526020017f426f6b6572546f6b656e506f7765724461746100000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff166397810091836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561343757600080fd5b505af115801561344b573d6000803e3d6000fd5b505050506040513d602081101561346157600080fd5b8101908080519060200190929190505050858481518110151561348057fe5b906020019060200201818152505082806001019350506131c2565b505050509193909250565b60006134e66040805190810160405280600d81526020017f426f6b6572557365724461746100000000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff1663cff86622836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561358057600080fd5b505af1158015613594573d6000803e3d6000fd5b505050506040513d60208110156135aa57600080fd5b81019080805190602001909291905050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561361d57600080fd5b61362681613f46565b50565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633230b078836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156136d55780820151818401526020810190506136ba565b50505050905090810190601f1680156137025780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561372157600080fd5b505af1158015613735573d6000803e3d6000fd5b505050506040513d602081101561374b57600080fd5b81019080805190602001909291905050509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156137be57600080fd5b6137c7816140a3565b50565b6000806000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600581526020017f61646d696e000000000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b838110156138e15780820151818401526020810190506138c6565b50505050905090810190601f16801561390e5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561392e57600080fd5b505af1158015613942573d6000803e3d6000fd5b505050506040513d602081101561395857600080fd5b810190808051906020019092919050505080613b0a5750600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d909fb1b6040805190810160405280600881526020017f636f6e7472616374000000000000000000000000000000000000000000000000815250336040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015613a81578082015181840152602081019050613a66565b50505050905090810190601f168015613aae5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015613ace57600080fd5b505af1158015613ae2573d6000803e3d6000fd5b505050506040513d6020811015613af857600080fd5b81019080805190602001909291905050505b1515613b7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6e6f7420617574686f72697a656421000000000000000000000000000000000081525060200191505060405180910390fd5b613b9d8773ffffffffffffffffffffffffffffffffffffffff16613f15565b15613ba757613f0b565b6000861415613bb557613f0b565b613bf36040805190810160405280600d81526020017f426f6b6572557365724461746100000000000000000000000000000000000000815250611293565b92508273ffffffffffffffffffffffffffffffffffffffff166302931e59886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506040805180830381600087803b158015613c8f57600080fd5b505af1158015613ca3573d6000803e3d6000fd5b505050506040513d6040811015613cb957600080fd5b810190808051906020019092919080519060200190929190505050509150613cea8683613f2890919063ffffffff16565b90508273ffffffffffffffffffffffffffffffffffffffff1663da4f630688836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015613d8f57600080fd5b505af1158015613da3573d6000803e3d6000fd5b50505050613de56040805190810160405280600881526020017f426f6b65724c6f67000000000000000000000000000000000000000000000000815250611293565b73ffffffffffffffffffffffffffffffffffffffff1663cffc35f6898960006001811115613e0f57fe5b8a868b6009811115613e1d57fe5b8b6040518863ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001848152602001838152602001828152602001975050505050505050600060405180830381600087803b158015613ef257600080fd5b505af1158015613f06573d6000803e3d6000fd5b505050505b5050505050505050565b600080823b905060008111915050919050565b6000808284019050838110151515613f3c57fe5b8091505092915050565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663519c28826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015613faf57600080fd5b505af1158015613fc3573d6000803e3d6000fd5b505050506040513d6020811015613fd957600080fd5b8101908080519060200190929190505050151561405e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6e6f7420426f6b65724d616e616765722100000000000000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156140df57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820163abbfebe3b8f57705b4b17b5527da6641f6a151a6f1d63a4dc19a8da98d2fb0029`

// DeployBokerUser deploys a new Ethereum contract, binding an instance of BokerUser to it.
func DeployBokerUser(auth *bind.TransactOpts, backend bind.ContractBackend, addrManager common.Address) (common.Address, *types.Transaction, *BokerUser, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerUserABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BokerUserBin), backend, addrManager)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BokerUser{BokerUserCaller: BokerUserCaller{contract: contract}, BokerUserTransactor: BokerUserTransactor{contract: contract}}, nil
}

// BokerUser is an auto generated Go binding around an Ethereum contract.
type BokerUser struct {
	BokerUserCaller     // Read-only binding to the contract
	BokerUserTransactor // Write-only binding to the contract
}

// BokerUserCaller is an auto generated read-only Go binding around an Ethereum contract.
type BokerUserCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerUserTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BokerUserTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BokerUserSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BokerUserSession struct {
	Contract     *BokerUser        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BokerUserCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BokerUserCallerSession struct {
	Contract *BokerUserCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// BokerUserTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BokerUserTransactorSession struct {
	Contract     *BokerUserTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// BokerUserRaw is an auto generated low-level Go binding around an Ethereum contract.
type BokerUserRaw struct {
	Contract *BokerUser // Generic contract binding to access the raw methods on
}

// BokerUserCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BokerUserCallerRaw struct {
	Contract *BokerUserCaller // Generic read-only contract binding to access the raw methods on
}

// BokerUserTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BokerUserTransactorRaw struct {
	Contract *BokerUserTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBokerUser creates a new instance of BokerUser, bound to a specific deployed contract.
func NewBokerUser(address common.Address, backend bind.ContractBackend) (*BokerUser, error) {
	contract, err := bindBokerUser(address, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BokerUser{BokerUserCaller: BokerUserCaller{contract: contract}, BokerUserTransactor: BokerUserTransactor{contract: contract}}, nil
}

// NewBokerUserCaller creates a new read-only instance of BokerUser, bound to a specific deployed contract.
func NewBokerUserCaller(address common.Address, caller bind.ContractCaller) (*BokerUserCaller, error) {
	contract, err := bindBokerUser(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &BokerUserCaller{contract: contract}, nil
}

// NewBokerUserTransactor creates a new write-only instance of BokerUser, bound to a specific deployed contract.
func NewBokerUserTransactor(address common.Address, transactor bind.ContractTransactor) (*BokerUserTransactor, error) {
	contract, err := bindBokerUser(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &BokerUserTransactor{contract: contract}, nil
}

// bindBokerUser binds a generic wrapper to an already deployed contract.
func bindBokerUser(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BokerUserABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerUser *BokerUserRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerUser.Contract.BokerUserCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerUser *BokerUserRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerUser.Contract.BokerUserTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerUser *BokerUserRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerUser.Contract.BokerUserTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BokerUser *BokerUserCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BokerUser.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BokerUser *BokerUserTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BokerUser.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BokerUser *BokerUserTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BokerUser.Contract.contract.Transact(opts, method, params...)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerUser *BokerUserCaller) BokerManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerUser.contract.Call(opts, out, "bokerManager")
	return *ret0, err
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerUser *BokerUserSession) BokerManager() (common.Address, error) {
	return _BokerUser.Contract.BokerManager(&_BokerUser.CallOpts)
}

// BokerManager is a free data retrieval call binding the contract method 0x66ebc1c6.
//
// Solidity: function bokerManager() constant returns(address)
func (_BokerUser *BokerUserCallerSession) BokerManager() (common.Address, error) {
	return _BokerUser.Contract.BokerManager(&_BokerUser.CallOpts)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerUser *BokerUserCaller) ContractAddress(opts *bind.CallOpts, cName string) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerUser.contract.Call(opts, out, "contractAddress", cName)
	return *ret0, err
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerUser *BokerUserSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerUser.Contract.ContractAddress(&_BokerUser.CallOpts, cName)
}

// ContractAddress is a free data retrieval call binding the contract method 0x1eb726af.
//
// Solidity: function contractAddress(cName string) constant returns(address)
func (_BokerUser *BokerUserCallerSession) ContractAddress(cName string) (common.Address, error) {
	return _BokerUser.Contract.ContractAddress(&_BokerUser.CallOpts, cName)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerUser *BokerUserCaller) CreateTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUser.contract.Call(opts, out, "createTime")
	return *ret0, err
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerUser *BokerUserSession) CreateTime() (*big.Int, error) {
	return _BokerUser.Contract.CreateTime(&_BokerUser.CallOpts)
}

// CreateTime is a free data retrieval call binding the contract method 0x61dcd7ab.
//
// Solidity: function createTime() constant returns(uint256)
func (_BokerUser *BokerUserCallerSession) CreateTime() (*big.Int, error) {
	return _BokerUser.Contract.CreateTime(&_BokerUser.CallOpts)
}

// GetInvitedFriendsCount is a free data retrieval call binding the contract method 0xcff86622.
//
// Solidity: function getInvitedFriendsCount(addrUser address) constant returns(uint256)
func (_BokerUser *BokerUserCaller) GetInvitedFriendsCount(opts *bind.CallOpts, addrUser common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUser.contract.Call(opts, out, "getInvitedFriendsCount", addrUser)
	return *ret0, err
}

// GetInvitedFriendsCount is a free data retrieval call binding the contract method 0xcff86622.
//
// Solidity: function getInvitedFriendsCount(addrUser address) constant returns(uint256)
func (_BokerUser *BokerUserSession) GetInvitedFriendsCount(addrUser common.Address) (*big.Int, error) {
	return _BokerUser.Contract.GetInvitedFriendsCount(&_BokerUser.CallOpts, addrUser)
}

// GetInvitedFriendsCount is a free data retrieval call binding the contract method 0xcff86622.
//
// Solidity: function getInvitedFriendsCount(addrUser address) constant returns(uint256)
func (_BokerUser *BokerUserCallerSession) GetInvitedFriendsCount(addrUser common.Address) (*big.Int, error) {
	return _BokerUser.Contract.GetInvitedFriendsCount(&_BokerUser.CallOpts, addrUser)
}

// GetUser is a free data retrieval call binding the contract method 0x6f77926b.
//
// Solidity: function getUser(addrUser address) constant returns(balance uint256, longtermPower uint256, shorttermPower uint256)
func (_BokerUser *BokerUserCaller) GetUser(opts *bind.CallOpts, addrUser common.Address) (struct {
	Balance        *big.Int
	LongtermPower  *big.Int
	ShorttermPower *big.Int
}, error) {
	ret := new(struct {
		Balance        *big.Int
		LongtermPower  *big.Int
		ShorttermPower *big.Int
	})
	out := ret
	err := _BokerUser.contract.Call(opts, out, "getUser", addrUser)
	return *ret, err
}

// GetUser is a free data retrieval call binding the contract method 0x6f77926b.
//
// Solidity: function getUser(addrUser address) constant returns(balance uint256, longtermPower uint256, shorttermPower uint256)
func (_BokerUser *BokerUserSession) GetUser(addrUser common.Address) (struct {
	Balance        *big.Int
	LongtermPower  *big.Int
	ShorttermPower *big.Int
}, error) {
	return _BokerUser.Contract.GetUser(&_BokerUser.CallOpts, addrUser)
}

// GetUser is a free data retrieval call binding the contract method 0x6f77926b.
//
// Solidity: function getUser(addrUser address) constant returns(balance uint256, longtermPower uint256, shorttermPower uint256)
func (_BokerUser *BokerUserCallerSession) GetUser(addrUser common.Address) (struct {
	Balance        *big.Int
	LongtermPower  *big.Int
	ShorttermPower *big.Int
}, error) {
	return _BokerUser.Contract.GetUser(&_BokerUser.CallOpts, addrUser)
}

// GetUserBindDapp is a free data retrieval call binding the contract method 0xb8aa1eb9.
//
// Solidity: function getUserBindDapp(addrUser address) constant returns(addrDapps address[], bindeds bool[], powerAdds uint256[])
func (_BokerUser *BokerUserCaller) GetUserBindDapp(opts *bind.CallOpts, addrUser common.Address) (struct {
	AddrDapps []common.Address
	Bindeds   []bool
	PowerAdds []*big.Int
}, error) {
	ret := new(struct {
		AddrDapps []common.Address
		Bindeds   []bool
		PowerAdds []*big.Int
	})
	out := ret
	err := _BokerUser.contract.Call(opts, out, "getUserBindDapp", addrUser)
	return *ret, err
}

// GetUserBindDapp is a free data retrieval call binding the contract method 0xb8aa1eb9.
//
// Solidity: function getUserBindDapp(addrUser address) constant returns(addrDapps address[], bindeds bool[], powerAdds uint256[])
func (_BokerUser *BokerUserSession) GetUserBindDapp(addrUser common.Address) (struct {
	AddrDapps []common.Address
	Bindeds   []bool
	PowerAdds []*big.Int
}, error) {
	return _BokerUser.Contract.GetUserBindDapp(&_BokerUser.CallOpts, addrUser)
}

// GetUserBindDapp is a free data retrieval call binding the contract method 0xb8aa1eb9.
//
// Solidity: function getUserBindDapp(addrUser address) constant returns(addrDapps address[], bindeds bool[], powerAdds uint256[])
func (_BokerUser *BokerUserCallerSession) GetUserBindDapp(addrUser common.Address) (struct {
	AddrDapps []common.Address
	Bindeds   []bool
	PowerAdds []*big.Int
}, error) {
	return _BokerUser.Contract.GetUserBindDapp(&_BokerUser.CallOpts, addrUser)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerUser *BokerUserCaller) GlobalConfigInt(opts *bind.CallOpts, key string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUser.contract.Call(opts, out, "globalConfigInt", key)
	return *ret0, err
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerUser *BokerUserSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerUser.Contract.GlobalConfigInt(&_BokerUser.CallOpts, key)
}

// GlobalConfigInt is a free data retrieval call binding the contract method 0xd43c8021.
//
// Solidity: function globalConfigInt(key string) constant returns(uint256)
func (_BokerUser *BokerUserCallerSession) GlobalConfigInt(key string) (*big.Int, error) {
	return _BokerUser.Contract.GlobalConfigInt(&_BokerUser.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerUser *BokerUserCaller) GlobalConfigString(opts *bind.CallOpts, key string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerUser.contract.Call(opts, out, "globalConfigString", key)
	return *ret0, err
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerUser *BokerUserSession) GlobalConfigString(key string) (string, error) {
	return _BokerUser.Contract.GlobalConfigString(&_BokerUser.CallOpts, key)
}

// GlobalConfigString is a free data retrieval call binding the contract method 0x378298bc.
//
// Solidity: function globalConfigString(key string) constant returns(string)
func (_BokerUser *BokerUserCallerSession) GlobalConfigString(key string) (string, error) {
	return _BokerUser.Contract.GlobalConfigString(&_BokerUser.CallOpts, key)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerUser *BokerUserCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BokerUser.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerUser *BokerUserSession) Owner() (common.Address, error) {
	return _BokerUser.Contract.Owner(&_BokerUser.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BokerUser *BokerUserCallerSession) Owner() (common.Address, error) {
	return _BokerUser.Contract.Owner(&_BokerUser.CallOpts)
}

// UserCount is a free data retrieval call binding the contract method 0x07973ccf.
//
// Solidity: function userCount() constant returns(total uint256)
func (_BokerUser *BokerUserCaller) UserCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BokerUser.contract.Call(opts, out, "userCount")
	return *ret0, err
}

// UserCount is a free data retrieval call binding the contract method 0x07973ccf.
//
// Solidity: function userCount() constant returns(total uint256)
func (_BokerUser *BokerUserSession) UserCount() (*big.Int, error) {
	return _BokerUser.Contract.UserCount(&_BokerUser.CallOpts)
}

// UserCount is a free data retrieval call binding the contract method 0x07973ccf.
//
// Solidity: function userCount() constant returns(total uint256)
func (_BokerUser *BokerUserCallerSession) UserCount() (*big.Int, error) {
	return _BokerUser.Contract.UserCount(&_BokerUser.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerUser *BokerUserCaller) Version(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BokerUser.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerUser *BokerUserSession) Version() (string, error) {
	return _BokerUser.Contract.Version(&_BokerUser.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(string)
func (_BokerUser *BokerUserCallerSession) Version() (string, error) {
	return _BokerUser.Contract.Version(&_BokerUser.CallOpts)
}

// ClearUserShorttermPower is a paid mutator transaction binding the contract method 0x0fecd2b9.
//
// Solidity: function clearUserShorttermPower(addrDapp address, addrUser address, reason uint8, param1 uint256) returns()
func (_BokerUser *BokerUserTransactor) ClearUserShorttermPower(opts *bind.TransactOpts, addrDapp common.Address, addrUser common.Address, reason uint8, param1 *big.Int) (*types.Transaction, error) {
	return _BokerUser.contract.Transact(opts, "clearUserShorttermPower", addrDapp, addrUser, reason, param1)
}

// ClearUserShorttermPower is a paid mutator transaction binding the contract method 0x0fecd2b9.
//
// Solidity: function clearUserShorttermPower(addrDapp address, addrUser address, reason uint8, param1 uint256) returns()
func (_BokerUser *BokerUserSession) ClearUserShorttermPower(addrDapp common.Address, addrUser common.Address, reason uint8, param1 *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.ClearUserShorttermPower(&_BokerUser.TransactOpts, addrDapp, addrUser, reason, param1)
}

// ClearUserShorttermPower is a paid mutator transaction binding the contract method 0x0fecd2b9.
//
// Solidity: function clearUserShorttermPower(addrDapp address, addrUser address, reason uint8, param1 uint256) returns()
func (_BokerUser *BokerUserTransactorSession) ClearUserShorttermPower(addrDapp common.Address, addrUser common.Address, reason uint8, param1 *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.ClearUserShorttermPower(&_BokerUser.TransactOpts, addrDapp, addrUser, reason, param1)
}

// GiveTipTo is a paid mutator transaction binding the contract method 0x20ceb6f2.
//
// Solidity: function giveTipTo(addrTo address) returns()
func (_BokerUser *BokerUserTransactor) GiveTipTo(opts *bind.TransactOpts, addrTo common.Address) (*types.Transaction, error) {
	return _BokerUser.contract.Transact(opts, "giveTipTo", addrTo)
}

// GiveTipTo is a paid mutator transaction binding the contract method 0x20ceb6f2.
//
// Solidity: function giveTipTo(addrTo address) returns()
func (_BokerUser *BokerUserSession) GiveTipTo(addrTo common.Address) (*types.Transaction, error) {
	return _BokerUser.Contract.GiveTipTo(&_BokerUser.TransactOpts, addrTo)
}

// GiveTipTo is a paid mutator transaction binding the contract method 0x20ceb6f2.
//
// Solidity: function giveTipTo(addrTo address) returns()
func (_BokerUser *BokerUserTransactorSession) GiveTipTo(addrTo common.Address) (*types.Transaction, error) {
	return _BokerUser.Contract.GiveTipTo(&_BokerUser.TransactOpts, addrTo)
}

// IncreaseUserLongtermPower is a paid mutator transaction binding the contract method 0xfe2084ff.
//
// Solidity: function increaseUserLongtermPower(addrDapp address, addrUser address, value uint256, reason uint8, param1 uint256) returns()
func (_BokerUser *BokerUserTransactor) IncreaseUserLongtermPower(opts *bind.TransactOpts, addrDapp common.Address, addrUser common.Address, value *big.Int, reason uint8, param1 *big.Int) (*types.Transaction, error) {
	return _BokerUser.contract.Transact(opts, "increaseUserLongtermPower", addrDapp, addrUser, value, reason, param1)
}

// IncreaseUserLongtermPower is a paid mutator transaction binding the contract method 0xfe2084ff.
//
// Solidity: function increaseUserLongtermPower(addrDapp address, addrUser address, value uint256, reason uint8, param1 uint256) returns()
func (_BokerUser *BokerUserSession) IncreaseUserLongtermPower(addrDapp common.Address, addrUser common.Address, value *big.Int, reason uint8, param1 *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.IncreaseUserLongtermPower(&_BokerUser.TransactOpts, addrDapp, addrUser, value, reason, param1)
}

// IncreaseUserLongtermPower is a paid mutator transaction binding the contract method 0xfe2084ff.
//
// Solidity: function increaseUserLongtermPower(addrDapp address, addrUser address, value uint256, reason uint8, param1 uint256) returns()
func (_BokerUser *BokerUserTransactorSession) IncreaseUserLongtermPower(addrDapp common.Address, addrUser common.Address, value *big.Int, reason uint8, param1 *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.IncreaseUserLongtermPower(&_BokerUser.TransactOpts, addrDapp, addrUser, value, reason, param1)
}

// IncreaseUserShorttermPower is a paid mutator transaction binding the contract method 0x84424509.
//
// Solidity: function increaseUserShorttermPower(addrDapp address, addrUser address, value uint256, reason uint8, param1 uint256) returns()
func (_BokerUser *BokerUserTransactor) IncreaseUserShorttermPower(opts *bind.TransactOpts, addrDapp common.Address, addrUser common.Address, value *big.Int, reason uint8, param1 *big.Int) (*types.Transaction, error) {
	return _BokerUser.contract.Transact(opts, "increaseUserShorttermPower", addrDapp, addrUser, value, reason, param1)
}

// IncreaseUserShorttermPower is a paid mutator transaction binding the contract method 0x84424509.
//
// Solidity: function increaseUserShorttermPower(addrDapp address, addrUser address, value uint256, reason uint8, param1 uint256) returns()
func (_BokerUser *BokerUserSession) IncreaseUserShorttermPower(addrDapp common.Address, addrUser common.Address, value *big.Int, reason uint8, param1 *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.IncreaseUserShorttermPower(&_BokerUser.TransactOpts, addrDapp, addrUser, value, reason, param1)
}

// IncreaseUserShorttermPower is a paid mutator transaction binding the contract method 0x84424509.
//
// Solidity: function increaseUserShorttermPower(addrDapp address, addrUser address, value uint256, reason uint8, param1 uint256) returns()
func (_BokerUser *BokerUserTransactorSession) IncreaseUserShorttermPower(addrDapp common.Address, addrUser common.Address, value *big.Int, reason uint8, param1 *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.IncreaseUserShorttermPower(&_BokerUser.TransactOpts, addrDapp, addrUser, value, reason, param1)
}

// OnUserEvent is a paid mutator transaction binding the contract method 0x9e1628aa.
//
// Solidity: function onUserEvent(addrDapp address, addrFrom address, eventType uint256, addrTo address, timestamp uint256, eventValue1 uint256, eventValue2 uint256) returns()
func (_BokerUser *BokerUserTransactor) OnUserEvent(opts *bind.TransactOpts, addrDapp common.Address, addrFrom common.Address, eventType *big.Int, addrTo common.Address, timestamp *big.Int, eventValue1 *big.Int, eventValue2 *big.Int) (*types.Transaction, error) {
	return _BokerUser.contract.Transact(opts, "onUserEvent", addrDapp, addrFrom, eventType, addrTo, timestamp, eventValue1, eventValue2)
}

// OnUserEvent is a paid mutator transaction binding the contract method 0x9e1628aa.
//
// Solidity: function onUserEvent(addrDapp address, addrFrom address, eventType uint256, addrTo address, timestamp uint256, eventValue1 uint256, eventValue2 uint256) returns()
func (_BokerUser *BokerUserSession) OnUserEvent(addrDapp common.Address, addrFrom common.Address, eventType *big.Int, addrTo common.Address, timestamp *big.Int, eventValue1 *big.Int, eventValue2 *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.OnUserEvent(&_BokerUser.TransactOpts, addrDapp, addrFrom, eventType, addrTo, timestamp, eventValue1, eventValue2)
}

// OnUserEvent is a paid mutator transaction binding the contract method 0x9e1628aa.
//
// Solidity: function onUserEvent(addrDapp address, addrFrom address, eventType uint256, addrTo address, timestamp uint256, eventValue1 uint256, eventValue2 uint256) returns()
func (_BokerUser *BokerUserTransactorSession) OnUserEvent(addrDapp common.Address, addrFrom common.Address, eventType *big.Int, addrTo common.Address, timestamp *big.Int, eventValue1 *big.Int, eventValue2 *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.OnUserEvent(&_BokerUser.TransactOpts, addrDapp, addrFrom, eventType, addrTo, timestamp, eventValue1, eventValue2)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerUser *BokerUserTransactor) SetManager(opts *bind.TransactOpts, addrManager common.Address) (*types.Transaction, error) {
	return _BokerUser.contract.Transact(opts, "setManager", addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerUser *BokerUserSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerUser.Contract.SetManager(&_BokerUser.TransactOpts, addrManager)
}

// SetManager is a paid mutator transaction binding the contract method 0xd0ebdbe7.
//
// Solidity: function setManager(addrManager address) returns()
func (_BokerUser *BokerUserTransactorSession) SetManager(addrManager common.Address) (*types.Transaction, error) {
	return _BokerUser.Contract.SetManager(&_BokerUser.TransactOpts, addrManager)
}

// SetUser is a paid mutator transaction binding the contract method 0x8d3ba203.
//
// Solidity: function setUser(addrUser address, registerTime uint256, invitedFriendsCount uint256, bindedDappAddresses address[], bindedDappTimes uint256[], longtermPower uint256, shorttermPower uint256) returns()
func (_BokerUser *BokerUserTransactor) SetUser(opts *bind.TransactOpts, addrUser common.Address, registerTime *big.Int, invitedFriendsCount *big.Int, bindedDappAddresses []common.Address, bindedDappTimes []*big.Int, longtermPower *big.Int, shorttermPower *big.Int) (*types.Transaction, error) {
	return _BokerUser.contract.Transact(opts, "setUser", addrUser, registerTime, invitedFriendsCount, bindedDappAddresses, bindedDappTimes, longtermPower, shorttermPower)
}

// SetUser is a paid mutator transaction binding the contract method 0x8d3ba203.
//
// Solidity: function setUser(addrUser address, registerTime uint256, invitedFriendsCount uint256, bindedDappAddresses address[], bindedDappTimes uint256[], longtermPower uint256, shorttermPower uint256) returns()
func (_BokerUser *BokerUserSession) SetUser(addrUser common.Address, registerTime *big.Int, invitedFriendsCount *big.Int, bindedDappAddresses []common.Address, bindedDappTimes []*big.Int, longtermPower *big.Int, shorttermPower *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.SetUser(&_BokerUser.TransactOpts, addrUser, registerTime, invitedFriendsCount, bindedDappAddresses, bindedDappTimes, longtermPower, shorttermPower)
}

// SetUser is a paid mutator transaction binding the contract method 0x8d3ba203.
//
// Solidity: function setUser(addrUser address, registerTime uint256, invitedFriendsCount uint256, bindedDappAddresses address[], bindedDappTimes uint256[], longtermPower uint256, shorttermPower uint256) returns()
func (_BokerUser *BokerUserTransactorSession) SetUser(addrUser common.Address, registerTime *big.Int, invitedFriendsCount *big.Int, bindedDappAddresses []common.Address, bindedDappTimes []*big.Int, longtermPower *big.Int, shorttermPower *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.SetUser(&_BokerUser.TransactOpts, addrUser, registerTime, invitedFriendsCount, bindedDappAddresses, bindedDappTimes, longtermPower, shorttermPower)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerUser *BokerUserTransactor) TransferOwnership(opts *bind.TransactOpts, _newOwner common.Address) (*types.Transaction, error) {
	return _BokerUser.contract.Transact(opts, "transferOwnership", _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerUser *BokerUserSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerUser.Contract.TransferOwnership(&_BokerUser.TransactOpts, _newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(_newOwner address) returns()
func (_BokerUser *BokerUserTransactorSession) TransferOwnership(_newOwner common.Address) (*types.Transaction, error) {
	return _BokerUser.Contract.TransferOwnership(&_BokerUser.TransactOpts, _newOwner)
}

// TransferTokenTo is a paid mutator transaction binding the contract method 0x8144650a.
//
// Solidity: function transferTokenTo(addrTo address, reason uint256) returns()
func (_BokerUser *BokerUserTransactor) TransferTokenTo(opts *bind.TransactOpts, addrTo common.Address, reason *big.Int) (*types.Transaction, error) {
	return _BokerUser.contract.Transact(opts, "transferTokenTo", addrTo, reason)
}

// TransferTokenTo is a paid mutator transaction binding the contract method 0x8144650a.
//
// Solidity: function transferTokenTo(addrTo address, reason uint256) returns()
func (_BokerUser *BokerUserSession) TransferTokenTo(addrTo common.Address, reason *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.TransferTokenTo(&_BokerUser.TransactOpts, addrTo, reason)
}

// TransferTokenTo is a paid mutator transaction binding the contract method 0x8144650a.
//
// Solidity: function transferTokenTo(addrTo address, reason uint256) returns()
func (_BokerUser *BokerUserTransactorSession) TransferTokenTo(addrTo common.Address, reason *big.Int) (*types.Transaction, error) {
	return _BokerUser.Contract.TransferTokenTo(&_BokerUser.TransactOpts, addrTo, reason)
}
